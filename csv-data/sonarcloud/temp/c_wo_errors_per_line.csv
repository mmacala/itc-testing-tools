File,LineStart,LineEnd,Error
buffer_underrun_dynamic.c,524,524,Change this loop body so that it can be executed more than once.
buffer_underrun_dynamic.c,723,723,Array access results in a null pointer dereference
buffer_underrun_dynamic.c,723,723,Use of memory after it is freed
dead_code.c,130,130,loop will run at most once (loop increment never executed)
dead_code.c,130,130,Change this loop body so that it can be executed more than once.
dead_code.c,147,147,Change this loop body so that it can be executed more than once.
dead_code.c,165,165,Change this loop body so that it can be executed more than once.
dead_code.c,187,187,Change this loop body so that it can be executed more than once.
dead_code.c,204,204,Change this loop body so that it can be executed more than once.
dead_code.c,227,227,Change this loop body so that it can be executed more than once.
dead_code.c,245,245,Change this loop body so that it can be executed more than once.
double_free.c,102,102,code will never be executed
endless_loop.c,23,23,"Variable ""i"" modified in the initializer is not referenced in the condition."
endless_loop.c,23,23,"Variable ""i"" modified in the update is not referenced in the condition."
free_nondynamically_allocated_memory.c,23,23,code will never be executed
free_nondynamically_allocated_memory.c,62,62,code will never be executed
free_nondynamically_allocated_memory.c,82,82,Dereference of null pointer
free_nondynamically_allocated_memory.c,115,115,code will never be executed
free_null_pointer.c,26,26,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,59,59,"Variable ""i"" modified in the initializer is not referenced in the condition."
free_null_pointer.c,59,59,"Variable ""i"" modified in the update is not referenced in the condition."
free_null_pointer.c,119,119,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,119,119,Null pointer passed as an argument to a 'nonnull' parameter
free_null_pointer.c,156,156,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,205,205,code will never be executed
free_null_pointer.c,249,249,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,249,249,Null pointer passed as an argument to a 'nonnull' parameter
free_null_pointer.c,266,266,Change this loop body so that it can be executed more than once.
free_null_pointer.c,284,284,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,286,286,Change this loop body so that it can be executed more than once.
free_null_pointer.c,309,309,Change this loop body so that it can be executed more than once.
free_null_pointer.c,325,325,"Remove the use of this insecure ""strcpy"" function."
free_null_pointer.c,331,331,Change this loop body so that it can be executed more than once.
free_null_pointer.c,449,449,"Identical sub-expressions on both sides of operator ""==""."
free_null_pointer.c,455,455,"Identical sub-expressions on both sides of operator ""==""."
free_null_pointer.c,461,461,"Identical sub-expressions on both sides of operator ""==""."
free_null_pointer.c,491,491,Potential leak of memory pointed to by 'fptr'
func_pointer.c,433,433,"Identical sub-expressions on both sides of operator ""==""."
func_pointer.c,559,559,code will never be executed
func_pointer.c,635,635,Potential leak of memory pointed to by 'st1'
function_return_value_unchecked.c,110,110,"Remove the use of this insecure ""strcpy"" function."
function_return_value_unchecked.c,348,348,Change this loop body so that it can be executed more than once.
invalid_memory_access.c,70,70,Dereference of null pointer
invalid_memory_access.c,105,105,"Remove the use of this insecure ""strcpy"" function."
invalid_memory_access.c,183,183,Dereference of null pointer
invalid_memory_access.c,213,213,"Remove the use of this insecure ""strcpy"" function."
invalid_memory_access.c,275,275,Access to field 'a' results in a dereference of a null pointer (loaded from field 's1')
invalid_memory_access.c,313,313,"Variable ""j"" modified in the initializer is not referenced in the condition."
invalid_memory_access.c,313,313,"Variable ""j"" modified in the update is not referenced in the condition."
invalid_memory_access.c,483,483,Assigned value is garbage or undefined
invalid_memory_access.c,567,567,"Remove the use of this insecure ""strcpy"" function."
invalid_memory_access.c,576,576,"Remove the use of this insecure ""strcpy"" function."
invalid_memory_access.c,622,622,"Remove the use of this insecure ""strcpy"" function."
invalid_memory_access.c,634,634,"Remove the use of this insecure ""strcpy"" function."
littlemem_st.c,94,94,Address of stack memory associated with local variable 'buf' is still referred to by the global variable 'littlemem_st_004_s_001_gbl_str' upon returning to the caller.  This will be a dangling reference
livelock.c,33,33,This lock has already been unlocked
livelock.c,52,52,This lock has already been unlocked
memory_allocation_failure.c,38,38,"Variable ""i"" modified in the initializer is not referenced in the condition."
memory_allocation_failure.c,38,38,"Variable ""i"" modified in the update is not referenced in the condition."
memory_allocation_failure.c,84,84,Dereference of null pointer
memory_allocation_failure.c,265,265,loop will run at most once (loop increment never executed)
memory_allocation_failure.c,265,265,Change this loop body so that it can be executed more than once.
memory_allocation_failure.c,279,279,Potential memory leak
memory_allocation_failure.c,594,594,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,24,24,"Variable ""i"" modified in the initializer is not referenced in the condition."
memory_leak.c,24,24,"Variable ""i"" modified in the update is not referenced in the condition."
memory_leak.c,76,76,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,100,100,Access to field 'buf' results in a dereference of a null pointer
memory_leak.c,100,100,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,277,277,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,408,408,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,431,431,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,431,431,Null pointer passed as an argument to a 'nonnull' parameter
memory_leak.c,475,475,code will never be executed
memory_leak.c,508,508,Change this loop body so that it can be executed more than once.
memory_leak.c,526,526,"Remove the use of this insecure ""strcpy"" function."
memory_leak.c,528,528,Change this loop body so that it can be executed more than once.
null_pointer.c,259,259,"Remove the use of this insecure ""strcpy"" function."
null_pointer.c,259,259,Null pointer passed as an argument to a 'nonnull' parameter
null_pointer.c,303,303,code will never be executed
null_pointer.c,336,336,Change this loop body so that it can be executed more than once.
null_pointer.c,354,354,"Remove the use of this insecure ""strcpy"" function."
null_pointer.c,356,356,Change this loop body so that it can be executed more than once.
ow_memcpy.c,42,42,Assigned value is garbage or undefined
ptr_subtraction.c,23,23,Subtraction operator should not be used with pointers to different arrays.
race_condition.c,90,90,Change this loop body so that it can be executed more than once.
race_condition.c,108,108,Change this loop body so that it can be executed more than once.
st_cross_thread_access.c,56,56,Address of stack memory associated with local variable 'arr' is still referred to by the global variable 'st_cross_thread_access_001_glb_ptr' upon returning to the caller.  This will be a dangling reference
st_cross_thread_access.c,144,144,Address of stack memory associated with local variable 'arr' is still referred to by the global variable 'st_cross_thread_access_002_glb_ptr' upon returning to the caller.  This will be a dangling reference
st_cross_thread_access.c,233,233,Address of stack memory associated with local variable 'fptr' is still referred to by the global variable 'st_cross_thread_access_003_glb_ptr' upon returning to the caller.  This will be a dangling reference
st_cross_thread_access.c,400,400,Address of stack memory associated with local variable 'arr1' is still referred to by the global variable 'p' upon returning to the caller.  This will be a dangling reference
st_underrun.c,24,24,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,62,62,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,81,81,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,116,116,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,171,171,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,213,213,"Remove the use of this insecure ""strcpy"" function."
st_underrun.c,213,213,String copy function overflows destination buffer
uninit_memory_access.c,55,55,"Remove the use of this insecure ""strcpy"" function."
uninit_memory_access.c,76,76,Dereference of null pointer
uninit_pointer.c,132,132,Potential leak of memory pointed to by 'buf1'
uninit_pointer.c,132,132,Potential leak of memory pointed to by 'buf2'
uninit_pointer.c,132,132,Potential leak of memory pointed to by 'buf3'
uninit_pointer.c,132,132,Potential leak of memory pointed to by 'buf4'
uninit_pointer.c,132,132,Potential leak of memory pointed to by 'buf5'
uninit_pointer.c,197,197,"Remove the use of this insecure ""strcpy"" function."
uninit_pointer.c,231,231,Change this loop body so that it can be executed more than once.
uninit_pointer.c,239,239,Change this loop body so that it can be executed more than once.
uninit_pointer.c,400,400,"Remove the use of this insecure ""strcpy"" function."
uninit_pointer.c,423,423,"Remove the use of this insecure ""strcpy"" function."
uninit_pointer.c,432,432,Potential leak of memory pointed to by 's'
uninit_var.c,152,152,"Remove the use of this insecure ""strcpy"" function."
unlock_without_lock.c,388,388,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,208,208,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,209,209,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,218,218,Potential leak of memory pointed to by 'str1'
wrong_arguments_func_pointer.c,220,220,Potential leak of memory pointed to by 'str2'
wrong_arguments_func_pointer.c,381,381,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,435,435,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,449,449,Change this loop body so that it can be executed more than once.
wrong_arguments_func_pointer.c,474,474,"Remove the use of this insecure ""strcpy"" function."
wrong_arguments_func_pointer.c,519,519,code will never be executed
wrong_arguments_func_pointer.c,596,596,Potential leak of memory pointed to by 'st1'
