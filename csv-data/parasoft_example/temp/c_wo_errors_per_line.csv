File,LineStart,LineEnd,Error
buffer_overrun_dynamic.c,140,156,Duplicated function: 'void dynamic_buffer_overrun_008 ( ) { int * * buf = ( int * *...'
buffer_overrun_dynamic.c,145,146,"""buf"" may possibly be null"
buffer_overrun_dynamic.c,173,174,"""*pbuf[0], buf1"" may possibly be null"
buffer_overrun_dynamic.c,434,435,"""buf"" may possibly be null"
buffer_overrun_dynamic.c,442,443,"""buf"" is checked for null after being dereferenced"
buffer_overrun_dynamic.c,442,443,"Condition ""buf != 0"" always evaluates to true"
buffer_overrun_dynamic.c,511,512,"""buf1"" may possibly be null"
buffer_overrun_dynamic.c,513,514,"""buf2"" may possibly be null"
buffer_overrun_dynamic.c,550,551,"""doubleptr"" may possibly be null"
buffer_overrun_dynamic.c,617,618,Value 33 is out of acceptable range: 'lower than 30'
buffer_underrun_dynamic.c,146,147,"""buf"" may possibly be null"
buffer_underrun_dynamic.c,174,175,"""*pbuf[0], buf1"" may possibly be null"
buffer_underrun_dynamic.c,513,514,"""buf1"" may possibly be null"
buffer_underrun_dynamic.c,515,516,"""buf2"" may possibly be null"
buffer_underrun_dynamic.c,548,549,"""doubleptr"" may possibly be null"
buffer_underrun_dynamic.c,670,671,"""doubleptr"" may possibly be null"
buffer_underrun_dynamic.c,672,673,"Condition ""loc1 == 0"" always evaluates to true"
buffer_underrun_dynamic.c,677,678,"Condition ""loc2 == 0"" always evaluates to true"
buffer_underrun_dynamic.c,790,791,Value 40 is out of acceptable range: 'lower than 30'
cmp_funcadr.c,26,27,"Condition ""cmp_funcadr_001_func_001() == 0"" always evaluates to false"
cmp_funcadr.c,47,48,"Condition ""cmp_funcadr_002_func_001() == 10"" always evaluates to true"
dead_code.c,37,38,"Condition ""flag"" always evaluates to true"
dead_code.c,58,59,"Condition ""dead_code_003_func_001()"" always evaluates to true"
dead_code.c,96,97,"Condition ""flag > 0"" always evaluates to true"
dead_code.c,113,114,"Condition ""flag == 0"" always evaluates to true"
dead_code.c,130,131,"Condition ""i <= 1"" always evaluates to true"
dead_code.c,165,166,"Condition ""flag"" always evaluates to true"
dead_code.c,187,188,"Condition ""dead_code_010_func_001()"" always evaluates to true"
dead_code.c,227,228,"Condition ""flag > 0"" always evaluates to true"
dead_code.c,245,246,"Condition ""flag == 0"" always evaluates to true"
deletion_of_data_structure_sentinel.c,26,27,"""foo"" may possibly be null"
double_free.c,37,38,"""ptr"" may possibly be null"
double_free.c,38,39,"Condition ""i == 10"" always evaluates to false"
double_free.c,56,57,"""ptr"" may possibly be null"
double_free.c,74,75,"""ptr"" may possibly be null"
double_free.c,117,118,"Condition ""flag < 0"" always evaluates to false"
double_free.c,151,152,"Condition ""flag == 1"" always evaluates to false"
double_free.c,172,173,"Usage of freed resource ""ptr"""
double_free.c,190,191,"Condition ""flag == 1"" always evaluates to true"
double_release.c,51,51,Loop does not contain terminate point
double_release.c,104,104,Loop does not contain terminate point
double_release.c,152,152,Loop does not contain terminate point
double_release.c,199,199,Loop does not contain terminate point
double_release.c,248,248,Loop does not contain terminate point
double_release.c,290,290,Loop does not contain terminate point
endless_loop.c,82,83,"Condition ""flag"" always evaluates to true"
endless_loop.c,107,108,"Condition ""endless_loop_005_func_001()"" always evaluates to true"
endless_loop.c,153,154,"Condition ""flag > 0"" always evaluates to true"
free_nondynamically_allocated_memory.c,35,36,"Condition ""flag > 1"" always evaluates to false"
free_nondynamically_allocated_memory.c,82,83,"""*pbuf[0], buf1"" may possibly be null"
free_nondynamically_allocated_memory.c,82,83,"""*pbuf[1], buf2"" may possibly be null"
free_nondynamically_allocated_memory.c,82,83,"""*pbuf[1], buf2"" may possibly be null"
free_nondynamically_allocated_memory.c,127,128,"Condition ""a < b"" always evaluates to false"
free_nondynamically_allocated_memory.c,140,141,"Condition ""a > b"" always evaluates to false"
free_nondynamically_allocated_memory.c,168,169,"Condition ""i < 0"" always evaluates to false"
free_nondynamically_allocated_memory.c,187,188,"Condition ""a == 5"" always evaluates to false"
free_nondynamically_allocated_memory.c,188,189,"Invalid resource freeing: ""ptr"" represents a string literal"
free_nondynamically_allocated_memory.c,209,210,"""new_struct"" may possibly be null"
free_null_pointer.c,39,40,"Condition ""a > 0"" always evaluates to true"
free_null_pointer.c,84,85,"""fptr"" may possibly be null"
free_null_pointer.c,119,120,"""free_null_pointer_005_gbl_ptr"" may possibly be null"
free_null_pointer.c,119,120,"""free_null_pointer_005_gbl_ptr"" may possibly be null"
free_null_pointer.c,150,151,"Condition ""free_null_pointer_006_func_001(...) == 0"" always evaluates to true"
free_null_pointer.c,154,155,"""s"" may possibly be null"
free_null_pointer.c,187,188,"""free_null_pointer_007_gbl_doubleptr"" may possibly be null"
free_null_pointer.c,221,222,"Condition ""free_null_pointer_007_func_001(...) == 0"" always evaluates to true"
free_null_pointer.c,249,250,"""str1"" may possibly be null"
free_null_pointer.c,249,250,"""str1"" may possibly be null"
free_null_pointer.c,271,272,"""free_null_pointer_009dst"" may possibly be null"
free_null_pointer.c,314,315,"""free_null_pointer_010_gbl_dst"" may possibly be null"
free_null_pointer.c,371,372,"""u"" may possibly be null"
free_null_pointer.c,449,450,"Condition ""free_null_pointer_012_func_001(...) == 0"" always evaluates to true"
free_null_pointer.c,449,450,"Condition ""free_null_pointer_012_func_001(0) == ZERO && MA"" always evaluates to true"
free_null_pointer.c,451,452,"Condition ""flag == 10"" always evaluates to true"
free_null_pointer.c,452,453,"""ptr"" may possibly be null"
free_null_pointer.c,452,453,"Condition ""flag == 10"" always evaluates to true"
free_null_pointer.c,489,490,"""fptr"" may possibly be null"
free_null_pointer.c,490,491,"Memory not deallocated: *fp1, *fp2, fptr"
free_null_pointer.c,521,522,"""free_null_pointer_014_gbl_s"" may possibly be null"
free_null_pointer.c,536,537,"""free_null_pointer_014_gbl_s->p1"" may possibly be null"
free_null_pointer.c,537,538,"""free_null_pointer_014_gbl_s->p2"" may possibly be null"
free_null_pointer.c,538,539,"""free_null_pointer_014_gbl_s->p3"" may possibly be null"
func_pointer.c,98,120,Duplicated function: 'static char * func_pointer_004_func_001 ( char * str1 ) { int...'
func_pointer.c,161,162,"""func_pointer_005_doubleptr_gbl"" may possibly be null"
func_pointer.c,178,179,"Condition ""func_pointer_005_func_001(...) == 0"" always evaluates to true"
func_pointer.c,221,222,"""func_pointer_006_doubleptr_gbl"" may possibly be null"
func_pointer.c,262,263,"Condition ""func_pointer_006_func_001(...) == 0"" always evaluates to true"
func_pointer.c,509,510,"Condition ""flag == 1"" always evaluates to true"
func_pointer.c,554,555,"Condition ""flag == 1"" always evaluates to true"
func_pointer.c,563,564,"Condition ""flag == 1"" always evaluates to true"
func_pointer.c,627,628,"""st1"" may possibly be null"
function_return_value_unchecked.c,50,51,"Condition ""a <= 100"" always evaluates to true"
function_return_value_unchecked.c,72,73,"Condition ""a > 0.0"" always evaluates to true"
function_return_value_unchecked.c,90,91,"Condition ""a == 0"" always evaluates to true"
function_return_value_unchecked.c,92,93,"Condition ""(int)buf != 0"" always evaluates to true"
function_return_value_unchecked.c,124,125,"Condition ""strcmp(...) == 0"" always evaluates to true"
function_return_value_unchecked.c,215,216,"""ptr"" may possibly be null"
function_return_value_unchecked.c,215,216,"""ptr"" may possibly be null"
function_return_value_unchecked.c,240,241,"Condition ""i < 10.0"" always evaluates to false"
function_return_value_unchecked.c,258,259,"Condition ""i < 10.0"" always evaluates to false"
function_return_value_unchecked.c,278,279,"Condition ""a == 20"" always evaluates to false"
function_return_value_unchecked.c,283,284,"Condition ""b != 2"" always evaluates to false"
function_return_value_unchecked.c,288,289,"Condition ""c > 0"" always evaluates to false"
function_return_value_unchecked.c,290,290,"Do not use ""=="" or ""!="" to test floating-point expression"
function_return_value_unchecked.c,369,370,"Condition ""function_return_value_unchecked_013_func_001()"" always evaluates to true"
function_return_value_unchecked.c,445,445,"Do not use ""=="" or ""!="" to test floating-point expression"
improper_termination_of_block.c,23,24,"Condition ""condition == 0"" always evaluates to true"
improper_termination_of_block.c,40,41,"Condition ""condition == 0"" always evaluates to true"
invalid_extern.c,62,63,"""invalid_extern_001_glb_006_str"" may possibly be null"
invalid_memory_access.c,34,35,"Condition ""flag == 10"" always evaluates to true"
invalid_memory_access.c,38,39,"Condition ""flag == 10"" always evaluates to true"
invalid_memory_access.c,39,40,"Condition ""flag == 10"" always evaluates to true"
invalid_memory_access.c,44,45,"Condition ""flag == 10"" always evaluates to true"
invalid_memory_access.c,70,71,"""dptr"" may possibly be null"
invalid_memory_access.c,70,71,"""dptr"" may possibly be null"
invalid_memory_access.c,183,184,"""*pbuf[0], buf1"" may possibly be null"
invalid_memory_access.c,209,210,"""ptr"" may possibly be null"
invalid_memory_access.c,275,276,"""p->s1, u->s1"" may possibly be null"
invalid_memory_access.c,275,276,"""p->s1, u->s1"" may possibly be null"
invalid_memory_access.c,275,276,"""p->s1->a, u->s1->a"" may possibly be null"
invalid_memory_access.c,300,301,"""ptr1"" may possibly be null"
invalid_memory_access.c,561,562,"Condition ""invalid_memory_access_016_func_001(...) == 0"" always evaluates to true"
invalid_memory_access.c,566,567,"""invalid_memory_access_016_doubleptr_gbl"" may possibly be null"
invalid_memory_access.c,567,568,"""invalid_memory_access_016_doubleptr_gbl[0]"" may possibly be null"
invalid_memory_access.c,583,584,"Condition ""invalid_memory_access_016_func_001(...) == 0"" always evaluates to true"
invalid_memory_access.c,642,643,"Condition ""invalid_memory_access_017_func_001(...) == 0"" always evaluates to false"
invalid_memory_access.c,650,651,"Condition ""invalid_memory_access_017_func_001(...) == 0"" always evaluates to false"
lock_never_unlock.c,222,223,Unreleased lock: lock_never_unlock_004_glb_mutex_1
lock_never_unlock.c,318,319,Unreleased lock: lock_never_unlock_006_glb_mutex_1
lock_never_unlock.c,344,345,"Condition ""thread_set == 1"" always evaluates to false"
lock_never_unlock.c,496,497,"Condition ""thread_set == 1"" always evaluates to false"
lock_never_unlock.c,554,555,"Condition ""i != 6"" always evaluates to true"
main.c,17,18,Value 53 is out of acceptable range: 'lower than 30'
memory_allocation_failure.c,84,85,"""ptr"" may possibly be null"
memory_allocation_failure.c,84,85,"""ptr"" may possibly be null"
memory_allocation_failure.c,154,155,"Condition ""ret >= 0"" always evaluates to true"
memory_allocation_failure.c,180,181,"Condition ""memory_allocation_failure_006_func_001(...) == 0"" always evaluates to true"
memory_allocation_failure.c,185,186,"""memory_allocation_failure_006_gbl_doubleptr"" may possibly be null"
memory_allocation_failure.c,186,187,"""memory_allocation_failure_006_gbl_doubleptr[0]"" may possibly be null"
memory_allocation_failure.c,195,196,"Condition ""memory_allocation_failure_006_func_001(...) == 0"" always evaluates to true"
memory_allocation_failure.c,265,266,"Condition ""i < 20"" always evaluates to true"
memory_allocation_failure.c,279,280,Memory not deallocated: memory_allocation_failure_008_func_001(...)
memory_allocation_failure.c,292,293,Memory not deallocated: buf
memory_allocation_failure.c,331,332,Memory not deallocated: memory_allocation_failure_010_arr_gbl
memory_allocation_failure.c,344,345,"Condition ""memory_allocation_failure_010_arr_gbl->csr & ERR"" always evaluates to false"
memory_allocation_failure.c,348,349,"Condition ""memory_allocation_failure_010_arr_gbl->csr & 3 == 0"" always evaluates to false"
memory_allocation_failure.c,395,396,"""memory_allocation_failure_011_gbl_u1"" may possibly be null"
memory_allocation_failure.c,396,397,"""memory_allocation_failure_011_gbl_u1->s1"" may possibly be null"
memory_allocation_failure.c,403,404,"""memory_allocation_failure_011_gbl_u1"" is checked for null after being dereferenced"
memory_allocation_failure.c,403,404,"Condition ""memory_allocation_failure_011_gbl_u1 != 0"" always evaluates to true"
memory_allocation_failure.c,406,407,"""memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a"" may possibly be null"
memory_allocation_failure.c,442,443,"""pbuf[1]"" may possibly be null"
memory_allocation_failure.c,451,452,"Condition ""flag == 10"" always evaluates to true"
memory_allocation_failure.c,582,583,"""dptr"" may possibly be null"
memory_allocation_failure.c,590,591,"""ptr"" may possibly be null"
memory_allocation_failure.c,671,672,"Condition ""flag == 1"" always evaluates to true"
memory_allocation_failure.c,675,676,"""memory_allocation_failure_015_gbl_ptr"" may possibly be null"
memory_allocation_failure.c,724,725,"""ptr1"" may possibly be null"
memory_leak.c,48,49,"""ptr"" may possibly be null"
memory_leak.c,76,77,"""str1"" may possibly be null"
memory_leak.c,100,101,"""s"" may possibly be null"
memory_leak.c,100,101,"""s"" may possibly be null"
memory_leak.c,115,116,"Condition ""flag > 0"" always evaluates to true"
memory_leak.c,145,146,"Condition ""memory_leak_006_func_001(...) == 0"" always evaluates to true"
memory_leak.c,280,281,"""buf"" is checked for null after being dereferenced"
memory_leak.c,280,281,"Condition ""buf"" always evaluates to true"
memory_leak.c,360,361,"""p->s1, u->s1"" may possibly be null"
memory_leak.c,431,432,"""memory_leak_0016_gbl_ptr"" may possibly be null"
memory_leak.c,431,432,"""memory_leak_0016_gbl_ptr"" may possibly be null"
memory_leak.c,457,458,"""memory_leak_0017_gbl_doubleptr"" may possibly be null"
memory_leak.c,491,492,"Condition ""memory_leak_0017_func_001(...) == 0"" always evaluates to true"
memory_leak.c,513,514,"""memory_leak_0018dst"" may possibly be null"
null_pointer.c,214,215,"Condition ""p != 0"" always evaluates to true"
null_pointer.c,235,236,"""p"" is checked for null after being dereferenced"
null_pointer.c,235,236,"Condition ""p != 0"" always evaluates to true"
null_pointer.c,259,260,"""null_pointer_015_gbl_ptr"" may possibly be null"
null_pointer.c,259,260,"""null_pointer_015_gbl_ptr"" may possibly be null"
null_pointer.c,285,286,"""null_pointer_016_gbl_doubleptr"" may possibly be null"
null_pointer.c,319,320,"Condition ""null_pointer_016_func_001(...) == 0"" always evaluates to true"
null_pointer.c,341,342,"""null_pointer_017dst"" may possibly be null"
overrun_st.c,774,775,Value 55 is out of acceptable range: 'lower than 30'
pow_related_errors.c,150,151,"""newarr"" may possibly be null"
pow_related_errors.c,151,152,"""ptr_newarr"" may possibly be null"
pow_related_errors.c,492,493,Value 30 is out of acceptable range: 'lower than 30'
race_condition.c,136,137,"""ptr"" may possibly be null"
race_condition.c,148,148,Loop does not contain terminate point
st_cross_thread_access.c,221,222,"Condition ""st_cross_thread_access_003_func_002(...) != 0"" always evaluates to true"
st_cross_thread_access.c,250,251,"Condition ""st_cross_thread_access_003_func_002(...) != 0"" always evaluates to true"
st_cross_thread_access.c,517,518,"Condition ""thread_set == 1"" always evaluates to false"
st_overflow.c,119,120,"""s"" is used prior to initialization"
st_overflow.c,145,146,"""s"" is used prior to initialization"
st_overflow.c,191,192,"""s"" is used prior to initialization"
st_overflow.c,232,233,"Condition ""flag"" always evaluates to true"
st_underrun.c,132,133,"""s1"" is used prior to initialization"
st_underrun.c,213,214,"Overflow when writing to buffer ""s.buf"" (char[10], 10 bytes large). Number of bytes written = 12"
st_underrun.c,216,217,"""s"" is used prior to initialization"
st_underrun.c,234,235,"Usage of not zero-terminated string: ""s->buf"""
st_underrun.c,255,256,"Condition ""flag > 1"" always evaluates to false"
underrun_st.c,195,196,"Condition ""var == 0"" always evaluates to true"
uninit_memory_access.c,76,77,"""*ptr, p2"" may possibly be null"
uninit_memory_access.c,118,119,"""dst"" may possibly be null"
uninit_memory_access.c,131,132,Memory not deallocated: str1
uninit_memory_access.c,236,237,"""uninit_memory_access_009_doubleptr_gbl"" may possibly be null"
uninit_memory_access.c,251,252,"Condition ""uninit_memory_access_009_func_001(...) == 0"" always evaluates to true"
uninit_memory_access.c,297,298,"Condition ""uninit_memory_access_010_s_001_arr_gbl->csr & ERR"" always evaluates to false"
uninit_memory_access.c,301,302,"Condition ""(int)uninit_memory_access_010_s_001_arr_gbl->csr & 3 == 0"" always evaluates to false"
uninit_memory_access.c,377,378,"""s1"" may possibly be null"
uninit_memory_access.c,409,410,"""u"" may possibly be null"
uninit_memory_access.c,434,435,"""p"" is checked for null after being dereferenced"
uninit_memory_access.c,434,435,"Condition ""p != 0"" always evaluates to true"
uninit_memory_access.c,456,457,"""p"" may possibly be null"
uninit_pointer.c,146,147,Memory not deallocated: buf1
uninit_pointer.c,146,147,Memory not deallocated: buf2
uninit_pointer.c,146,147,Memory not deallocated: buf3
uninit_pointer.c,146,147,Memory not deallocated: buf4
uninit_pointer.c,146,147,Memory not deallocated: buf5
uninit_pointer.c,191,192,"Condition ""uninit_pointer_009_func_001(...) > 0"" always evaluates to true"
uninit_pointer.c,195,196,"Condition ""uninit_pointer_009_func_001(...) > 0"" always evaluates to true"
uninit_pointer.c,248,249,Memory not deallocated: ptr
uninit_pointer.c,280,281,"""ptr"" may possibly be null"
uninit_pointer.c,394,395,"Condition ""uninit_pointer_016_func_001(...) == 0"" always evaluates to true"
uninit_pointer.c,399,400,"""uninit_pointer_016_gbl_doubleptr"" may possibly be null"
uninit_pointer.c,400,401,"""uninit_pointer_016_gbl_doubleptr[0]"" may possibly be null"
uninit_pointer.c,409,410,"Condition ""uninit_pointer_016_func_001(...) == 0"" always evaluates to true"
uninit_var.c,100,101,"Condition ""flag == 10"" always evaluates to true"
uninit_var.c,244,245,"Condition ""ret >= 0"" always evaluates to true"
unlock_without_lock.c,160,161,"Condition ""unlock_without_lock_003_func_002(...) > 1"" always evaluates to true"
unlock_without_lock.c,191,192,"Condition ""unlock_without_lock_003_func_002(...) > 1"" always evaluates to true"
unlock_without_lock.c,197,198,"Condition ""unlock_without_lock_003_func_002(...) > 1"" always evaluates to true"
unlock_without_lock.c,405,406,"Condition ""thread_set == 1"" always evaluates to false"
unlock_without_lock.c,535,536,"Condition ""i != 6"" always evaluates to true"
wrong_arguments_func_pointer.c,228,229,Memory not deallocated: str1
wrong_arguments_func_pointer.c,228,229,Memory not deallocated: str2
wrong_arguments_func_pointer.c,330,331,"""st1"" may possibly be null"
wrong_arguments_func_pointer.c,409,410,"Possibly accessing array ""a"" out of bounds at index 5. Correct index(es): [0...4]"
wrong_arguments_func_pointer.c,415,416,"Condition ""wrong_arguments_func_pointer_014_func_001(...) == 0"" always evaluates to true"
wrong_arguments_func_pointer.c,447,448,"""wrong_arguments_func_pointer_015_dst1_gbl"" may possibly be null"
wrong_arguments_func_pointer.c,514,515,"Condition ""flag == 1"" always evaluates to true"
wrong_arguments_func_pointer.c,523,524,"Condition ""flag == 1"" always evaluates to true"
wrong_arguments_func_pointer.c,588,589,"""st1"" may possibly be null"
zero_division.c,237,238,"""zero_division_016_gbl_divisor"" may possibly be null"
