<?xml version='1.0' encoding='utf-8'?>
<ResultsSession buildId="Default Project-2020-04-21" date="04/21/20 14:57:11" machine="kali" project="Default Project" tag="Example Configuration" time="2020-04-21T14:57:11-04:00" toolName="C++test" toolVer="10.4.3.20191114B689" user="kali">
   <TestConfig machine="kali" name="Example Configuration" pseudoUrl="c++test.user://Example Configuration" user="kali" />
   <Authors>
      <Author id="dev1" name="kali" />
   </Authors>
   <VersionInfos>
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="IExecutionViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.execution" resultId="InsureViolation" ver="3" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.codereview" resultId="ICodeReviewUndefinedAuthorsInfo" ver="1" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.codereview" resultId="ICodeReviewScannerInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.scope" resultId="IScopeProjectInfo" ver="3" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricsViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IDupCodeViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IMetricEstimationInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="IFlowAnalysisViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.standards" resultId="ICodingStandardsViolation" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationInfo" ver="2" />
      <StorageInfo ownerId="com.parasoft.xtest.checkers.api.generation" resultId="IGenerationProjectInfo" ver="2" />
   </VersionInfos>
   
   
   <Scope>
      <ProjectInformations>
         <ScopeProjectInfo fltFiles="113" fltLns="41773" project="/ITC-Benchmarks" totFiles="113" totLns="41773" />
      </ProjectInformations>
   </Scope>
   <CodingStandards ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:27">
      <Goal mode="1" name="Static" />
      <Projects>
         <Project bdCheckedFiles="65" bdTotalFiles="65" checkedFiles="107" checkedLns="41399" name="ITC-Benchmarks" qfixErrs="0" suppErrs="0" totErrs="928" totFiles="111" totLns="41739" />
      </Projects>
      <TestingProcessProblems>
         <ipro tested="[ERROR] Code Analysis for ITC-Benchmarks/03.w_Defects_Cpp/main.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/main.cpp:13:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/main.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Collecting header files for ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp:13:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Collecting header files for ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp:10:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Code Analysis for ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp:10:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/improper_error_handling.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Collecting header files for ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp:10:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Collecting header files for ITC-Benchmarks/03.w_Defects_Cpp/main.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/main.cpp:13:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/03.w_Defects_Cpp/main.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Code Analysis for ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp:13:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/main.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
         <ipro tested="[ERROR] Code Analysis for ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp finished with code 1 (ipro)">
            <ErrorList>
               <Error val="In file included from /usr/include/c++/9/stdlib.h:36,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/HeaderFile.hpp:10,&#xa;                 from /home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp:10:&#xa;/usr/include/c++/9/cstdlib:41:10: fatal error: bits/c++config.h: No such file or directory&#xa;   41 | #include &lt;bits/c++config.h>&#xa;      |          ^~~~~~~~~~~~~~~~~~&#xa;compilation terminated.&#xa;Error preprocessing file &quot;/home/kali/parasoft/workspace/ITC-Benchmarks/04.wo_Defects_Cpp/improper_error_handling.cpp&quot;: &#xa;Process exited with code: 1&#xa;Could not preprocess source file" />
            </ErrorList>
         </ipro>
      </TestingProcessProblems>
      <Rules>
         <RulesList>
            <Rule cat="BD-API" desc="Do not pass negative values to functions expecting non-negative arguments" id="BD-API-NEGPARAM" sev="1">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="BD-PB" desc="Always catch exceptions" id="BD-PB-EXCEPT" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid use before initialization" id="BD-PB-NOTINIT" sev="1">
               <Stats authTot="40;" authUrg="8;" total="40" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid null pointer dereferencing" id="BD-PB-NP" sev="1">
               <Stats authTot="212;" authUrg="22;" total="212" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid buffer overflow due to defining incorrect format limits" id="BD-PB-OVERFFMT" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid overflow due to reading a not zero terminated string" id="BD-PB-OVERFNZT" sev="1">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid overflow when reading from a buffer" id="BD-PB-OVERFRD" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid overflow when writing to a buffer" id="BD-PB-OVERFWR" sev="1">
               <Stats authTot="4;" authUrg="1;" total="4" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid division by zero" id="BD-PB-ZERO" sev="1">
               <Stats authTot="13;" authUrg="1;" total="13" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid accessing arrays out of bounds" id="BD-PB-ARRAY" sev="2">
               <Stats authTot="136;" authUrg="0;" total="136" />
            </Rule>
            <Rule cat="BD-PB" desc="Avoid conditions that always evaluate to the same value" id="BD-PB-CC" sev="2">
               <Stats authTot="239;" authUrg="0;" total="239" />
            </Rule>
            <Rule cat="BD-PB" desc="Do not check for null after dereferencing" id="BD-PB-DEREF" sev="2">
               <Stats authTot="8;" authUrg="0;" total="8" />
            </Rule>
            <Rule cat="BD-PB" desc="Suspicious setting of stream flags" id="BD-PB-STREAMFLAGS" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-PB" desc="Restore stream format" id="BD-PB-STREAMFMT" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-RES" desc="Properly deallocate dynamically allocated resources" id="BD-RES-BADDEALLOC" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-RES" desc="Do not use resources that have been freed" id="BD-RES-FREE" sev="1">
               <Stats authTot="32;" authUrg="2;" total="32" />
            </Rule>
            <Rule cat="BD-RES" desc="Do not free resources using invalid pointers" id="BD-RES-INVFREE" sev="1">
               <Stats authTot="18;" authUrg="2;" total="18" />
            </Rule>
            <Rule cat="BD-RES" desc="Ensure resources are freed" id="BD-RES-LEAKS" sev="1">
               <Stats authTot="48;" authUrg="8;" total="48" />
            </Rule>
            <Rule cat="BD-TRS" desc="Avoid double locking" id="BD-TRS-DLOCK" sev="1">
               <Stats authTot="9;" authUrg="0;" total="9" />
            </Rule>
            <Rule cat="BD-TRS" desc="Avoid race conditions when using fork and file descriptors" id="BD-TRS-FORKFILE" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-TRS" desc="Do not abandon unreleased locks" id="BD-TRS-LOCK" sev="1">
               <Stats authTot="15;" authUrg="3;" total="15" />
            </Rule>
            <Rule cat="BD-TRS" desc="Do not acquire locks in different order" id="BD-TRS-ORDER" sev="1">
               <Stats authTot="8;" authUrg="1;" total="8" />
            </Rule>
            <Rule cat="BD-TRS" desc="Avoid race conditions while checking for the existence of a symbolic link" id="BD-TRS-SYMLINK" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="BD-TRS" desc="Do not use blocking functions while holding a lock" id="BD-TRS-TSHL" sev="1">
               <Stats authTot="4;" authUrg="2;" total="4" />
            </Rule>
            <Rule cat="CDD" desc="Avoid function duplication" id="CDD-DUPM" sev="2">
               <Stats authTot="93;" authUrg="0;" total="93" />
            </Rule>
            <Rule cat="CODSTA" desc="Local variables should not use the same names as member variables" id="CODSTA-44" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="CODSTA" desc="Pointer should not be compared with NULL using relational operators &lt;, >, >=, &lt;=" id="CODSTA-147" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="CODSTA" desc="Do not use string literals as operands of equality or relational operators" id="CODSTA-148" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="CODSTA" desc="Avoid infinite loops" id="CODSTA-82" sev="3">
               <Stats authTot="26;" authUrg="0;" total="26" />
            </Rule>
            <Rule cat="CODSTA-CPP" desc="Constructors allowing for conversion should be made explicit" id="CODSTA-CPP-04" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="EXCEPT" desc="Throw by value, catch by reference" id="EXCEPT-02" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="EXCEPT" desc="Do not throw from within destructor" id="EXCEPT-03" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="INIT" desc="All member variables should be initialized in constructor" id="INIT-06" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="METRIC" desc="McCabe Cyclomatic Complexity" id="METRIC.CC" sev="3">
               <Stats authTot="10;" authUrg="0;" total="10" />
            </Rule>
            <Rule cat="METRIC" desc="Nested Blocks Depth" id="METRIC.NBD" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MISRA2004" desc="Floating-point expressions shall not be tested for equality or inequality" id="MISRA2004-13_3" sev="3">
               <Stats authTot="4;" authUrg="0;" total="4" />
            </Rule>
            <Rule cat="MISRA2004" desc="All exit paths from a function with non-void return type shall have an explicit return statement with an expression" id="MISRA2004-16_8" sev="3">
               <Stats authTot="3;" authUrg="0;" total="3" />
            </Rule>
            <Rule cat="MISRA2004" desc="The address of an object with automatic storage shall not be returned from a function" id="MISRA2004-17_6_a" sev="3">
               <Stats authTot="1;" authUrg="0;" total="1" />
            </Rule>
            <Rule cat="MRM" desc="Do not invoke malloc/realloc for objects having constructors" id="MRM-08" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MRM" desc="Declare a copy assignment operator for classes with dynamically allocated memory" id="MRM-37" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MRM" desc="Declare a copy constructor for classes with dynamically allocated memory" id="MRM-38" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MRM" desc="Never provide brackets ([]) for delete when deallocating non-arrays" id="MRM-35" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MRM" desc="Always provide empty brackets ([]) for delete when deallocating arrays" id="MRM-36" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="MRM" desc="Do not use 'delete' on pointers to a void type" id="MRM-51" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="OOP" desc="Class cannot inherit other class more than once unless it is virtual inheritance" id="OOP-03" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="OOP" desc="Avoid calling virtual functions from constructors" id="OOP-16" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="OOP" desc="If a class has virtual functions it shall have a virtual destructor" id="OOP-23" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="OPT" desc="Pass objects by reference instead of by value" id="OPT-14" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Do not call delete on non-pointers" id="PB-13" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Properly terminate character strings" id="PB-21" sev="1">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Do not cast from or to incomplete class at the point of casting" id="PB-54" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Do not delete objects with incomplete class at the point of deletion" id="PB-55" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Boolean condition always evaluates to the same value due to enumeration with only zero or only non-zero constants" id="PB-68" sev="2">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Suspicious argument to malloc" id="PB-60" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
            <Rule cat="PB" desc="Pointer arithmetic performed on freshly allocated memory" id="PB-61" sev="3">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Rule>
         </RulesList>
         <CategoriesList>
            <Category desc="Flow Analysis" name="BD" total="114">
               <Category desc="Incorrect API usage" name="BD-API" total="6">
                  <Stats authTot="1;" authUrg="0;" total="1" />
               </Category>
               <Category desc="Possible Bugs" name="BD-PB" total="63">
                  <Stats authTot="656;" authUrg="32;" total="656" />
               </Category>
               <Category desc="Resources" name="BD-RES" total="8">
                  <Stats authTot="98;" authUrg="12;" total="98" />
               </Category>
               <Category desc="Threads &amp; Synchronization" name="BD-TRS" total="15">
                  <Stats authTot="36;" authUrg="6;" total="36" />
               </Category>
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Code Duplication Detection" name="CDD" total="4">
               <Stats authTot="93;" authUrg="0;" total="93" />
            </Category>
            <Category desc="Coding Conventions" name="CODSTA" total="404">
               <Category desc="Coding Conventions for C++" name="CODSTA-CPP" total="107">
                  <Stats authTot="0;" authUrg="0;" total="0" />
               </Category>
               <Stats authTot="26;" authUrg="0;" total="26" />
            </Category>
            <Category desc="Exceptions" name="EXCEPT" total="26">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Initialization" name="INIT" total="20">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Metric" name="METRIC" total="50">
               <Stats authTot="10;" authUrg="0;" total="10" />
            </Category>
            <Category desc="MISRA C 2004" name="MISRA2004" total="218">
               <Stats authTot="8;" authUrg="0;" total="8" />
            </Category>
            <Category desc="Memory and Resource Management" name="MRM" total="60">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Object Oriented" name="OOP" total="60">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Optimization" name="OPT" total="43">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
            <Category desc="Possible Bugs" name="PB" total="84">
               <Stats authTot="0;" authUrg="0;" total="0" />
            </Category>
         </CategoriesList>
         <SeverityList>
            <Severity id="1">
               <Stats authTot="408;" authUrg="50;" total="408" />
            </Severity>
            <Severity id="2">
               <Stats authTot="476;" authUrg="0;" total="476" />
            </Severity>
            <Severity id="3">
               <Stats authTot="44;" authUrg="0;" total="44" />
            </Severity>
         </SeverityList>
      </Rules>
      
  <StdViols>
    <DupViol msg="Duplicated function: 'void bit_shift_main ( ) { if ( vflag == 1 || vflag == 888 ) {...'" ln="247" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="163958842" NvActs="3" locStartln="247" locStartPos="0" locEndLn="332" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/bit_shift.c">
      <ElDescList>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/bit_shift.c" srcRnghash="163958842" ln="247" ElType="" desc="[Line 247] Duplicated function in file 'bit_shift.c'" sourceRngHash="1923893006">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/bit_shift.c" srcRnghash="2046354371" ln="247" ElType="" desc="[Line 247] Duplicated function in file 'bit_shift.c'" sourceRngHash="1923893006">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="27" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1279438519" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="27" locStartPos="0" locEndLn="28" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="19" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="20" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="19" ElType=".C" desc="void dynamic_buffer_overrun_001 ()" rngLn="19">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="21" ElType="!" desc="calloc(...)" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="21" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="22" ElType="." desc="int i;" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="23" ElType="." desc="if(buf!=NULL)" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="25" ElType="." desc="for (i=0;i&lt;=5;i++)" rngLn="25">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="27" ElType="." desc="buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="27">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="25" ElType="." desc="for (i=0;i&lt;=5;i++)" rngLn="25">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="27" ElType=".P" desc="buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="27">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="42" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1256383900" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="42" locStartPos="0" locEndLn="43" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="37" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="38" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="37" ElType=".C" desc="void dynamic_buffer_overrun_002 ()" rngLn="37">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="39" ElType="!" desc="calloc(...)" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="39" ElType="!" desc="short *buf=(short*) calloc(5,sizeof(short));" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="40" ElType="." desc="if(buf!=NULL)" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="42" ElType=".P" desc="*(buf+5)=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="42">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="62" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-630648622" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="62" locStartPos="0" locEndLn="63" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="51" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="52" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="51" ElType=".C" desc="void dynamic_buffer_overrun_003 ()" rngLn="51">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="53" ElType="!" desc="calloc(...)" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="53" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="54" ElType="." desc="int ret;" rngLn="54">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="55" ElType="." desc="int i;" rngLn="55">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="56" ElType="." desc="if(buf!=NULL)" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="58" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="58">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="60" ElType="." desc="buf[i]=1;" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="58" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="58">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="60" ElType="." desc="buf[i]=1;" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="58" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="58">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="62" ElType=".P" desc="ret = buf[5];/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="77" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1528937495" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="77" locStartPos="0" locEndLn="78" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="72" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="73" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="72" ElType=".C" desc="void dynamic_buffer_overrun_004 ()" rngLn="72">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="74" ElType="!" desc="calloc(...)" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="74" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="75" ElType="." desc="if(buf!=NULL)" rngLn="75">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="77" ElType=".P" desc="*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="77">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="94" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-296884099" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="94" locStartPos="0" locEndLn="95" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="86" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="87" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="86" ElType=".C" desc="void dynamic_buffer_overrun_005 ()" rngLn="86">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="88" ElType="!" desc="calloc(...)" rngLn="88">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="88" ElType="!" desc="long *buf=(long*) calloc(5,sizeof(long));" rngLn="88">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="89" ElType="." desc="int i;" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="90" ElType="." desc="if(buf!=NULL)" rngLn="90">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="92" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="92">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="94" ElType="." desc="buf[i]=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="92" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="92">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="94" ElType=".P" desc="buf[i]=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="94">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="112" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="663104577" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="112" locStartPos="0" locEndLn="113" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="104" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="105" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="104" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="104" ElType=".C" desc="void dynamic_buffer_overrun_006 ()" rngLn="104">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="106" srcRngStartPos="0" srcRngEndLn="107" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="106" ElType="!" desc="calloc(...)" rngLn="106">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="106" srcRngStartPos="0" srcRngEndLn="107" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="106" ElType="!" desc="float *buf=(float*) calloc(5,sizeof(float));" rngLn="106">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="107" ElType="." desc="int i;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="108" ElType="." desc="if(buf!=NULL)" rngLn="108">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="110" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="112" ElType="." desc="buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="110" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="112" ElType=".P" desc="buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="130" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1552143827" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="130" locStartPos="0" locEndLn="131" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="122" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="123" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="122" ElType=".C" desc="void dynamic_buffer_overrun_007 ()" rngLn="122">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="124" ElType="!" desc="calloc(...)" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="124" ElType="!" desc="double *buf=(double*) calloc(5,sizeof(double));" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="125" ElType="." desc="int i;" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="126" ElType="." desc="if(buf!=NULL)" rngLn="126">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="128" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="128">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="130" ElType="." desc="buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="128" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="128">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="130" ElType=".P" desc="buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="146" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="287116564" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="142" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="143" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="142" ElType=".C" desc="calloc(...)" rngLn="142">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="142" ElType="!" desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="142">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="143" ElType="." desc="int i,j;" rngLn="143">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="145" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="146" ElType=".P" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf[i]&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="152" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1823909164" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="152" locStartPos="0" locEndLn="153" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="140" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="141" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="140" ElType=".C" desc="void dynamic_buffer_overrun_008 ()" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="142" ElType="." desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="142">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="143" ElType="." desc="int i,j;" rngLn="143">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="145" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="146" ElType="." desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="145" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="146" ElType="!" desc="calloc(...)" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="146" ElType="!" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="145" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="150" ElType="." desc="for(j=0;j&lt;=5;j++)" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="152" ElType="." desc="*(*(buf+i)+j)=i;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="150" ElType="." desc="for(j=0;j&lt;=5;j++)" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="152" ElType=".P" desc="*(*(buf+i)+j)=i;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="152">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dynamic_buffer_overrun_009 ( ) { int * buf1 = ( int * )...'" ln="164" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1374924581" NvActs="3" locStartln="164" locStartPos="0" locEndLn="181" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="164" ElType="" desc="[Line 164] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="1006758075">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="163" ElType="" desc="[Line 163] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="-508113947">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="164" ElType="" desc="[Line 164] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="1230576599">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="174" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="538852006" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="174" locStartPos="0" locEndLn="175" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="165" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="166" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="165" ElType=".C" desc="calloc(...)" rngLn="165">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="165" ElType="!" desc="int *buf1=(int*)calloc(5,sizeof(int));" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="166" ElType="." desc="int *buf2=(int*)calloc(5,sizeof(int));" rngLn="166">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="167" ElType="." desc="int *buf3=(int*)calloc(5,sizeof(int));" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="168" ElType="." desc="int *buf4=(int*)calloc(5,sizeof(int));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="169" ElType="." desc="int *buf5=(int*)calloc(5,sizeof(int));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="170" ElType="!" desc="int **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="171" ElType="." desc="int i,j=6;" rngLn="171">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="172" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="172">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="174" ElType=".P" desc="*((*pbuf[i])+j)=5;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="174">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;*pbuf[i]&quot; out of bounds at index 6. Correct index(es): [0...4]" ln="174" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1133384050" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="174" locStartPos="0" locEndLn="175" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="163" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="164" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="163" ElType=".C" desc="void dynamic_buffer_overrun_009 ()" rngLn="163">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="165" ElType="." desc="int *buf1=(int*)calloc(5,sizeof(int));" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="166" ElType="." desc="int *buf2=(int*)calloc(5,sizeof(int));" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="167" ElType="." desc="int *buf3=(int*)calloc(5,sizeof(int));" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="168" ElType="." desc="int *buf4=(int*)calloc(5,sizeof(int));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="169" ElType="." desc="int *buf5=(int*)calloc(5,sizeof(int));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="170" ElType="." desc="int **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="171" ElType="." desc="int i,j=6;" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="172" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="172">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="174" ElType=".P" desc="*((*pbuf[i])+j)=5;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="174">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;sbuf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="198" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1265913509" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="198" locStartPos="0" locEndLn="199" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="193" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="194" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="193" ElType=".C" desc="void dynamic_buffer_overrun_010 ()" rngLn="193">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="195" ElType="!" desc="calloc(...)" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="195" ElType="!" desc="dynamic_buffer_overrun_010_s_001* sbuf= calloc(5,sizeof(dynamic_buffer_overrun_010_s_001)) ;" rngLn="195">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="196" ElType="." desc="if(sbuf!=NULL)" rngLn="196">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (sbuf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="198" ElType=".P" desc="sbuf[5].a = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="198">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;s&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="218" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-281404631" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="218" locStartPos="0" locEndLn="219" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="213" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="214" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="213" ElType=".C" desc="void dynamic_buffer_overrun_011 ()" rngLn="213">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="215" ElType="!" desc="calloc(...)" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="215" ElType="!" desc="dynamic_buffer_overrun_011_s_001* s=(dynamic_buffer_overrun_011_s_001*) calloc(5,sizeof(dynamic_buffer_overrun_011_s_001)) ;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="216" ElType="." desc="if(s!=NULL)" rngLn="216">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="218" ElType=".P" desc="(s+5)->buf[4] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="218">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="233" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2063701287" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="233" locStartPos="0" locEndLn="234" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="227" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="228" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="227" ElType=".C" desc="void dynamic_buffer_overrun_012 ()" rngLn="227">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="229" ElType="!" desc="calloc(...)" rngLn="229">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="229" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="229">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="230" ElType="." desc="int index = 5;" rngLn="230">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="231" ElType="." desc="if(buf!=NULL)" rngLn="231">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="233" ElType=".P" desc="*(buf+index)=9;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="233">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="248" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2063701311" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="248" locStartPos="0" locEndLn="249" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="242" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="243" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="242" ElType=".C" desc="void dynamic_buffer_overrun_013()" rngLn="242">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="244" ElType="!" desc="calloc(...)" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="244" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="245" ElType="." desc="int index = 5;" rngLn="245">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="246" ElType="." desc="if(buf!=NULL)" rngLn="246">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="248" ElType=".P" desc="buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="248">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 7. Correct index(es): [0...4]" ln="263" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1446645362" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="263" locStartPos="0" locEndLn="264" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="257" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="258" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="257" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="257" ElType=".C" desc="void dynamic_buffer_overrun_014 ()" rngLn="257">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="259" ElType="!" desc="calloc(...)" rngLn="259">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="259" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="259">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="260" ElType="." desc="int index = 3;" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="261" ElType="." desc="if(buf!=NULL)" rngLn="261">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="263" ElType=".P" desc="*(buf +((2 * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="263">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="278" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-879334436" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="278" locStartPos="0" locEndLn="279" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="272" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="273" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="272" ElType=".C" desc="void dynamic_buffer_overrun_015 ()" rngLn="272">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="274" ElType="!" desc="calloc(...)" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="274" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="275" ElType="." desc="int index = 2;" rngLn="275">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="276" ElType="." desc="if(buf!=NULL)" rngLn="276">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="278" ElType=".P" desc="buf[(index * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="298" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1732104255" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="298" locStartPos="0" locEndLn="299" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="293" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="294" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="293" srcRngStartPos="0" srcRngEndLn="294" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="293" ElType=".C" desc="void dynamic_buffer_overrun_016 ()" rngLn="293">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="295" srcRngStartPos="0" srcRngEndLn="296" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="295" ElType="!" desc="calloc(...)" rngLn="295">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="295" srcRngStartPos="0" srcRngEndLn="296" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="295" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="295">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="296" srcRngStartPos="0" srcRngEndLn="297" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="296" ElType="." desc="if(buf!=NULL)" rngLn="296">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="298" ElType="." desc="dynamic_buffer_overrun_016_func_001()" rngLn="298">
          <ElDescList>
            <ElDesc srcRngStartln="290" srcRngStartPos="0" srcRngEndLn="291" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="290" ElType="." desc="return 5;" rngLn="290">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="298" ElType=".P" desc="buf[dynamic_buffer_overrun_016_func_001 ()] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="298">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="312" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1297097028" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="312" locStartPos="0" locEndLn="313" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="317" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="318" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="317" ElType=".C" desc="void dynamic_buffer_overrun_017 ()" rngLn="317">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="319" ElType="!" desc="dynamic_buffer_overrun_017_func_001(5);" rngLn="319">
          <ElDescList>
            <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="309" ElType="!" desc="calloc(...)" rngLn="309">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="309" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="309">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="310" srcRngStartPos="0" srcRngEndLn="311" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="310" ElType="." desc="if(buf!=NULL)" rngLn="310">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="312" srcRngStartPos="0" srcRngEndLn="313" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="312" ElType=".P" desc="*(buf +index) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="312">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;indexes&quot; out of bounds at index 4. Correct index(es): [0...3]" ln="333" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-307779544" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="333" locStartPos="0" locEndLn="334" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="326" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="327" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="326" srcRngStartPos="0" srcRngEndLn="327" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="326" ElType=".C" desc="void dynamic_buffer_overrun_018 ()" rngLn="326">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="328" srcRngStartPos="0" srcRngEndLn="329" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="328" ElType="." desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="328">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="329" srcRngStartPos="0" srcRngEndLn="330" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="329" ElType="!" desc="int indexes[4] = {3, 4, 5, 6};" rngLn="329">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="330" ElType="." desc="int index = 4;" rngLn="330">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="331" ElType="." desc="if(buf!=NULL)" rngLn="331">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="333" ElType=".P" desc="*(buf+indexes[index]) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="333">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="350" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1237464353" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="350" locStartPos="0" locEndLn="351" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="342" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="343" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="342" srcRngStartPos="0" srcRngEndLn="343" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="342" ElType=".C" desc="void dynamic_buffer_overrun_019 ()" rngLn="342">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="344" ElType="!" desc="calloc(...)" rngLn="344">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="344" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="344">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="345" srcRngStartPos="0" srcRngEndLn="346" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="345" ElType="." desc="int index = 5;" rngLn="345">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="346" ElType="." desc="int index1;" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="347" ElType="." desc="index1 = index;" rngLn="347">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="348" ElType="." desc="if(buf!=NULL)" rngLn="348">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="350" srcRngStartPos="0" srcRngEndLn="351" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="350" ElType=".P" desc="buf[index1] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="350">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="369" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2050638250" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="369" locStartPos="0" locEndLn="370" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="359" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="360" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="359" ElType=".C" desc="void dynamic_buffer_overrun_020 ()" rngLn="359">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="361" srcRngStartPos="0" srcRngEndLn="362" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="361" ElType="!" desc="calloc(...)" rngLn="361">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="361" srcRngStartPos="0" srcRngEndLn="362" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="361" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="361">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="362" ElType="." desc="int index = 5;" rngLn="362">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="363" srcRngStartPos="0" srcRngEndLn="364" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="363" ElType="." desc="int index1;" rngLn="363">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="364" srcRngStartPos="0" srcRngEndLn="365" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="364" ElType="." desc="int index2;" rngLn="364">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="365" srcRngStartPos="0" srcRngEndLn="366" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="365" ElType="." desc="index1 = index;" rngLn="365">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="366" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="366" ElType="." desc="index2 = index1;" rngLn="366">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="367" ElType="." desc="if(buf!=NULL)" rngLn="367">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="369" ElType=".P" desc="buf[index2] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="369">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p2&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="387" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1017839468" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="387" locStartPos="0" locEndLn="388" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="378" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="379" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="378" ElType=".C" desc="void dynamic_buffer_overrun_021 ()" rngLn="378">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="380" ElType="!" desc="calloc(...)" rngLn="380">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="380" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="380">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="381" srcRngStartPos="0" srcRngEndLn="382" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="381" ElType="." desc="int *p1;" rngLn="381">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="382" srcRngStartPos="0" srcRngEndLn="383" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="382" ElType="." desc="int *p2;" rngLn="382">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="383" ElType="." desc="if(buf!=NULL)" rngLn="383">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="385" ElType="!" desc="p1 = buf;" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="386" ElType="!" desc="p2 = p1;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="387" ElType=".P" desc="*(p2+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="387">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="403" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-2118343361" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="403" locStartPos="0" locEndLn="404" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="396" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="397" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="396" ElType=".C" desc="void dynamic_buffer_overrun_022 ()" rngLn="396">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="398" ElType="!" desc="calloc(...)" rngLn="398">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="398" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="398">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="399" ElType="." desc="int *p;" rngLn="399">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="400" ElType="." desc="if(buf!=NULL)" rngLn="400">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="402" ElType="!" desc="p = buf;" rngLn="402">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="403" ElType=".P" desc="*(p+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="403">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="435" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="11838668" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="435" locStartPos="0" locEndLn="436" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="440" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="441" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType=".C" desc="calloc(...)" rngLn="440">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="442" ElType="!" desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="442">
          <ElDescList>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="435" ElType=".P" desc="*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="435">
              <Props>
                <Prop key="Tracked variables" val="buf" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: buf" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="435" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1528695210" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="435" locStartPos="0" locEndLn="436" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="438" ElType=".C" desc="void dynamic_buffer_overrun_024 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType="!" desc="calloc(...)" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="442" ElType="!" desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="442">
          <ElDescList>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="435" ElType=".P" desc="*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="435">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; is checked for null after being dereferenced" ln="443" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="910323187" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="443" locStartPos="0" locEndLn="444" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="435" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="436" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="442" ElType="!" desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="442">
          <ElDescList>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="435" ElType=".C" desc="*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="435">
              <Props>
                <Prop key="Tracked variables" val="buf != null" />
              </Props>
              <Anns>
                <Ann msg="Point of dereferencing" kind="cause" />
                <Ann msg="Important values: buf != null" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="443" ElType=".P" desc="if(buf!=NULL)" rngLn="443">
          <Props>
            <Prop key="Tracked variables" val="buf != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: buf != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;buf != 0&quot; always evaluates to true" ln="443" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1346758817" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="443" locStartPos="0" locEndLn="444" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="438" ElType=".C" desc="void dynamic_buffer_overrun_024 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType="!" desc="calloc(...)" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="440" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="442" ElType="." desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="442">
          <ElDescList>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="435" ElType="." desc="*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="435">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="443" ElType=".P" desc="if(buf!=NULL)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="462" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1570521121" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="462" locStartPos="0" locEndLn="463" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="454" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="455" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="454" srcRngStartPos="0" srcRngEndLn="455" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="454" ElType=".C" desc="void dynamic_buffer_overrun_025 ()" rngLn="454">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="456" srcRngStartPos="0" srcRngEndLn="457" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="456" ElType="!" desc="calloc(...)" rngLn="456">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="456" srcRngStartPos="0" srcRngEndLn="457" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="456" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="456">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="457" ElType="." desc="int i;" rngLn="457">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="458" srcRngStartPos="0" srcRngEndLn="459" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="458" ElType="." desc="if(buf!=NULL)" rngLn="458">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="460" srcRngStartPos="0" srcRngEndLn="461" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="460" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="460">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="462" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="462" ElType="." desc="buf[i]='1';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="462">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="460" srcRngStartPos="0" srcRngEndLn="461" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="460" ElType="." desc="for(i=0;i&lt;=5;i++)" rngLn="460">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="462" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="462" ElType=".P" desc="buf[i]='1';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="462">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): 0" ln="480" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1651811953" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="480" locStartPos="0" locEndLn="481" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="473" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="474" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="473" ElType=".C" desc="void dynamic_buffer_overrun_026 ()" rngLn="473">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="475" ElType="!" desc="calloc(...)" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="475" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="476" srcRngStartPos="0" srcRngEndLn="477" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="476" ElType="." desc="int *p;" rngLn="476">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="477" srcRngStartPos="0" srcRngEndLn="478" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="477" ElType="!" desc="p = (int*)buf;" rngLn="477">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="478" ElType="." desc="if(buf!=NULL)" rngLn="478">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="480" srcRngStartPos="0" srcRngEndLn="481" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="480" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="480">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 30. Correct index(es): [0...19]" ln="496" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="651361206" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="496" locStartPos="0" locEndLn="497" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="489" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="490" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="489" ElType=".C" desc="void dynamic_buffer_overrun_027 ()" rngLn="489">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="491" ElType="!" desc="calloc(...)" rngLn="491">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="491" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="491">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="492" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="492" ElType="." desc="char *p;" rngLn="492">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="493" ElType="!" desc="p = (char*)buf;" rngLn="493">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="494" srcRngStartPos="0" srcRngEndLn="495" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="494" ElType="." desc="if(buf!=NULL)" rngLn="494">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="496" srcRngStartPos="0" srcRngEndLn="497" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="496" ElType=".P" desc="*(p + 30) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="496">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dynamic_buffer_overrun_028 ( ) { int * buf1 = ( int * )...'" ln="506" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1374924581" NvActs="3" locStartln="506" locStartPos="0" locEndLn="517" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="506" ElType="" desc="[Line 506] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="-1189145885">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="505" ElType="" desc="[Line 505] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="-1967682480">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;buf1&quot; may possibly be null" ln="512" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1711640148" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="512" locStartPos="0" locEndLn="513" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="507" ElType=".C" desc="calloc(...)" rngLn="507">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="507" ElType="!" desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="508" ElType="." desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="508">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="512" ElType=".P" desc="*(buf1+i)=i;" rngLn="512">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf2&quot; may possibly be null" ln="514" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1562790955" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="514" locStartPos="0" locEndLn="515" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="508" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="509" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="507" ElType="." desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="508" ElType=".C" desc="calloc(...)" rngLn="508">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="508" ElType="!" desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="512" ElType="." desc="*(buf1+i)=i;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="514" ElType=".P" desc="*(buf2+*(buf1+5))=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="514">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf1&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="514" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-297827457" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="514" locStartPos="0" locEndLn="515" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="505" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="506" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="505" ElType=".C" desc="void dynamic_buffer_overrun_028 ()" rngLn="505">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="507" ElType="!" desc="calloc(...)" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="507" ElType="!" desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="508" ElType="." desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="512" ElType="." desc="*(buf1+i)=i;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="512" ElType="." desc="*(buf1+i)=i;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="510" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="514" ElType=".P" desc="*(buf2+*(buf1+5))=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="514">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 2. Correct index(es): 0" ln="532" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-497249336" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="532" locStartPos="0" locEndLn="533" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="523" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="524" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="523" ElType=".C" desc="void dynamic_buffer_overrun_029()" rngLn="523">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="526" ElType="." desc="int i=1;" rngLn="526">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="527" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="527" ElType="." desc="while (i)" rngLn="527">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i != 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="529" srcRngStartPos="0" srcRngEndLn="530" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="529" ElType="!" desc="malloc(...)" rngLn="529">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="529" srcRngStartPos="0" srcRngEndLn="530" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="529" ElType="!" desc="char* buf= (char*) malloc(sizeof(char));" rngLn="529">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="530" srcRngStartPos="0" srcRngEndLn="531" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="530" ElType="." desc="if(buf!=NULL)" rngLn="530">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="532" ElType=".P" desc="buf[i+1]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="532">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="551" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="713477784" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="551" locStartPos="0" locEndLn="552" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="547" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="548" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="546" ElType="." desc="int i,j;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="547" ElType=".C" desc="malloc(...)" rngLn="547">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="547" ElType="!" desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="547">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="551" ElType=".P" desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="551">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;doubleptr[i]&quot; out of bounds at index [1...10]. Correct index(es): [0...9]" ln="559" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2076593496" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="559" locStartPos="0" locEndLn="560" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="544" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="545" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="544" ElType=".C" desc="void dynamic_buffer_overrun_030()" rngLn="544">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="546" ElType="." desc="int i,j;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="547" ElType="." desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="547">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="551" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="551" ElType="!" desc="malloc(...)" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="551" ElType="!" desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="555" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="555">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="557" ElType="." desc="for(j=0;j&lt;=10;j++)" rngLn="557">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt;= 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="559" ElType="." desc="doubleptr[i][j]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="557" ElType="." desc="for(j=0;j&lt;=10;j++)" rngLn="557">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt;= 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="559" ElType=".P" desc="doubleptr[i][j]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="559">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr1&quot; out of bounds at index [1...12]. Correct index(es): [0...11]" ln="580" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1108966405" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="580" locStartPos="0" locEndLn="581" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="570" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="571" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="570" srcRngStartPos="0" srcRngEndLn="571" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="570" ElType=".C" desc="void dynamic_buffer_overrun_031()" rngLn="570">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="572" srcRngStartPos="0" srcRngEndLn="573" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="572" ElType="." desc="int i;" rngLn="572">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="573" ElType="!" desc="calloc(...)" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="573" ElType="!" desc="char* ptr1=(char*) calloc(12, sizeof(char));" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="574" srcRngStartPos="0" srcRngEndLn="575" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="574" ElType="." desc="char a[12],*ptr2 = a;" rngLn="574">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="576" srcRngStartPos="0" srcRngEndLn="577" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="576" ElType="." desc="if(ptr1!=NULL)" rngLn="576">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="578" srcRngStartPos="0" srcRngEndLn="579" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="578" ElType="." desc="for(i=0;i&lt;=12;i++)" rngLn="578">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 12) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="580" ElType="." desc="ptr1[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="580">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="578" srcRngStartPos="0" srcRngEndLn="579" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="578" ElType="." desc="for(i=0;i&lt;=12;i++)" rngLn="578">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 12) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="580" ElType=".P" desc="ptr1[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/" rngLn="580">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr_s&quot; out of bounds at index [1...10]. Correct index(es): [0...9]" ln="607" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-249766955" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="607" locStartPos="0" locEndLn="608" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="599" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="600" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="600" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="599" ElType=".C" desc="void dynamic_buffer_overrun_032()" rngLn="599">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="601" srcRngStartPos="0" srcRngEndLn="602" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="601" ElType="!" desc="malloc(...)" rngLn="601">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="601" srcRngStartPos="0" srcRngEndLn="602" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="601" ElType="!" desc="dynamic_buffer_overrun_s_005* ptr_s= malloc(10*sizeof(dynamic_buffer_overrun_s_005));" rngLn="601">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="602" srcRngStartPos="0" srcRngEndLn="603" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="602" ElType="." desc="int i;" rngLn="602">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="603" srcRngStartPos="0" srcRngEndLn="604" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="603" ElType="." desc="if(ptr_s!=NULL)" rngLn="603">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr_s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="605" srcRngStartPos="0" srcRngEndLn="606" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="605" ElType="." desc="for(i=0;i&lt;=10;i++)" rngLn="605">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="607" srcRngStartPos="0" srcRngEndLn="608" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="607" ElType="." desc="ptr_s[i].arr[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*///vm - Changed arri(int) to arr(char);" rngLn="607">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="605" srcRngStartPos="0" srcRngEndLn="606" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="605" ElType="." desc="for(i=0;i&lt;=10;i++)" rngLn="605">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="607" srcRngStartPos="0" srcRngEndLn="608" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="607" ElType=".P" desc="ptr_s[i].arr[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*///vm - Changed arri(int) to arr(char);" rngLn="607">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 33 is out of acceptable range: 'lower than 30'" ln="617" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="1374924581" locStartln="617" locStartPos="0" locEndLn="618" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" />
    <DupViol msg="Duplicated function: 'void dynamic_buffer_overrun_main ( ) { if ( vflag == 1 ||...'" ln="618" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1374924581" NvActs="3" locStartln="618" locStartPos="0" locEndLn="778" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="618" srcRngStartPos="0" srcRngEndLn="778" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_overrun_dynamic.c" srcRnghash="1374924581" ln="618" ElType="" desc="[Line 618] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="1881408818">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="618" srcRngStartPos="0" srcRngEndLn="779" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="618" ElType="" desc="[Line 618] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="-1805872226">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="29" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1325315319" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="29" locStartPos="0" locEndLn="30" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="20" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="21" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="20" ElType=".C" desc="void dynamic_buffer_underrun_001 ()" rngLn="20">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="22" ElType="!" desc="calloc(...)" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="22" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="23" ElType="." desc="int i;" rngLn="23">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="24" ElType="." desc="printf(&quot;print bufferundr&quot;);" rngLn="24">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="25" ElType="." desc="if(buf!=NULL)" rngLn="25">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="27" ElType="." desc="for (i=4;i>=-1;i--)" rngLn="27">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="29" ElType="." desc="buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="29">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="27" ElType="." desc="for (i=4;i>=-1;i--)" rngLn="27">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="29" ElType=".P" desc="buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="45" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-529819433" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="39" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="40" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="39" ElType=".C" desc="void dynamic_buffer_underrun_002 ()" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="41" ElType="." desc="printf(&quot;underrun2&quot;);" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="42" ElType="!" desc="calloc(...)" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="42" ElType="!" desc="short *buf=(short*) calloc(5,sizeof(short));" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="43" ElType="." desc="if(buf!=NULL)" rngLn="43">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="45" ElType=".P" desc="*(buf-5)=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="45">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="65" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-872008955" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="65" locStartPos="0" locEndLn="66" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="54" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="55" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="54" ElType=".C" desc="void dynamic_buffer_underrun_003 ()" rngLn="54">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="56" ElType="!" desc="calloc(...)" rngLn="56">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="56" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="56">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="57" ElType="." desc="int ret;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="58" ElType="." desc="int i;" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="59" ElType="." desc="if(buf!=NULL)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="61" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="61">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="63" ElType="." desc="buf[i]=1;" rngLn="63">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="61" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="61">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="63" ElType="." desc="buf[i]=1;" rngLn="63">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="61" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="61">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="65" ElType=".P" desc="ret = buf[-1]; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="65">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="80" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-646853070" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="80" locStartPos="0" locEndLn="81" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="75" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="76" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="75" ElType=".C" desc="void dynamic_buffer_underrun_004 ()" rngLn="75">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="77" ElType="!" desc="calloc(...)" rngLn="77">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="77" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="77">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="78" ElType="." desc="if(buf!=NULL)" rngLn="78">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="80" ElType=".P" desc="*(buf-5) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="97" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1924083720" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="97" locStartPos="0" locEndLn="98" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="89" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="90" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="89" ElType=".C" desc="void dynamic_buffer_underrun_005 ()" rngLn="89">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="91" ElType="!" desc="calloc(...)" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="91" ElType="!" desc="long *buf=(long*) calloc(5,sizeof(long));" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="92" ElType="." desc="int i;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="93" ElType="." desc="if(buf!=NULL)" rngLn="93">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="95" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="95">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="97" ElType=".P" desc="buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="97">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="115" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="557322390" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="107" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="108" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="107" ElType=".C" desc="void dynamic_buffer_underrun_006 ()" rngLn="107">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="109" ElType="!" desc="calloc(...)" rngLn="109">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="109" ElType="!" desc="float *buf=(float*) calloc(5,sizeof(float));" rngLn="109">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="110" ElType="." desc="int i;" rngLn="110">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="111" ElType="." desc="if(buf!=NULL)" rngLn="111">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="113" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="113">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="115" ElType=".P" desc="buf[i]=1.0; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="115">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="133" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-191796419" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="133" locStartPos="0" locEndLn="134" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="125" ElType=".C" desc="void dynamic_buffer_underrun_007 ()" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="127" ElType="!" desc="calloc(...)" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="127" ElType="!" desc="double *buf=(double*) calloc(5,sizeof(double));" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="128" ElType="." desc="int i;" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="129" ElType="." desc="if(buf!=NULL)" rngLn="129">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="131" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="131">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="133" ElType=".P" desc="buf[i]=1.0; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="133">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="149" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="287116564" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="149" locStartPos="0" locEndLn="150" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="145" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="146" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="145" ElType=".C" desc="calloc(...)" rngLn="145">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="145" ElType="!" desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="146" ElType="." desc="int i,j;" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="149" ElType=".P" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="155" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1555831213" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="155" locStartPos="0" locEndLn="156" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="143" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="144" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="143" ElType=".C" desc="void dynamic_buffer_underrun_008 ()" rngLn="143">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="145" ElType="!" desc="calloc(...)" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="145" ElType="!" desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="146" ElType="." desc="int i,j;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="149" ElType="." desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="149" ElType="." desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="151" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="151">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="153" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="155" ElType=".P" desc="*(*(buf+i)+j)=i; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="155">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf[0]" ln="161" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-316500910" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="161" locStartPos="0" locEndLn="162" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="149" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="150" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="145" ElType="." desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="146" ElType="." desc="int i,j;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="149" ElType=".C" desc="calloc(...)" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="149" ElType="!" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="148" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="148">
          <Props>
            <Prop key="Tracked variables" val="buf[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf[0]" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="151" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="151">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="153" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="155" ElType="." desc="*(*(buf+i)+j)=i; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="155">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="153" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="157" ElType="." desc="if(i>0)" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i > 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="151" ElType="." desc="for(i=-1;i&lt;5;i++)" rngLn="151">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="160" ElType="." desc="free(buf);" rngLn="160">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="161" ElType=".P" desc="}" rngLn="161">
          <Props>
            <Prop key="Tracked variables" val="buf[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf[0]" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;pbuf&quot; out of bounds at index -3. Correct index(es): [0...4]" ln="178" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1671839767" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="178" locStartPos="0" locEndLn="179" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="167" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="168" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="167" ElType=".C" desc="void dynamic_buffer_underrun_009 ()" rngLn="167">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="169" ElType="." desc="int *buf1=(int*)calloc(5,sizeof(int));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="170" ElType="." desc="int *buf2=(int*)calloc(5,sizeof(int));" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="171" ElType="." desc="int *buf3=(int*)calloc(5,sizeof(int));" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="172" ElType="." desc="int *buf4=(int*)calloc(5,sizeof(int));" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="173" ElType="." desc="int *buf5=(int*)calloc(5,sizeof(int));" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="174" ElType="!" desc="int **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="175" ElType="." desc="int i,j=4;" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="176" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="176">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="178" ElType=".P" desc="*((*pbuf[i-3])+j)=5; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;sbuf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="202" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-110108922" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="202" locStartPos="0" locEndLn="203" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="197" ElType=".C" desc="void dynamic_buffer_underrun_010 ()" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="199" ElType="!" desc="calloc(...)" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="199" ElType="!" desc="dynamic_buffer_underrun_010_s_001* sbuf= (dynamic_buffer_underrun_010_s_001*) calloc(5,sizeof(dynamic_buffer_underrun_010_s_001)) ;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="200" ElType="." desc="if(sbuf!=NULL)" rngLn="200">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (sbuf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="202" ElType=".P" desc="sbuf[-1].a = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="202">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;s&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="222" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1147663571" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="222" locStartPos="0" locEndLn="223" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="217" ElType=".C" desc="void dynamic_buffer_underrun_011 ()" rngLn="217">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="219" ElType="!" desc="calloc(...)" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="219" ElType="!" desc="dynamic_buffer_underrun_011_s_001* s=(dynamic_buffer_underrun_011_s_001*) calloc(5,sizeof(dynamic_buffer_underrun_011_s_001)) ;" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="220" ElType="." desc="if(s!=NULL)" rngLn="220">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="222" ElType=".P" desc="(s-5)->buf[4] = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="222">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="237" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1948268662" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="237" locStartPos="0" locEndLn="238" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="231" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="232" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="231" ElType=".C" desc="void dynamic_buffer_underrun_012 ()" rngLn="231">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="233" ElType="!" desc="calloc(...)" rngLn="233">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="233" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="233">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="234" ElType="." desc="int index = 5;" rngLn="234">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="235" ElType="." desc="if(buf!=NULL)" rngLn="235">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="237" ElType=".P" desc="*(buf-index)=9; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="237">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="268" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="112953884" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="268" locStartPos="0" locEndLn="269" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="262" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="263" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="262" ElType=".C" desc="void dynamic_buffer_underrun_014 ()" rngLn="262">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="264" ElType="!" desc="calloc(...)" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="264" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="265" ElType="." desc="int index = 3;" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="266" ElType="." desc="if(buf!=NULL)" rngLn="266">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="268" ElType=".P" desc="*(buf +((-2 * index) + 1)) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="268">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="283" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-570865591" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="283" locStartPos="0" locEndLn="284" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="277" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="278" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="277" ElType=".C" desc="void dynamic_buffer_underrun_015 ()" rngLn="277">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="279" ElType="!" desc="calloc(...)" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="279" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="280" ElType="." desc="int index = 2;" rngLn="280">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="281" ElType="." desc="if(buf!=NULL)" rngLn="281">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="283" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="283" ElType=".P" desc="buf[(index * index) - 5] = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="283">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="303" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1136720059" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="303" locStartPos="0" locEndLn="304" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="298" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="299" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="298" ElType=".C" desc="void dynamic_buffer_underrun_016 ()" rngLn="298">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="300" srcRngStartPos="0" srcRngEndLn="301" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="300" ElType="!" desc="calloc(...)" rngLn="300">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="300" srcRngStartPos="0" srcRngEndLn="301" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="300" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="300">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="301" srcRngStartPos="0" srcRngEndLn="302" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="301" ElType="." desc="if(buf!=NULL)" rngLn="301">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="303" srcRngStartPos="0" srcRngEndLn="304" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="303" ElType="." desc="dynamic_buffer_underrun_016_func_001()" rngLn="303">
          <ElDescList>
            <ElDesc srcRngStartln="295" srcRngStartPos="0" srcRngEndLn="296" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="295" ElType="." desc="return -1;" rngLn="295">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="303" srcRngStartPos="0" srcRngEndLn="304" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="303" ElType=".P" desc="buf[dynamic_buffer_underrun_016_func_001 ()] = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="303">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="317" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1290561215" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="317" locStartPos="0" locEndLn="318" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="322" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="323" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="322" srcRngStartPos="0" srcRngEndLn="323" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="322" ElType=".C" desc="void dynamic_buffer_underrun_017 ()" rngLn="322">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="324" srcRngStartPos="0" srcRngEndLn="325" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="324" ElType="!" desc="dynamic_buffer_underrun_017_func_001(5);" rngLn="324">
          <ElDescList>
            <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="314" ElType="!" desc="calloc(...)" rngLn="314">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="314" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="314">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="315" srcRngStartPos="0" srcRngEndLn="316" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="315" ElType="." desc="if(buf!=NULL)" rngLn="315">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="317" ElType=".P" desc="*(buf -index) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="317">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="338" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1853737668" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="338" locStartPos="0" locEndLn="339" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="331" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="332" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="331" ElType=".C" desc="void dynamic_buffer_underrun_018 ()" rngLn="331">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="333" ElType="!" desc="calloc(...)" rngLn="333">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="333" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="333">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="334" srcRngStartPos="0" srcRngEndLn="335" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="334" ElType="." desc="int indexes[4] = {3, 4, 5, 6};" rngLn="334">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="335" srcRngStartPos="0" srcRngEndLn="336" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="335" ElType="." desc="int index = 2;" rngLn="335">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="336" ElType="." desc="if(buf!=NULL)" rngLn="336">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="338" ElType=".P" desc="*(buf-indexes[index]) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="338">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="355" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1936858263" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="355" locStartPos="0" locEndLn="356" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="347" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="348" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="347" ElType=".C" desc="void dynamic_buffer_underrun_019 ()" rngLn="347">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="349" ElType="!" desc="calloc(...)" rngLn="349">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="349" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="349">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="350" srcRngStartPos="0" srcRngEndLn="351" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="350" ElType="." desc="int index = -5;" rngLn="350">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="351" ElType="." desc="int index1;" rngLn="351">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="352" srcRngStartPos="0" srcRngEndLn="353" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="352" ElType="." desc="index1 = index;" rngLn="352">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="353" ElType="." desc="if(buf!=NULL)" rngLn="353">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="356" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="355" ElType=".P" desc="buf[index1] = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="355">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="374" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1760760228" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="374" locStartPos="0" locEndLn="375" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="364" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="365" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="364" srcRngStartPos="0" srcRngEndLn="365" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="364" ElType=".C" desc="void dynamic_buffer_underrun_020 ()" rngLn="364">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="366" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="366" ElType="!" desc="calloc(...)" rngLn="366">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="366" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="366" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="366">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="367" ElType="." desc="int index = -5;" rngLn="367">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="368" ElType="." desc="int index1;" rngLn="368">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="369" ElType="." desc="int index2;" rngLn="369">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="370" srcRngStartPos="0" srcRngEndLn="371" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="370" ElType="." desc="index1 = index;" rngLn="370">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="371" ElType="." desc="index2 = index1;" rngLn="371">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="372" ElType="." desc="if(buf!=NULL)" rngLn="372">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="374" srcRngStartPos="0" srcRngEndLn="375" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="374" ElType=".P" desc="buf[index2] = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="374">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p2&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="392" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1257949207" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="392" locStartPos="0" locEndLn="393" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="383" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="384" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="383" ElType=".C" desc="void dynamic_buffer_underrun_021 ()" rngLn="383">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="385" ElType="!" desc="calloc(...)" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="385" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="386" ElType="." desc="int *p1;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="387" ElType="." desc="int *p2;" rngLn="387">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="388" ElType="." desc="if(buf!=NULL)" rngLn="388">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="390" srcRngStartPos="0" srcRngEndLn="391" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="390" ElType="!" desc="p1 = buf;" rngLn="390">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="391" ElType="!" desc="p2 = p1;" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="392" ElType=".P" desc="*(p2-5) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="392">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="408" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-2017226564" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="408" locStartPos="0" locEndLn="409" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="401" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="402" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="401" ElType=".C" desc="void dynamic_buffer_underrun_022 ()" rngLn="401">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="403" ElType="!" desc="calloc(...)" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="403" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="404" ElType="." desc="int *p;" rngLn="404">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="405" ElType="." desc="if(buf!=NULL)" rngLn="405">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="407" srcRngStartPos="0" srcRngEndLn="408" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="407" ElType="!" desc="p = buf;" rngLn="407">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="408" ElType=".P" desc="*(p-5) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="408">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="427" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-290049952" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="427" locStartPos="0" locEndLn="428" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="417" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="418" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="417" ElType=".C" desc="void dynamic_buffer_underrun_023 ()" rngLn="417">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="419" srcRngStartPos="0" srcRngEndLn="420" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="419" ElType="!" desc="calloc(...)" rngLn="419">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="419" srcRngStartPos="0" srcRngEndLn="420" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="419" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="419">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="420" srcRngStartPos="0" srcRngEndLn="421" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="420" ElType="." desc="int *p;" rngLn="420">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="421" srcRngStartPos="0" srcRngEndLn="422" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="421" ElType="." desc="int i;" rngLn="421">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="422" ElType="." desc="if(buf!=NULL)" rngLn="422">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="424" ElType="!" desc="p = buf;" rngLn="424">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="425" ElType="." desc="for (i = 4; i >=-1; i--)" rngLn="425">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="427" srcRngStartPos="0" srcRngEndLn="428" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="427" ElType="." desc="p[i]='1'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="427">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="425" ElType="." desc="for (i = 4; i >=-1; i--)" rngLn="425">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="427" srcRngStartPos="0" srcRngEndLn="428" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="427" ElType=".P" desc="p[i]='1'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="427">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -5. Correct index(es): [0...4]" ln="439" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-967192472" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="439" locStartPos="0" locEndLn="440" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="442" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="443" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="442" ElType=".C" desc="void dynamic_buffer_underrun_024 ()" rngLn="442">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="444" ElType="!" desc="calloc(...)" rngLn="444">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="444" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="444">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="446" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="445" ElType="." desc="if(buf!=NULL)" rngLn="445">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="447" ElType="!" desc="dynamic_buffer_underrun_024_func_001(buf);" rngLn="447">
          <ElDescList>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="439" ElType=".P" desc="*(buf-5) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="439">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="466" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1472386080" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="466" locStartPos="0" locEndLn="467" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="457" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="458" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="457" ElType=".C" desc="void dynamic_buffer_underrun_025 ()" rngLn="457">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="459" srcRngStartPos="0" srcRngEndLn="460" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="459" ElType="!" desc="calloc(...)" rngLn="459">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="459" srcRngStartPos="0" srcRngEndLn="460" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="459" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="459">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="460" srcRngStartPos="0" srcRngEndLn="461" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="460" ElType="." desc="int i;" rngLn="460">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="462" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="462" ElType="." desc="if(buf!=NULL)" rngLn="462">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="464" srcRngStartPos="0" srcRngEndLn="465" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="464" ElType="." desc="for(i=4;i>=-1;i--)" rngLn="464">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="466" srcRngStartPos="0" srcRngEndLn="467" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="466" ElType="." desc="buf[i]='1'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="466">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="464" srcRngStartPos="0" srcRngEndLn="465" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="464" ElType="." desc="for(i=4;i>=-1;i--)" rngLn="464">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="466" srcRngStartPos="0" srcRngEndLn="467" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="466" ElType=".P" desc="buf[i]='1'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="466">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -10. Correct index(es): 0" ln="484" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-918847086" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="484" locStartPos="0" locEndLn="485" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="477" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="478" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="477" srcRngStartPos="0" srcRngEndLn="478" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="477" ElType=".C" desc="void dynamic_buffer_underrun_026 ()" rngLn="477">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="479" ElType="!" desc="calloc(...)" rngLn="479">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="479" ElType="!" desc="char *buf=(char*) calloc(5,sizeof(char));" rngLn="479">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="480" srcRngStartPos="0" srcRngEndLn="481" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="480" ElType="." desc="int *p;" rngLn="480">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="481" ElType="." desc="if(buf!=NULL)" rngLn="481">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="483" srcRngStartPos="0" srcRngEndLn="484" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="483" ElType="!" desc="p = (int*)buf;" rngLn="483">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="484" ElType=".P" desc="*(p - 10) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="484">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -10. Correct index(es): [0...19]" ln="500" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1972510895" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="500" locStartPos="0" locEndLn="501" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="493" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="494" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="493" ElType=".C" desc="void dynamic_buffer_underrun_027 ()" rngLn="493">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="495" srcRngStartPos="0" srcRngEndLn="496" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="495" ElType="!" desc="calloc(...)" rngLn="495">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="495" srcRngStartPos="0" srcRngEndLn="496" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="495" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="495">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="496" srcRngStartPos="0" srcRngEndLn="497" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="496" ElType="." desc="char *p;" rngLn="496">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="497" srcRngStartPos="0" srcRngEndLn="498" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="497" ElType="." desc="if(buf!=NULL)" rngLn="497">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="499" srcRngStartPos="0" srcRngEndLn="500" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="499" ElType="!" desc="p = (char*)buf;" rngLn="499">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="500" srcRngStartPos="0" srcRngEndLn="501" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="500" ElType=".P" desc="*(p - 10) = 1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="500">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dynamic_buffer_underrun_028 ( ) { int * buf1 = ( int * )...'" ln="510" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="779432510" NvActs="3" locStartln="510" locStartPos="0" locEndLn="522" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="510" ElType="" desc="[Line 510] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="-1133069118">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="506" ElType="" desc="[Line 506] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="-1641038178">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;buf1&quot; may possibly be null" ln="517" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1711640148" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="517" locStartPos="0" locEndLn="518" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="511" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="512" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="511" ElType=".C" desc="calloc(...)" rngLn="511">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="511" ElType="!" desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="511">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="512" ElType="." desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="512">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="513" ElType="." desc="int i;" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="517" ElType=".P" desc="*(buf1+i)=i;" rngLn="517">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf2&quot; may possibly be null" ln="519" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-796666173" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="519" locStartPos="0" locEndLn="520" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="512" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="513" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="511" ElType="." desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="511">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="512" ElType=".C" desc="calloc(...)" rngLn="512">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="512" ElType="!" desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="513" ElType="." desc="int i;" rngLn="513">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="517" ElType="." desc="*(buf1+i)=i;" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="519" srcRngStartPos="0" srcRngEndLn="520" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="519" ElType=".P" desc="*(buf2-*(buf1+4))=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="519">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf2&quot; out of bounds at index -4. Correct index(es): [0...2]" ln="519" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-467380162" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="519" locStartPos="0" locEndLn="520" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="509" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="510" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="509" ElType=".C" desc="void dynamic_buffer_underrun_028 ()" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="511" ElType="." desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="511">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="512" ElType="!" desc="calloc(...)" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="512" ElType="!" desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="513" ElType="." desc="int i;" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="517" ElType="." desc="*(buf1+i)=i;" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="517" ElType="." desc="*(buf1+i)=i;" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="519" srcRngStartPos="0" srcRngEndLn="520" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="519" ElType=".P" desc="*(buf2-*(buf1+4))=1; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="519">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): 0" ln="532" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1523246836" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="532" locStartPos="0" locEndLn="533" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="524" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="525" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="524" srcRngStartPos="0" srcRngEndLn="525" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="524" ElType=".C" desc="void dynamic_buffer_underrun_029()" rngLn="524">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="527" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="527" ElType="." desc="while (1)" rngLn="527">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="529" srcRngStartPos="0" srcRngEndLn="530" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="529" ElType="!" desc="malloc(...)" rngLn="529">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="529" srcRngStartPos="0" srcRngEndLn="530" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="529" ElType="!" desc="char* buf= (char*) malloc(sizeof(char));" rngLn="529">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="530" srcRngStartPos="0" srcRngEndLn="531" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="530" ElType="." desc="if(buf!=NULL)" rngLn="530">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="532" ElType=".P" desc="buf[-1]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="532">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="551" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="170058712" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="551" locStartPos="0" locEndLn="552" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="547" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="548" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="546" ElType="." desc="int i,j;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="547" ElType=".C" desc="malloc(...)" rngLn="547">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="547" ElType="!" desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="547">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="551" ElType=".P" desc="doubleptr[i]=calloc(10,sizeof(char));" rngLn="551">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;doubleptr[i]&quot; out of bounds at index [-1...8]. Correct index(es): [0...9]" ln="559" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="895864009" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="559" locStartPos="0" locEndLn="560" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="544" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="545" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="544" ElType=".C" desc="void dynamic_buffer_underrun_030()" rngLn="544">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="546" ElType="." desc="int i,j;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="547" ElType="." desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="547">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="551" ElType="." desc="doubleptr[i]=calloc(10,sizeof(char));" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="551" ElType="!" desc="calloc(...)" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="551" ElType="!" desc="doubleptr[i]=calloc(10,sizeof(char));" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="549" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="555" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="555">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="557" ElType="." desc="for(j=9;j>=-1;j--)" rngLn="557">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="559" ElType="." desc="doubleptr[i][j]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="557" ElType="." desc="for(j=9;j>=-1;j--)" rngLn="557">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="559" ElType=".P" desc="doubleptr[i][j]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="559">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr1&quot; out of bounds at index [-1...9]. Correct index(es): [0...11]" ln="580" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1750088429" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="580" locStartPos="0" locEndLn="581" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="570" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="571" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="570" srcRngStartPos="0" srcRngEndLn="571" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="570" ElType=".C" desc="void dynamic_buffer_underrun_031()" rngLn="570">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="572" srcRngStartPos="0" srcRngEndLn="573" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="572" ElType="." desc="int i;" rngLn="572">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="573" ElType="!" desc="calloc(...)" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="573" ElType="!" desc="char* ptr1=(char*) calloc(12, sizeof(char));" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="574" srcRngStartPos="0" srcRngEndLn="575" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="574" ElType="." desc="char a[12],*ptr2 = a;" rngLn="574">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="575" srcRngStartPos="0" srcRngEndLn="576" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="575" ElType="." desc="if(ptr1!=NULL)" rngLn="575">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="577" srcRngStartPos="0" srcRngEndLn="578" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="577" ElType="." desc="ptr1[11]='\0';" rngLn="577">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="578" srcRngStartPos="0" srcRngEndLn="579" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="578" ElType="." desc="for(i=10;i>=-1;i--) /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="578">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="580" ElType="." desc="ptr1[i]='a';" rngLn="580">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="578" srcRngStartPos="0" srcRngEndLn="579" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="578" ElType="." desc="for(i=10;i>=-1;i--) /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="578">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="580" ElType=".P" desc="ptr1[i]='a';" rngLn="580">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr_s[i].arr&quot; out of bounds at index -1. Correct index(es): [0...51]" ln="606" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2126074806" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="606" locStartPos="0" locEndLn="607" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="598" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="599" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="598" srcRngStartPos="0" srcRngEndLn="599" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="598" ElType=".C" desc="void dynamic_buffer_underrun_032()" rngLn="598">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="600" ElType="." desc="dynamic_buffer_underrun_s_032* ptr_s= calloc(10,sizeof(dynamic_buffer_underrun_s_032));" rngLn="600">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="601" srcRngStartPos="0" srcRngEndLn="602" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="601" ElType="." desc="int i;" rngLn="601">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="603" srcRngStartPos="0" srcRngEndLn="604" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="603" ElType="." desc="if(ptr_s!=NULL)" rngLn="603">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr_s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="605" srcRngStartPos="0" srcRngEndLn="606" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="605" ElType="." desc="for(i=-1;i&lt;10;i++)" rngLn="605">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="606" srcRngStartPos="0" srcRngEndLn="607" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="606" ElType=".P" desc="ptr_s[i].arr[i]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="606">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;message&quot; out of bounds at index [-2...-1]. Correct index(es): [0...11]" ln="621" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1797621190" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="621" locStartPos="0" locEndLn="622" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="611" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="612" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="611" srcRngStartPos="0" srcRngEndLn="612" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="611" ElType=".C" desc="void dynamic_buffer_underrun_033()" rngLn="611">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="613" srcRngStartPos="0" srcRngEndLn="614" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="613" ElType="!" desc="calloc(...)" rngLn="613">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="613" srcRngStartPos="0" srcRngEndLn="614" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="613" ElType="!" desc="char *message = (char*) calloc(12, sizeof(char));" rngLn="613">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="614" srcRngStartPos="0" srcRngEndLn="615" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="614" ElType="." desc="int index=12;" rngLn="614">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="615" ElType="." desc="int len=index-12;" rngLn="615">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="616" srcRngStartPos="0" srcRngEndLn="617" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="616" ElType="." desc="int c;" rngLn="616">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="617" srcRngStartPos="0" srcRngEndLn="618" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="617" ElType="." desc="if(message !=NULL)" rngLn="617">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (message != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="619" srcRngStartPos="0" srcRngEndLn="620" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="619" ElType="." desc="while(len>=-2 )" rngLn="619">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (len >= -2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="621" srcRngStartPos="0" srcRngEndLn="622" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="621" ElType="." desc="c = message[len];" rngLn="621">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="622" srcRngStartPos="0" srcRngEndLn="623" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="622" ElType="." desc="if(isspace(c))" rngLn="622">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="627" ElType="." desc="len--;" rngLn="627">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="619" srcRngStartPos="0" srcRngEndLn="620" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="619" ElType="." desc="while(len>=-2 )" rngLn="619">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (len >= -2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="621" srcRngStartPos="0" srcRngEndLn="622" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="621" ElType=".P" desc="c = message[len];" rngLn="621">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;srcbuf&quot; out of bounds at index -1. Correct index(es): [0...9]" ln="648" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1627601673" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="648" locStartPos="0" locEndLn="649" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="638" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="639" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="638" srcRngStartPos="0" srcRngEndLn="639" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="638" ElType=".C" desc="void dynamic_buffer_underrun_034()" rngLn="638">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="640" srcRngStartPos="0" srcRngEndLn="641" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="640" ElType="!" desc="char* srcbuf=&quot;Test Code&quot;;" rngLn="640">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="641" srcRngStartPos="0" srcRngEndLn="642" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="641" ElType="." desc="int i,loc=1;" rngLn="641">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="642" ElType="." desc="char* destbuf=(char*) malloc(10*sizeof(char));" rngLn="642">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="643" srcRngStartPos="0" srcRngEndLn="644" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="643" ElType="." desc="char ch='o';" rngLn="643">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="644" srcRngStartPos="0" srcRngEndLn="645" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="644" ElType="." desc="if(destbuf!=NULL)" rngLn="644">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (destbuf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="646" srcRngStartPos="0" srcRngEndLn="647" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="646" ElType="." desc="for(i=-1;i&lt;10;i++)" rngLn="646">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="648" ElType=".P" desc="if(srcbuf[i]==ch) /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="648">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="669" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-734612191" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="669" locStartPos="0" locEndLn="670" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="666" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="667" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="665" ElType="." desc="int i,loc1=0,loc2=0;" rngLn="665">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType=".C" desc="malloc(...)" rngLn="666">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="!" desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType=".P" desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;loc1 == 0&quot; always evaluates to true" ln="671" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-2077549683" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="671" locStartPos="0" locEndLn="672" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="663" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="664" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="663" srcRngStartPos="0" srcRngEndLn="664" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="663" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="663">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="665" ElType="!" desc="int i,loc1=0,loc2=0;" rngLn="665">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="671" ElType=".P" desc="if (loc1==0)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;doubleptr&quot; out of bounds at index -1. Correct index(es): [0...9]" ln="674" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-324438294" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="674" locStartPos="0" locEndLn="675" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="663" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="664" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="663" srcRngStartPos="0" srcRngEndLn="664" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="663" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="663">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="665" ElType="." desc="int i,loc1=0,loc2=0;" rngLn="665">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="!" desc="malloc(...)" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="!" desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="671" ElType="." desc="if (loc1==0)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (loc1 == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="672" ElType="." desc="loc1--;" rngLn="672">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="674" srcRngStartPos="0" srcRngEndLn="675" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="674" ElType=".P" desc="doubleptr[loc1][loc2]='T';" rngLn="674">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;loc2 == 0&quot; always evaluates to true" ln="676" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="688617796" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="676" locStartPos="0" locEndLn="677" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="663" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="664" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="663" srcRngStartPos="0" srcRngEndLn="664" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="663" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="663">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="665" ElType="!" desc="int i,loc1=0,loc2=0;" rngLn="665">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="671" ElType="." desc="if (loc1==0)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (loc1 == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="672" ElType="." desc="loc1--;" rngLn="672">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="674" srcRngStartPos="0" srcRngEndLn="675" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="674" ElType="." desc="doubleptr[loc1][loc2]='T';" rngLn="674">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="676" srcRngStartPos="0" srcRngEndLn="677" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="676" ElType=".P" desc="if(loc2==0)" rngLn="676">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;doubleptr[0]&quot; out of bounds at index -1. Correct index(es): [0...9]" ln="679" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-777118898" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="679" locStartPos="0" locEndLn="680" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="663" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="664" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="663" srcRngStartPos="0" srcRngEndLn="664" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="663" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="663">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="665" ElType="." desc="int i,loc1=0,loc2=0;" rngLn="665">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="666" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="669" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="669">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="668" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="668">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="671" ElType="." desc="if (loc1==0)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (loc1 == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="672" ElType="." desc="loc1--;" rngLn="672">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="674" srcRngStartPos="0" srcRngEndLn="675" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="674" ElType="." desc="doubleptr[loc1][loc2]='T';" rngLn="674">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="676" srcRngStartPos="0" srcRngEndLn="677" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="676" ElType="." desc="if(loc2==0)" rngLn="676">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (loc2 == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="677" srcRngStartPos="0" srcRngEndLn="678" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="677" ElType="." desc="loc2--;" rngLn="677">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="679" srcRngStartPos="0" srcRngEndLn="680" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="679" ElType=".P" desc="doubleptr[0][loc2]='T'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="679">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;newTest&quot; out of bounds at index -10. Correct index(es): [0...9]" ln="701" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1101325237" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="701" locStartPos="0" locEndLn="702" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="693" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="694" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="693" srcRngStartPos="0" srcRngEndLn="694" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="693" ElType=".C" desc="void dynamic_buffer_underrun_036()" rngLn="693">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="695" srcRngStartPos="0" srcRngEndLn="696" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="695" ElType="." desc="char test[]=&quot;This is a test code&quot;;" rngLn="695">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="696" srcRngStartPos="0" srcRngEndLn="697" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="696" ElType="!" desc="malloc(...)" rngLn="696">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="696" srcRngStartPos="0" srcRngEndLn="697" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="696" ElType="!" desc="char *newTest= (char*) malloc(10*sizeof(char));" rngLn="696">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="697" srcRngStartPos="0" srcRngEndLn="698" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="697" ElType="." desc="if(newTest!=NULL)" rngLn="697">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (newTest != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="699" srcRngStartPos="0" srcRngEndLn="700" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="699" ElType="." desc="memcpy (newTest,test,10);" rngLn="699">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="700" srcRngStartPos="0" srcRngEndLn="701" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="700" ElType="." desc="char c ;" rngLn="700">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="701" srcRngStartPos="0" srcRngEndLn="702" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="701" ElType=".P" desc="c = newTest[-10]; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="701">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;doubleptr&quot; out of bounds at index -10. Correct index(es): [0...9]" ln="721" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2080347234" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="721" locStartPos="0" locEndLn="722" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="712" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="713" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="712" srcRngStartPos="0" srcRngEndLn="713" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="712" ElType=".C" desc="void dynamic_buffer_underrun_037()" rngLn="712">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="714" srcRngStartPos="0" srcRngEndLn="715" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="714" ElType="." desc="int i;" rngLn="714">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="715" srcRngStartPos="0" srcRngEndLn="716" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="715" ElType="!" desc="malloc(...)" rngLn="715">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="715" srcRngStartPos="0" srcRngEndLn="716" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="715" ElType="!" desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="715">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="717" srcRngStartPos="0" srcRngEndLn="718" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="717" ElType="." desc="if(doubleptr!=NULL)" rngLn="717">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (doubleptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="719" srcRngStartPos="0" srcRngEndLn="720" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="719" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="719">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="721" srcRngStartPos="0" srcRngEndLn="722" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="721" ElType=".P" desc="doubleptr[i-10]=(char*) malloc(10*sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="721">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: doubleptr[-10]" ln="730" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="907395345" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="730" locStartPos="0" locEndLn="731" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="721" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="722" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="714" srcRngStartPos="0" srcRngEndLn="715" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="714" ElType="." desc="int i;" rngLn="714">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="715" srcRngStartPos="0" srcRngEndLn="716" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="715" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="715">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="717" srcRngStartPos="0" srcRngEndLn="718" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="717" ElType="." desc="if(doubleptr!=NULL)" rngLn="717">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (doubleptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="719" srcRngStartPos="0" srcRngEndLn="720" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="719" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="719">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="721" srcRngStartPos="0" srcRngEndLn="722" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="721" ElType=".C" desc="malloc(...)" rngLn="721">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="721" srcRngStartPos="0" srcRngEndLn="722" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="721" ElType="!" desc="doubleptr[i-10]=(char*) malloc(10*sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="721">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="722" ElType="." desc="if(doubleptr[i]!=NULL)" rngLn="722">
          <Props>
            <Prop key="Tracked variables" val="doubleptr[-10]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: doubleptr[-10]" kind="var" />
            <Ann msg="Condition evaluation: (doubleptr[i] != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="719" srcRngStartPos="0" srcRngEndLn="720" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="719" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="719">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="728" srcRngStartPos="0" srcRngEndLn="729" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="728" ElType="." desc="free(doubleptr);" rngLn="728">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="730" srcRngStartPos="0" srcRngEndLn="731" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="730" ElType=".P" desc="}" rngLn="730">
          <Props>
            <Prop key="Tracked variables" val="doubleptr[-10]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: doubleptr[-10]" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;new_s&quot; out of bounds at index -1. Correct index(es): [0...9]" ln="751" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-507963801" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="751" locStartPos="0" locEndLn="752" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="743" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="744" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="743" srcRngStartPos="0" srcRngEndLn="744" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="743" ElType=".C" desc="void dynamic_buffer_underrun_038()" rngLn="743">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="745" srcRngStartPos="0" srcRngEndLn="746" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="745" ElType="!" desc="malloc(...)" rngLn="745">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="745" srcRngStartPos="0" srcRngEndLn="746" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="745" ElType="!" desc="dynamic_buffer_underrun_s_038* new_s = malloc(10*sizeof(dynamic_buffer_underrun_s_038));" rngLn="745">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="747" srcRngStartPos="0" srcRngEndLn="748" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="747" ElType="." desc="int loc=-1,i=0;" rngLn="747">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="749" srcRngStartPos="0" srcRngEndLn="750" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="749" ElType="." desc="if(new_s!=NULL)" rngLn="749">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (new_s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="751" srcRngStartPos="0" srcRngEndLn="752" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="751" ElType=".P" desc="new_s[loc].arr[i]='a'; /*Tool should detect this line as error*/ /*ERROR:Buffer Underrun*/" rngLn="751">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 40 is out of acceptable range: 'lower than 30'" ln="791" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="779432510" locStartln="791" locStartPos="0" locEndLn="792" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" />
    <DupViol msg="Duplicated function: 'void dynamic_buffer_underrun_main ( ) { if ( vflag == 1 ||...'" ln="792" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="779432510" NvActs="3" locStartln="792" locStartPos="0" locEndLn="988" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="792" srcRngStartPos="0" srcRngEndLn="988" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/buffer_underrun_dynamic.c" srcRnghash="779432510" ln="792" ElType="" desc="[Line 792] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="-929097392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="791" srcRngStartPos="0" srcRngEndLn="986" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="791" ElType="" desc="[Line 791] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="662765888">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;(a == 0) &amp;&amp; (a == 1)&quot; always evaluates to false" ln="24" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1656285560" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="24" locStartPos="0" locEndLn="25" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="17" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="18" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="17" srcRngStartPos="0" srcRngEndLn="18" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="17" ElType=".C" desc="void conflicting_cond_001 ()" rngLn="17">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="19" ElType="." desc="int a;" rngLn="19">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="20" ElType="." desc="int b = 0;" rngLn="20">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="21" ElType="." desc="int ret;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="23" ElType="." desc="a = rand();" rngLn="23">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="24" ElType=".P" desc="if ((a == 0) &amp;&amp; (a == 1))/*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="24">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 1&quot; always evaluates to false" ln="24" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="356815406" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="24" locStartPos="0" locEndLn="25" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="17" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="18" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="17" srcRngStartPos="0" srcRngEndLn="18" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="17" ElType=".C" desc="void conflicting_cond_001 ()" rngLn="17">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="19" ElType="." desc="int a;" rngLn="19">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="20" ElType="." desc="int b = 0;" rngLn="20">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="21" ElType="." desc="int ret;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="23" ElType="!" desc="a = rand();" rngLn="23">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="24" ElType=".P" desc="if ((a == 0) &amp;&amp; (a == 1))/*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="24">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 0) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a &lt; 5) &amp;&amp; (10 &lt; a)&quot; always evaluates to false" ln="43" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-391371082" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="43" locStartPos="0" locEndLn="44" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="36" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="37" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="36" ElType=".C" desc="void conflicting_cond_002 ()" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="38" ElType="." desc="int a;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="39" ElType="." desc="int b = 0;" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="40" ElType="." desc="int ret;" rngLn="40">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="42" ElType="." desc="a = rand();" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="43" ElType=".P" desc="if ((a &lt; 5) &amp;&amp; (10 &lt; a))/*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="43">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;10 &lt; a&quot; always evaluates to false" ln="43" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1019977273" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="43" locStartPos="0" locEndLn="44" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="36" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="37" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="36" ElType=".C" desc="void conflicting_cond_002 ()" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="38" ElType="." desc="int a;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="39" ElType="." desc="int b = 0;" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="40" ElType="." desc="int ret;" rngLn="40">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="42" ElType="!" desc="a = rand();" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="43" ElType=".P" desc="if ((a &lt; 5) &amp;&amp; (10 &lt; a))/*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="43">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a &lt; 5) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))&quot; always evaluates to false" ln="62" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="763809962" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="62" locStartPos="0" locEndLn="63" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="55" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="56" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="55" ElType=".C" desc="void conflicting_cond_003 ()" rngLn="55">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="57" ElType="." desc="int a;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="58" ElType="." desc="int b = 0;" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="59" ElType="." desc="int ret;" rngLn="59">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="61" ElType="." desc="a = rand();" rngLn="61">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="62" ElType=".P" desc="if (((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (0 &lt; a) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;8 &lt; a&quot; always evaluates to false" ln="62" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="658594649" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="62" locStartPos="0" locEndLn="63" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="55" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="56" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="55" ElType=".C" desc="void conflicting_cond_003 ()" rngLn="55">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="57" ElType="." desc="int a;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="58" ElType="." desc="int b = 0;" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="59" ElType="." desc="int ret;" rngLn="59">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="61" ElType="!" desc="a = rand();" rngLn="61">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="62" ElType=".P" desc="if (((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (0 &lt; a) (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: (a &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;10 &lt; a&quot; always evaluates to false" ln="83" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1019977273" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="83" locStartPos="0" locEndLn="84" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="74" ElType=".C" desc="void conflicting_cond_004 ()" rngLn="74">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="76" ElType="." desc="int a;" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="77" ElType="." desc="int b = 0;" rngLn="77">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="78" ElType="." desc="int ret;" rngLn="78">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="80" ElType="!" desc="a = rand();" rngLn="80">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="81" ElType="." desc="if (a &lt; 5)" rngLn="81">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a &lt; 5) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="83" ElType=".P" desc="if (10 &lt; a) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="83">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a == 0) &amp;&amp; (a == 1)&quot; always evaluates to false" ln="103" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1985705267" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="103" locStartPos="0" locEndLn="104" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="96" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="97" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="96" ElType=".C" desc="void conflicting_cond_005 ()" rngLn="96">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="98" ElType="." desc="int a;" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="99" ElType="." desc="int b;" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="100" ElType="." desc="int ret;" rngLn="100">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="102" ElType="." desc="a = rand();" rngLn="102">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="103" ElType=".P" desc="b = ((a == 0) &amp;&amp; (a == 1)) ? 0 : 1; /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="103">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 1&quot; always evaluates to false" ln="103" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="237442677" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="103" locStartPos="0" locEndLn="104" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="96" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="97" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="96" ElType=".C" desc="void conflicting_cond_005 ()" rngLn="96">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="98" ElType="." desc="int a;" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="99" ElType="." desc="int b;" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="100" ElType="." desc="int ret;" rngLn="100">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="102" ElType="!" desc="a = rand();" rngLn="102">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="103" ElType=".P" desc="b = ((a == 0) &amp;&amp; (a == 1)) ? 0 : 1; /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="103">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 0) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a == 0) &amp;&amp; (a == 1)&quot; always evaluates to false" ln="118" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1736288143" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="112" ElType=".C" desc="void conflicting_cond_006 ()" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="114" ElType="." desc="int a;" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="115" ElType="." desc="int b = 0;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="116" ElType="." desc="int ret;" rngLn="116">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="118" ElType=".P" desc="for (a = 0; (a == 0) &amp;&amp; (a == 1); a ++) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (true)" kind="condEval" />
            <Ann msg="Loop condition evaluation: (a == 1) (false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 0&quot; always evaluates to true" ln="118" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="8828153" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="112" ElType=".C" desc="void conflicting_cond_006 ()" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="114" ElType="." desc="int a;" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="115" ElType="." desc="int b = 0;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="116" ElType="." desc="int ret;" rngLn="116">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="118" ElType=".P" desc="for (a = 0; (a == 0) &amp;&amp; (a == 1); a ++) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 1&quot; always evaluates to false" ln="118" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1751711519" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="112" ElType=".C" desc="void conflicting_cond_006 ()" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="114" ElType="." desc="int a;" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="115" ElType="." desc="int b = 0;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="116" ElType="." desc="int ret;" rngLn="116">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="118" ElType=".P" desc="for (a = 0; (a == 0) &amp;&amp; (a == 1); a ++) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a == 0) &amp;&amp; (a == 1)&quot; always evaluates to false" ln="137" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1656285560" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="130" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="131" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="130" ElType=".C" desc="void conflicting_cond_007 ()" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="132" ElType="." desc="int a;" rngLn="132">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="133" ElType="." desc="int b = 0;" rngLn="133">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="134" srcRngStartPos="0" srcRngEndLn="135" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="134" ElType="." desc="int ret;" rngLn="134">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="136" ElType="." desc="a = rand();" rngLn="136">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="137" ElType=".P" desc="while ((a == 0) &amp;&amp; (a == 1)) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="137">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 1&quot; always evaluates to false" ln="137" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="356815406" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="130" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="131" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="130" ElType=".C" desc="void conflicting_cond_007 ()" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="132" ElType="." desc="int a;" rngLn="132">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="133" ElType="." desc="int b = 0;" rngLn="133">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="134" srcRngStartPos="0" srcRngEndLn="135" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="134" ElType="." desc="int ret;" rngLn="134">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="136" ElType="!" desc="a = rand();" rngLn="136">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="137" ElType=".P" desc="while ((a == 0) &amp;&amp; (a == 1)) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="137">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a &lt; 5) &amp;&amp; (10 &lt; a)&quot; always evaluates to false" ln="157" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-391371082" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="157" locStartPos="0" locEndLn="158" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="150" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="151" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="150" ElType=".C" desc="void conflicting_cond_008 ()" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="152" ElType="." desc="int a;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="153" ElType="." desc="int b = 0;" rngLn="153">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="154" ElType="." desc="int ret;" rngLn="154">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="156" ElType="." desc="a = rand();" rngLn="156">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="157" ElType=".P" desc="while ((a &lt; 5) &amp;&amp; (10 &lt; a)) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;10 &lt; a&quot; always evaluates to false" ln="157" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1019977273" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="157" locStartPos="0" locEndLn="158" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="150" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="151" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="150" ElType=".C" desc="void conflicting_cond_008 ()" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="152" ElType="." desc="int a;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="153" ElType="." desc="int b = 0;" rngLn="153">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="154" ElType="." desc="int ret;" rngLn="154">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="156" ElType="!" desc="a = rand();" rngLn="156">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="157" ElType=".P" desc="while ((a &lt; 5) &amp;&amp; (10 &lt; a)) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; 5) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))&quot; always evaluates to false" ln="177" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="763809962" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="177" locStartPos="0" locEndLn="178" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="170" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="171" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="170" ElType=".C" desc="void conflicting_cond_009 ()" rngLn="170">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="172" ElType="." desc="int a;" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="173" ElType="." desc="int b = 0;" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="174" ElType="." desc="int ret;" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="176" ElType="." desc="a = rand();" rngLn="176">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="177" ElType=".P" desc="while (((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (0 &lt; a) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;8 &lt; a&quot; always evaluates to false" ln="177" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="658594649" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="177" locStartPos="0" locEndLn="178" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="170" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="171" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="170" ElType=".C" desc="void conflicting_cond_009 ()" rngLn="170">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="172" ElType="." desc="int a;" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="173" ElType="." desc="int b = 0;" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="174" ElType="." desc="int ret;" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="176" ElType="!" desc="a = rand();" rngLn="176">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="177" ElType=".P" desc="while (((0 &lt; a) &amp;&amp; (a &lt; 2)) &amp;&amp; ((8 &lt; a) &amp;&amp; (a &lt; 10))) /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (0 &lt; a) (assuming true)" kind="condEval" />
            <Ann msg="Loop condition evaluation: (a &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(a == 0) &amp;&amp; (a == 1)&quot; always evaluates to false" ln="199" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2125711471" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="199" locStartPos="0" locEndLn="200" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="190" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="191" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="190" ElType=".C" desc="void conflicting_cond_010 ()" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="192" ElType="." desc="int a;" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="193" ElType="." desc="int ret;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="197" ElType="." desc="a = rand();" rngLn="197">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="199" ElType=".P" desc="while ((a == 0) &amp;&amp; (a == 1)); /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="199">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 1&quot; always evaluates to false" ln="199" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-154085929" lang="cpp" locType="sr" config="1" hash="-526330619" locStartln="199" locStartPos="0" locEndLn="200" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" FirstElSrcRngStartln="190" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="191" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="190" ElType=".C" desc="void conflicting_cond_010 ()" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="192" ElType="." desc="int a;" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="193" ElType="." desc="int ret;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="197" ElType="!" desc="a = rand();" rngLn="197">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="199" ElType=".P" desc="while ((a == 0) &amp;&amp; (a == 1)); /*Tool should detect this line as error*/ /*ERROR:contradict condition*/" rngLn="199">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a == 0) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void conflicting_cond_main ( ) { if ( vflag == 1 || vflag ==...'" ln="210" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-526330619" NvActs="3" locStartln="210" locStartPos="0" locEndLn="260" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c">
      <ElDescList>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/conflicting_cond.c" srcRnghash="-526330619" ln="210" ElType="" desc="[Line 210] Duplicated function in file 'conflicting_cond.c'" sourceRngHash="1378585112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/conflicting_cond.c" srcRnghash="2028073547" ln="212" ElType="" desc="[Line 212] Duplicated function in file 'conflicting_cond.c'" sourceRngHash="1378585112">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void data_lost_main ( ) { if ( vflag == 1 || vflag == 888 ) {...'" ln="266" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1867924154" NvActs="3" locStartln="266" locStartPos="0" locEndLn="361" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/data_lost.c">
      <ElDescList>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="361" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/data_lost.c" srcRnghash="-1867924154" ln="266" ElType="" desc="[Line 266] Duplicated function in file 'data_lost.c'" sourceRngHash="432109123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="269" srcRngStartPos="0" srcRngEndLn="364" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/data_lost.c" srcRnghash="-1486812272" ln="269" ElType="" desc="[Line 269] Duplicated function in file 'data_lost.c'" sourceRngHash="432109123">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void data_overflow_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="360" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1739004069" NvActs="3" locStartln="360" locStartPos="0" locEndLn="485" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/data_overflow.c">
      <ElDescList>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/data_overflow.c" srcRnghash="1739004069" ln="360" ElType="" desc="[Line 360] Duplicated function in file 'data_overflow.c'" sourceRngHash="-1100178561">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="487" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/data_overflow.c" srcRnghash="1421499357" ln="362" ElType="" desc="[Line 362] Duplicated function in file 'data_overflow.c'" sourceRngHash="-1100178561">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void data_underflow_main ( ) { if ( vflag == 1 || vflag ==...'" ln="181" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1127020530" NvActs="3" locStartln="181" locStartPos="0" locEndLn="241" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/data_underflow.c">
      <ElDescList>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/data_underflow.c" srcRnghash="1127020530" ln="181" ElType="" desc="[Line 181] Duplicated function in file 'data_underflow.c'" sourceRngHash="273385530">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/data_underflow.c" srcRnghash="-983063392" ln="180" ElType="" desc="[Line 180] Duplicated function in file 'data_underflow.c'" sourceRngHash="273385530">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to false" ln="39" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="522672803" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="39" locStartPos="0" locEndLn="40" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="34" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="35" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="34" ElType=".C" desc="void dead_code_002 ()" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="36" ElType="!" desc="int flag = 0;" rngLn="36">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="37" ElType="." desc="int a = 0;" rngLn="37">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="38" ElType="." desc="int ret;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="39" ElType=".P" desc="if (flag)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;dead_code_003_func_001()&quot; always evaluates to false" ln="60" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1299369490" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="60" locStartPos="0" locEndLn="61" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="56" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="57" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="56" ElType=".C" desc="void dead_code_003 ()" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="58" ElType="." desc="int a = 0;" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="59" ElType="." desc="int ret;" rngLn="59">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="60" ElType="!" desc="dead_code_003_func_001()" rngLn="60">
          <ElDescList>
            <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="53" ElType="!" desc="return 0;" rngLn="53">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="60" ElType=".P" desc="if (dead_code_003_func_001())" rngLn="60">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to false" ln="98" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2113020235" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="98" locStartPos="0" locEndLn="99" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="93" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="94" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="93" ElType=".C" desc="void dead_code_005 ()" rngLn="93">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="95" ElType="!" desc="int flag = 0;" rngLn="95">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="96" ElType="." desc="int a = 0;" rngLn="96">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="97" ElType="." desc="int ret;" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="98" ElType=".P" desc="if (flag > 0)" rngLn="98">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 0&quot; always evaluates to false" ln="115" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1646009336" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="110" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="111" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="110" ElType=".C" desc="void dead_code_006 ()" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="112" ElType="!" desc="int flag = 1;" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="113" ElType="." desc="int a = 0;" rngLn="113">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="114" ElType="." desc="int ret;" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="115" ElType=".P" desc="if (flag == 0)" rngLn="115">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i > 1&quot; always evaluates to false" ln="132" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2050011467" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="132" locStartPos="0" locEndLn="133" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="127" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="128" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="127" ElType=".C" desc="void dead_code_007 ()" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="129" ElType="." desc="int a = 0;" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="130" ElType="." desc="int i;" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="131" ElType="." desc="int ret;" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="132" ElType=".P" desc="for (i = 0; i>1; i ++)" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to false" ln="167" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="522672803" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="167" locStartPos="0" locEndLn="168" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="162" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="163" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="162" srcRngStartPos="0" srcRngEndLn="163" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="162" ElType=".C" desc="void dead_code_009 ()" rngLn="162">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="164" ElType="!" desc="int flag = 0;" rngLn="164">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="165" ElType="." desc="int a = 0;" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="166" ElType="." desc="int ret;" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="167" ElType=".P" desc="while (flag)" rngLn="167">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;dead_code_010_func_001()&quot; always evaluates to false" ln="189" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-168820282" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="189" locStartPos="0" locEndLn="190" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="185" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="186" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="185" ElType=".C" desc="void dead_code_010 ()" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="187" ElType="." desc="int a = 0;" rngLn="187">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="188" ElType="." desc="int ret;" rngLn="188">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="189" ElType="!" desc="dead_code_010_func_001()" rngLn="189">
          <ElDescList>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="182" ElType="!" desc="return 0;" rngLn="182">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="189" ElType=".P" desc="while (dead_code_010_func_001())" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to false" ln="229" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2113020235" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="229" locStartPos="0" locEndLn="230" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="224" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="225" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="224" srcRngStartPos="0" srcRngEndLn="225" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="224" ElType=".C" desc="void dead_code_012 ()" rngLn="224">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="226" srcRngStartPos="0" srcRngEndLn="227" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="226" ElType="!" desc="int flag = 0;" rngLn="226">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="227" ElType="." desc="int a = 0;" rngLn="227">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="228" ElType="." desc="int ret;" rngLn="228">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="229" ElType=".P" desc="while (flag > 0) /*Tool should detect this line as error*/ /*ERROR:Dead Code*/" rngLn="229">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 0&quot; always evaluates to false" ln="247" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1646009336" lang="cpp" locType="sr" config="1" hash="-1533720679" locStartln="247" locStartPos="0" locEndLn="248" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" FirstElSrcRngStartln="242" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="243" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="242" ElType=".C" desc="void dead_code_013 ()" rngLn="242">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="244" ElType="!" desc="int flag = 1;" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="245" ElType="." desc="int a = 0;" rngLn="245">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="246" ElType="." desc="int ret;" rngLn="246">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="247" ElType=".P" desc="while (flag == 0)" rngLn="247">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dead_code_main ( ) { if ( vflag == 1 || vflag == 888 ) {...'" ln="262" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1533720679" NvActs="3" locStartln="262" locStartPos="0" locEndLn="327" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_code.c">
      <ElDescList>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="327" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_code.c" srcRnghash="-1533720679" ln="262" ElType="" desc="[Line 262] Duplicated function in file 'dead_code.c'" sourceRngHash="1268054160">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="325" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="260" ElType="" desc="[Line 260] Duplicated function in file 'dead_code.c'" sourceRngHash="1268054160">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * dead_lock_001_tsk_001 ( void * pram ) { # if ! defined...'" ln="34" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="34" locStartPos="0" locEndLn="56" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="34" ElType="" desc="[Line 34] Duplicated function in file 'dead_lock.c'" sourceRngHash="-188278207">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="34" ElType="" desc="[Line 34] Duplicated function in file 'dead_lock.c'" sourceRngHash="-188278207">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;dead_lock_001_glb_mutexB&quot;, &quot;dead_lock_001_glb_mutexA&quot; in different orders" ln="44" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1108237792" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="44" locStartPos="0" locEndLn="45" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="69" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="70" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;dead_lock_001_glb_mutexA&quot;, &quot;dead_lock_001_glb_mutexB&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="37" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_001_glb_mutexA);" rngLn="37">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_001_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="39" ElType="." desc="dead_lock_001_glb_dataA = (dead_lock_001_glb_dataA % 100) + 10;" rngLn="39">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="40" ElType="." desc="printf(&quot;Task1! dead_lock= %d \n&quot;,dead_lock_001_glb_dataA);" rngLn="40">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="44" ElType=".P" desc="pthread_mutex_lock(&amp;dead_lock_001_glb_mutexB);" rngLn="44">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;dead_lock_001_glb_mutexB&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;dead_lock_001_glb_mutexB&quot;, &quot;dead_lock_001_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="62" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_001_glb_mutexB); /*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="62">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_001_glb_mutexB&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="65" ElType="." desc="dead_lock_001_glb_dataA = (dead_lock_001_glb_dataA % 100) + 1;" rngLn="65">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="69" ElType=".C" desc="pthread_mutex_lock(&amp;dead_lock_001_glb_mutexA);" rngLn="69">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;dead_lock_001_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * dead_lock_002_tsk_001 ( void * pram ) { # if ! defined...'" ln="147" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="147" locStartPos="0" locEndLn="167" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="147" ElType="" desc="[Line 147] Duplicated function in file 'dead_lock.c'" sourceRngHash="168151292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="145" ElType="" desc="[Line 145] Duplicated function in file 'dead_lock.c'" sourceRngHash="168151292">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;dead_lock_002_glb_mutexC&quot;, &quot;dead_lock_002_glb_mutexB&quot;, &quot;dead_lock_002_glb_mutexA&quot; in different orders" ln="156" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1737268397" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="156" locStartPos="0" locEndLn="157" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="179" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="180" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;dead_lock_002_glb_mutexA&quot;, &quot;dead_lock_002_glb_mutexB&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="150" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexA);" rngLn="150">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_002_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="152" ElType="." desc="dead_lock_002_glb_dataA = (dead_lock_002_glb_dataA % 100) + 1;" rngLn="152">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="156" ElType=".P" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexB);" rngLn="156">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;dead_lock_002_glb_mutexB&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;dead_lock_002_glb_mutexB&quot;, &quot;dead_lock_002_glb_mutexC&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="173" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexB);" rngLn="173">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_002_glb_mutexB&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="175" ElType="." desc="dead_lock_002_glb_dataB = (dead_lock_002_glb_dataB % 100) + 1;" rngLn="175">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="179" ElType=".C" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexC);" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;dead_lock_002_glb_mutexC&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;dead_lock_002_glb_mutexC&quot;, &quot;dead_lock_002_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="196" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexC); /*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="196">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_002_glb_mutexC&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="198" ElType="." desc="dead_lock_002_glb_dataC = (dead_lock_002_glb_dataC % 100) + 1;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="202" ElType=".C" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexA);" rngLn="202">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;dead_lock_002_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * dead_lock_002_tsk_002 ( void * pram ) { # if ! defined...'" ln="170" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="170" locStartPos="0" locEndLn="190" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="170" ElType="" desc="[Line 170] Duplicated function in file 'dead_lock.c'" sourceRngHash="1814579706">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="168" ElType="" desc="[Line 168] Duplicated function in file 'dead_lock.c'" sourceRngHash="1814579706">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;dead_lock_002_glb_mutexA&quot;, &quot;dead_lock_002_glb_mutexC&quot; in different orders" ln="202" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="505547543" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="202" locStartPos="0" locEndLn="203" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="200" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="201" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;dead_lock_002_glb_mutexC&quot;, &quot;dead_lock_002_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="196" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexC); /*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="196">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_002_glb_mutexC&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="198" ElType="." desc="dead_lock_002_glb_dataC = (dead_lock_002_glb_dataC % 100) + 1;" rngLn="198">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="202" ElType=".P" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexA);" rngLn="202">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;dead_lock_002_glb_mutexA&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;dead_lock_002_glb_mutexA&quot;, &quot;dead_lock_002_glb_mutexC&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="194" ElType="!" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexA); /*Tool should not detect this line as error*/ /*No ERROR:Dead Lock*/" rngLn="194">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;dead_lock_002_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="196" ElType="." desc="dead_lock_002_glb_dataA = (dead_lock_002_glb_dataA % 100) + 1;" rngLn="196">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="200" ElType=".C" desc="pthread_mutex_lock(&amp;dead_lock_002_glb_mutexC);" rngLn="200">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;dead_lock_002_glb_mutexC&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dead_lock_002 ( ) { pthread_t tid1 ; pthread_t tid2 ;...'" ln="216" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="216" locStartPos="0" locEndLn="236" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="216" ElType="" desc="[Line 216] Duplicated function in file 'dead_lock.c'" sourceRngHash="-593466943">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="214" ElType="" desc="[Line 214] Duplicated function in file 'dead_lock.c'" sourceRngHash="-593466943">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * dead_lock_003_tsk_001 ( void * pram ) { # if ! defined...'" ln="297" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="297" locStartPos="0" locEndLn="339" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="297" ElType="" desc="[Line 297] Duplicated function in file 'dead_lock.c'" sourceRngHash="-570912103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="295" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="295" ElType="" desc="[Line 295] Duplicated function in file 'dead_lock.c'" sourceRngHash="-570912103">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="340" srcRngStartPos="0" srcRngEndLn="382" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="340" ElType="" desc="[Line 340] Duplicated function in file 'dead_lock.c'" sourceRngHash="-744310218">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;*dead_lock_003_glb_mutexB&quot;, &quot;*dead_lock_003_glb_mutexA&quot; in different orders" ln="308" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-2042532069" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="308" locStartPos="0" locEndLn="309" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="353" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="354" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;*dead_lock_003_glb_mutexA&quot;, &quot;*dead_lock_003_glb_mutexB&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="300" srcRngStartPos="0" srcRngEndLn="301" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="300" ElType="!" desc="pthread_mutex_lock(dead_lock_003_glb_mutexA);" rngLn="300">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_003_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="305" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="304" ElType="." desc="dead_lock_003_glb_dataA = (dead_lock_003_glb_dataA % 100) + 1;" rngLn="304">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="308" ElType=".P" desc="pthread_mutex_lock(dead_lock_003_glb_mutexB);" rngLn="308">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;*dead_lock_003_glb_mutexB&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;*dead_lock_003_glb_mutexB&quot;, &quot;*dead_lock_003_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="345" srcRngStartPos="0" srcRngEndLn="346" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="345" ElType="!" desc="pthread_mutex_lock(dead_lock_003_glb_mutexB);/*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="345">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_003_glb_mutexB&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="349" ElType="." desc="dead_lock_003_glb_dataB = (dead_lock_003_glb_dataB % 100) + 1;" rngLn="349">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="353" ElType=".C" desc="pthread_mutex_lock(dead_lock_003_glb_mutexA);" rngLn="353">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;*dead_lock_003_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dead_lock_003 ( ) { pthread_t tid1 ; pthread_t tid2 ;...'" ln="387" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="387" locStartPos="0" locEndLn="404" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="387" ElType="" desc="[Line 387] Duplicated function in file 'dead_lock.c'" sourceRngHash="-412720373">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="385" ElType="" desc="[Line 385] Duplicated function in file 'dead_lock.c'" sourceRngHash="-412720373">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * dead_lock_004_tsk_001 ( void * pram ) { # if ! defined...'" ln="454" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="454" locStartPos="0" locEndLn="496" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="454" srcRngStartPos="0" srcRngEndLn="496" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="454" ElType="" desc="[Line 454] Duplicated function in file 'dead_lock.c'" sourceRngHash="-528981895">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="452" ElType="" desc="[Line 452] Duplicated function in file 'dead_lock.c'" sourceRngHash="-528981895">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;*dead_lock_004_glb_mutexB&quot;, &quot;*dead_lock_004_glb_mutexA&quot; in different orders" ln="465" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-1104051169" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="465" locStartPos="0" locEndLn="466" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="518" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="519" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;*dead_lock_004_glb_mutexA&quot;, &quot;*dead_lock_004_glb_mutexB&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="457" ElType="!" desc="pthread_mutex_lock(dead_lock_004_glb_mutexA);" rngLn="457">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_004_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="462" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="461" ElType="." desc="dead_lock_004_glb_dataA = (dead_lock_004_glb_dataA % 100) + 1;" rngLn="461">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="465" srcRngStartPos="0" srcRngEndLn="466" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="465" ElType=".P" desc="pthread_mutex_lock(dead_lock_004_glb_mutexB);" rngLn="465">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;*dead_lock_004_glb_mutexB&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;*dead_lock_004_glb_mutexB&quot;, &quot;*dead_lock_004_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="502" ElType="!" desc="pthread_mutex_lock(dead_lock_004_glb_mutexB); /*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="502">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_004_glb_mutexB&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="506" ElType="." desc="dead_lock_004_glb_dataB = (dead_lock_004_glb_dataB % 100) + 1;" rngLn="506">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="510" ElType="." desc="pthread_mutex_lock(dead_lock_004_glb_mutexC);" rngLn="510">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="514" ElType="." desc="dead_lock_004_glb_dataC = (dead_lock_004_glb_dataC % 100) + 1;" rngLn="514">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="518" ElType=".C" desc="pthread_mutex_lock(dead_lock_004_glb_mutexA);" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;*dead_lock_004_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;*dead_lock_004_glb_mutexC&quot;, &quot;*dead_lock_004_glb_mutexA&quot; in different orders" ln="473" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1849530662" lang="cpp" locType="sr" config="1" hash="940350123" locStartln="473" locStartPos="0" locEndLn="474" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="518" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="519" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;*dead_lock_004_glb_mutexA&quot;, &quot;*dead_lock_004_glb_mutexC&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="457" ElType="!" desc="pthread_mutex_lock(dead_lock_004_glb_mutexA);" rngLn="457">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_004_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="462" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="461" ElType="." desc="dead_lock_004_glb_dataA = (dead_lock_004_glb_dataA % 100) + 1;" rngLn="461">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="465" srcRngStartPos="0" srcRngEndLn="466" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="465" ElType="." desc="pthread_mutex_lock(dead_lock_004_glb_mutexB);" rngLn="465">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="469" ElType="." desc="dead_lock_004_glb_dataB = (dead_lock_004_glb_dataB % 100) + 1;" rngLn="469">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="473" ElType=".P" desc="pthread_mutex_lock(dead_lock_004_glb_mutexC);" rngLn="473">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;*dead_lock_004_glb_mutexC&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;*dead_lock_004_glb_mutexC&quot;, &quot;*dead_lock_004_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="502" ElType="." desc="pthread_mutex_lock(dead_lock_004_glb_mutexB); /*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="502">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="506" ElType="." desc="dead_lock_004_glb_dataB = (dead_lock_004_glb_dataB % 100) + 1;" rngLn="506">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="510" ElType="!" desc="pthread_mutex_lock(dead_lock_004_glb_mutexC);" rngLn="510">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_004_glb_mutexC&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="514" ElType="." desc="dead_lock_004_glb_dataC = (dead_lock_004_glb_dataC % 100) + 1;" rngLn="514">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="518" ElType=".C" desc="pthread_mutex_lock(dead_lock_004_glb_mutexA);" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;*dead_lock_004_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dead_lock_004 ( ) { pthread_t tid1 ; pthread_t tid2 ;...'" ln="546" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="546" locStartPos="0" locEndLn="563" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="563" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="546" ElType="" desc="[Line 546] Duplicated function in file 'dead_lock.c'" sourceRngHash="-932377367">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="542" srcRngStartPos="0" srcRngEndLn="559" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="542" ElType="" desc="[Line 542] Duplicated function in file 'dead_lock.c'" sourceRngHash="-932377367">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possible deadlock - acquiring locks &quot;*dead_lock_005_glb_mutexB&quot;, &quot;*dead_lock_005_glb_mutexA&quot; in different orders" ln="611" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1482076932" lang="cpp" locType="sr" urgent="true" config="1" hash="940350123" locStartln="611" locStartPos="0" locEndLn="612" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" FirstElSrcRngStartln="629" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="630" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;*dead_lock_005_glb_mutexA&quot;, &quot;*dead_lock_005_glb_mutexB&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="647" srcRngStartPos="0" srcRngEndLn="648" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="647" ElType="!" desc="pthread_mutex_lock(dead_lock_005_glb_mutexA);" rngLn="647">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_005_glb_mutexA&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="651" srcRngStartPos="0" srcRngEndLn="652" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="651" ElType="." desc="dead_lock_005_glb_dataA = (dead_lock_005_glb_dataA % 100) + 1;" rngLn="651">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="654" srcRngStartPos="0" srcRngEndLn="655" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="654" ElType="!" desc="dead_lock_005_func_001();" rngLn="654">
              <ElDescList>
                <ElDesc srcRngStartln="611" srcRngStartPos="0" srcRngEndLn="612" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="611" ElType=".P" desc="pthread_mutex_lock(dead_lock_005_glb_mutexB);" rngLn="611">
                  <Props />
                  <Anns>
                    <Ann msg="Second lock - locking &quot;*dead_lock_005_glb_mutexB&quot;" kind="comment" />
                    <Ann msg="Point where the lock cycle is detected" kind="point" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;*dead_lock_005_glb_mutexB&quot;, &quot;*dead_lock_005_glb_mutexA&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="668" srcRngStartPos="0" srcRngEndLn="669" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="668" ElType="!" desc="pthread_mutex_lock(dead_lock_005_glb_mutexB);" rngLn="668">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;*dead_lock_005_glb_mutexB&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="672" ElType="." desc="dead_lock_005_glb_dataB = (dead_lock_005_glb_dataB % 100) + 1;" rngLn="672">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="675" srcRngStartPos="0" srcRngEndLn="676" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="675" ElType="!" desc="dead_lock_005_func_002();" rngLn="675">
              <ElDescList>
                <ElDesc srcRngStartln="629" srcRngStartPos="0" srcRngEndLn="630" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="629" ElType=".C" desc="pthread_mutex_lock(dead_lock_005_glb_mutexA);/*Tool should detect this line as error*/ /*ERROR:Dead Lock*/" rngLn="629">
                  <Props />
                  <Anns>
                    <Ann msg="Point where the lock is acquired" kind="cause" />
                    <Ann msg="Second lock - locking &quot;*dead_lock_005_glb_mutexA&quot;" kind="comment" />
                  </Anns>
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void dead_lock_main ( ) { if ( vflag == 1 || vflag == 888 ) {...'" ln="734" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="940350123" NvActs="3" locStartln="734" locStartPos="0" locEndLn="759" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="734" srcRngStartPos="0" srcRngEndLn="759" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/dead_lock.c" srcRnghash="940350123" ln="734" ElType="" desc="[Line 734] Duplicated function in file 'dead_lock.c'" sourceRngHash="-1082618292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="725" srcRngStartPos="0" srcRngEndLn="750" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_lock.c" srcRnghash="-852239461" ln="725" ElType="" desc="[Line 725] Duplicated function in file 'dead_lock.c'" sourceRngHash="-1082618292">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;foo&quot; may possibly be null" ln="26" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="940742616" lang="cpp" locType="sr" config="1" hash="266996993" locStartln="26" locStartPos="0" locEndLn="27" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" FirstElSrcRngStartln="23" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="24" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="21" ElType="." desc="char* foo;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="22" ElType="." desc="int counter;" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="23" ElType=".C" desc="calloc(...)" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="23" ElType="!" desc="foo=calloc(10,sizeof(char));" rngLn="23">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="24" ElType="." desc="for(counter=0;counter&lt;10;counter++)" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="foo" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: foo" kind="var" />
            <Ann msg="Loop condition evaluation: (counter &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="266996993" ln="26" ElType=".P" desc="foo[counter]='a'; /*Tool should detect this line as error*/ /*ERROR:Deletion of a data structure sentinel*/" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="foo" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: foo" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="22" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1546322262" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="22" locStartPos="0" locEndLn="23" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="20" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="21" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="19" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="19">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="20" ElType=".C" desc="free(ptr);" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="22" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="37" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="37" locStartPos="0" locEndLn="38" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="32" ElType=".C" desc="malloc(...)" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="32" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="33" ElType="." desc="int i;" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="35" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="37" ElType=".P" desc="ptr[i]='a';" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="43" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="501356873" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="43" locStartPos="0" locEndLn="44" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="32" ElType="." desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="33" ElType="." desc="int i;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="35" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="37" ElType="." desc="ptr[i]='a';" rngLn="37">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="38" ElType="." desc="if(i==9)" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i == 9) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="35" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="37" ElType="." desc="ptr[i]='a';" rngLn="37">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="38" ElType="." desc="if(i==9)" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i == 9) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="40" ElType=".C" desc="free(ptr);" rngLn="40">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="35" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="43" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="58" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="58" locStartPos="0" locEndLn="59" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="53" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="54" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="53" ElType=".C" desc="malloc(...)" rngLn="53">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="53" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="54" ElType="." desc="int i;" rngLn="54">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="56" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="58" ElType=".P" desc="*(ptr+i)='a';" rngLn="58">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="64" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="501356873" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="64" locStartPos="0" locEndLn="65" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="61" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="62" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="53" ElType="." desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="54" ElType="." desc="int i;" rngLn="54">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="56" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="58" ElType="." desc="*(ptr+i)='a';" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="59" ElType="." desc="if(i==9)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i == 9) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="56" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="58" ElType="." desc="*(ptr+i)='a';" rngLn="58">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="59" ElType="." desc="if(i==9)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i == 9) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="61" ElType=".C" desc="free(ptr);" rngLn="61">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="56" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="56">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="64" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="64">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="78" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="78" locStartPos="0" locEndLn="79" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="74" ElType=".C" desc="malloc(...)" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="74" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="75" ElType="." desc="int i;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="76" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="78" ElType=".P" desc="*(ptr+i)='a';" rngLn="78">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="87" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1551956452" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="87" locStartPos="0" locEndLn="88" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="83" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="84" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="74" ElType="." desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="75" ElType="." desc="int i;" rngLn="75">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="76" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="78" ElType="." desc="*(ptr+i)='a';" rngLn="78">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="76" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="81" ElType="." desc="if (rand() % 2==0)" rngLn="81">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (rand() % 2 == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="83" ElType=".C" desc="free(ptr);" rngLn="83">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="86" ElType="." desc="if(rand() % 3==0)" rngLn="86">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (rand() % 3 == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="87" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="87">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: ptr" ln="88" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-208783674" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="88" locStartPos="0" locEndLn="89" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="74" ElType=".C" desc="malloc(...)" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="74" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="75" ElType="." desc="int i;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="76" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="78" ElType="." desc="*(ptr+i)='a';" rngLn="78">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="76" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="81" ElType="." desc="if (rand() % 2==0)" rngLn="81">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (rand() % 2 == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="86" ElType="." desc="if(rand() % 3==0)" rngLn="86">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (rand() % 3 == 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="88" ElType=".P" desc="}" rngLn="88">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="101" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1541688243" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="101" locStartPos="0" locEndLn="102" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="98" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="99" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="97" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="98" ElType=".C" desc="free(ptr);" rngLn="98">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="100" ElType="." desc="if(ptr)" rngLn="100">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="101" srcRngStartPos="0" srcRngEndLn="102" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="101" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="101">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="115" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="641014138" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="113" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="114" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="111" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="112" ElType="." desc="if(1)" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="113" ElType=".C" desc="free(ptr);" rngLn="113">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="115" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="115">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag >= 0&quot; always evaluates to true" ln="128" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="259289421" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="128" locStartPos="0" locEndLn="129" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="123" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="124" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="123" ElType=".C" desc="void double_free_007()" rngLn="123">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="125" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="126" ElType="!" desc="int flag=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="128" ElType=".P" desc="if(flag>=0)" rngLn="128">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="131" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-822176908" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="129" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="130" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="125" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="126" ElType="." desc="int flag=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="128" ElType="." desc="if(flag>=0)" rngLn="128">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag >= 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="129" ElType=".C" desc="free(ptr);" rngLn="129">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="131" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;double_free_function_008_gbl_ptr&quot;" ln="149" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="758572033" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="149" locStartPos="0" locEndLn="150" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="141" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="142" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="146" ElType="." desc="double_free_function_008_gbl_ptr= (char*) malloc(sizeof(char));" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="148" ElType="!" desc="double_free_function_008();" rngLn="148">
          <ElDescList>
            <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="141" ElType=".C" desc="free (double_free_function_008_gbl_ptr);" rngLn="141">
              <Props>
                <Prop key="Tracked variables" val="double_free_function_008_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Point where resource is freed" kind="cause" />
                <Ann msg="Freed resource: double_free_function_008_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="149" ElType=".P" desc="free(double_free_function_008_gbl_ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="double_free_function_008_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: double_free_function_008_gbl_ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="168" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1607204971" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="168" locStartPos="0" locEndLn="169" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="165" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="166" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="160" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="160">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="161" ElType="." desc="int flag=0;" rngLn="161">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="163" ElType="." desc="while(flag==0)" rngLn="163">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag == 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="165" ElType=".C" desc="free(ptr);" rngLn="165">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="166" ElType="." desc="flag++;" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="163" ElType="." desc="while(flag==0)" rngLn="163">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag == 0) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="168" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="168">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="184" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-217746518" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="184" locStartPos="0" locEndLn="185" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="184" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="185" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="179" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="180" ElType="." desc="int flag=1;" rngLn="180">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="182" ElType="." desc="while(flag)" rngLn="182">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="184" ElType=".C" desc="free(ptr);" rngLn="184">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="185" ElType="." desc="flag--;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="182" ElType="." desc="while(flag)" rngLn="182">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="184" ElType=".P" desc="free(ptr);" rngLn="184">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="187" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-217746518" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="184" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="185" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="179" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="180" ElType="." desc="int flag=1;" rngLn="180">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="182" ElType="." desc="while(flag)" rngLn="182">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="184" ElType=".C" desc="free(ptr);" rngLn="184">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="185" ElType="." desc="flag--;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="182" ElType="." desc="while(flag)" rngLn="182">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="187" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="187">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="203" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1626640691" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="203" locStartPos="0" locEndLn="204" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="196" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="197" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="196" ElType=".C" desc="void double_free_011()" rngLn="196">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="198" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="199" ElType="!" desc="int flag=1,a=0,b=2;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="201" ElType="." desc="while(a&lt;b)" rngLn="201">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="203" ElType=".P" desc="if(flag ==1)" rngLn="203">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="204" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1441963641" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="204" locStartPos="0" locEndLn="205" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="204" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="205" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="198" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="199" ElType="." desc="int flag=1,a=0,b=2;" rngLn="199">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="201" ElType="." desc="while(a&lt;b)" rngLn="201">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="203" ElType="." desc="if(flag ==1)" rngLn="203">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="204" ElType=".C" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="204">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="205" ElType="." desc="a++;" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="201" ElType="." desc="while(a&lt;b)" rngLn="201">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="203" ElType="." desc="if(flag ==1)" rngLn="203">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="204" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="204">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="222" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-584457682" lang="cpp" locType="sr" config="1" hash="-414859928" locStartln="222" locStartPos="0" locEndLn="223" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c" FirstElSrcRngStartln="222" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="223" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="217" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="217">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="218" ElType="." desc="int a=0;" rngLn="218">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="220" ElType="." desc="for(a=0;a&lt;2;a++)" rngLn="220">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="222" ElType=".C" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="222">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="220" ElType="." desc="for(a=0;a&lt;2;a++)" rngLn="220">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="222" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Double free*/" rngLn="222">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void double_free_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="232" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-414859928" NvActs="3" locStartln="232" locStartPos="0" locEndLn="293" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/double_free.c">
      <ElDescList>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_free.c" srcRnghash="-414859928" ln="232" ElType="" desc="[Line 232] Duplicated function in file 'double_free.c'" sourceRngHash="-378170202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="219" ElType="" desc="[Line 219] Duplicated function in file 'double_free.c'" sourceRngHash="-378170202">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Lock acquired twice: double_lock_001_glb_mutex" ln="42" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="-1304876382" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="42" locStartPos="0" locEndLn="43" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="39" ElType="." desc="int ip = (int)pthread_self();" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="40" ElType=".C" desc="pthread_mutex_lock(&amp;double_lock_001_glb_mutex);" rngLn="40">
          <Props>
            <Prop key="Tracked variables" val="double_lock_001_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: double_lock_001_glb_mutex" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="41" ElType="." desc="double_lock_001_glb_data = (double_lock_001_glb_data % 100) + 1;" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="42" ElType=".P" desc="pthread_mutex_lock(&amp;double_lock_001_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="double_lock_001_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Lock: double_lock_001_glb_mutex" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: double_lock_001_glb_mutex" ln="49" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1024943457" lang="cpp" locType="sr" urgent="true" config="1" hash="-1732041817" locStartln="49" locStartPos="0" locEndLn="50" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="39" ElType="." desc="int ip = (int)pthread_self();" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="40" ElType=".C" desc="pthread_mutex_lock(&amp;double_lock_001_glb_mutex);" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="41" ElType="." desc="double_lock_001_glb_data = (double_lock_001_glb_data % 100) + 1;" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="42" ElType="." desc="pthread_mutex_lock(&amp;double_lock_001_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="43" ElType="." desc="double_lock_001_glb_data = (double_lock_001_glb_data % 100) + 1;" rngLn="43">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="45" ElType="." desc="printf(&quot;Task1! It's me, thread #%d!\n&quot;,ip);" rngLn="45">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="48" ElType="." desc="return NULL;" rngLn="48">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="49" ElType=".P" desc="}" rngLn="49">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Lock acquired twice: double_lock_002_glb_mutex" ln="93" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="1524577761" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="93" locStartPos="0" locEndLn="94" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="91" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="92" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="91" ElType=".C" desc="pthread_mutex_lock (&amp;double_lock_002_glb_mutex);" rngLn="91">
          <Props>
            <Prop key="Tracked variables" val="double_lock_002_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: double_lock_002_glb_mutex" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="92" ElType="." desc="double_lock_002_glb_data = (double_lock_002_glb_data% 100) + 1;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="93" ElType=".P" desc="pthread_mutex_lock (&amp;double_lock_002_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="93">
          <Props>
            <Prop key="Tracked variables" val="double_lock_002_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Lock: double_lock_002_glb_mutex" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: double_lock_002_glb_mutex" ln="98" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-1826174714" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="98" locStartPos="0" locEndLn="99" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="91" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="92" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="91" ElType=".C" desc="pthread_mutex_lock (&amp;double_lock_002_glb_mutex);" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="92" ElType="." desc="double_lock_002_glb_data = (double_lock_002_glb_data% 100) + 1;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="93" ElType="." desc="pthread_mutex_lock (&amp;double_lock_002_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="94" ElType="." desc="double_lock_002_glb_data = (double_lock_002_glb_data% 100) + 1;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="95" ElType="." desc="pthread_mutex_unlock(&amp;double_lock_002_glb_mutex);" rngLn="95">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="97" ElType="." desc="return NULL;" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="98" ElType=".P" desc="}" rngLn="98">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Lock acquired twice: double_lock_003_glb_mutex" ln="140" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="9306538" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="140" locStartPos="0" locEndLn="141" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="149" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="150" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="149" ElType=".C" desc="pthread_mutex_lock (&amp;double_lock_003_glb_mutex);" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="double_lock_003_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: double_lock_003_glb_mutex" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="150" ElType="." desc="double_lock_003_glb_data = (double_lock_003_glb_data% 100) + 1;" rngLn="150">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="152" ElType="!" desc="double_lock_003_func_001 ();" rngLn="152">
          <ElDescList>
            <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="140" ElType=".P" desc="pthread_mutex_lock (&amp;double_lock_003_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="140">
              <Props>
                <Prop key="Tracked variables" val="double_lock_003_glb_mutex" />
              </Props>
              <Anns>
                <Ann msg="Lock: double_lock_003_glb_mutex" kind="var" />
                <Ann msg="Point of the second lock acquisition" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: double_lock_003_glb_mutex" ln="157" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-623364114" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="157" locStartPos="0" locEndLn="158" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="149" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="150" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="149" ElType=".C" desc="pthread_mutex_lock (&amp;double_lock_003_glb_mutex);" rngLn="149">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="150" ElType="." desc="double_lock_003_glb_data = (double_lock_003_glb_data% 100) + 1;" rngLn="150">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="152" ElType="." desc="double_lock_003_func_001 ();" rngLn="152">
          <ElDescList>
            <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="140" ElType="." desc="pthread_mutex_lock (&amp;double_lock_003_glb_mutex); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="140">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="141" ElType="." desc="double_lock_003_glb_data = (double_lock_003_glb_data% 100) + 1;" rngLn="141">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="156" ElType="." desc="return NULL;" rngLn="156">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="157" ElType=".P" desc="}" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: double_lock_004_glb_mutex1" ln="201" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1719307863" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="201" locStartPos="0" locEndLn="202" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="195" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="196" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="193" ElType="." desc="long ip;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="195" ElType=".C" desc="pthread_mutex_lock( &amp;double_lock_004_glb_mutex1 );" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="196" ElType="." desc="ip = (long)input;" rngLn="196">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="197" ElType="." desc="ip = ip *10;" rngLn="197">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="198" ElType="." desc="printf(&quot;Task3! It's me, thread #%lu!\n&quot;,ip);" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="200" ElType="." desc="return NULL;" rngLn="200">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="201" ElType=".P" desc="}" rngLn="201">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: double_lock_004_glb_mutex1" ln="215" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-825284140" lang="cpp" locType="sr" config="1" hash="-1732041817" locStartln="215" locStartPos="0" locEndLn="216" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" FirstElSrcRngStartln="208" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="209" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="206" ElType="." desc="long ip;" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="208" ElType=".C" desc="pthread_mutex_lock( &amp;double_lock_004_glb_mutex1 ); /*Tool should detect this line as error*/ /*ERROR:Double Lock*/" rngLn="208">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="210" ElType="." desc="ip = (long)input;" rngLn="210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="211" ElType="." desc="ip = ip *10;" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="212" ElType="." desc="printf(&quot;Task4! It's me, thread #%lu!\n&quot;,ip);" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="214" ElType="." desc="return NULL;" rngLn="214">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_lock.c" srcRnghash="-1732041817" ln="215" ElType=".P" desc="}" rngLn="215">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="52" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="52" locStartPos="1" locEndLn="52" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="103" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="103" locStartPos="1" locEndLn="103" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="149" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="149" locStartPos="1" locEndLn="149" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="194" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="194" locStartPos="1" locEndLn="194" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="243" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="243" locStartPos="1" locEndLn="243" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="290" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1763120731" locStartln="290" locStartPos="1" locEndLn="290" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c" />
    <DupViol msg="Duplicated function: 'void double_release_main ( ) { if ( vflag == 1 || vflag ==...'" ln="304" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1763120731" NvActs="3" locStartln="304" locStartPos="0" locEndLn="335" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/double_release.c">
      <ElDescList>
        <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="335" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/double_release.c" srcRnghash="-1763120731" ln="304" ElType="" desc="[Line 304] Duplicated function in file 'double_release.c'" sourceRngHash="1981692232">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" srcRnghash="24909657" ln="304" ElType="" desc="[Line 304] Duplicated function in file 'double_release.c'" sourceRngHash="1310851656">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <StdViol msg="Loop does not contain terminate point" ln="22" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="22" locStartPos="1" locEndLn="22" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" />
    <FlowViol msg="Condition &quot;i &lt; 10&quot; always evaluates to true" ln="39" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="410223908" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="39" locStartPos="0" locEndLn="40" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="34" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="35" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="34" ElType=".C" desc="void endless_loop_002 ()" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="36" ElType="." desc="int ret;" rngLn="36">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="37" ElType="." desc="int a = 0;" rngLn="37">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="38" ElType="." desc="int i;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="39" ElType=".P" desc="for (i = 0; i &lt; 10; )" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="55" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="55" locStartPos="1" locEndLn="55" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" />
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="72" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-106387793" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="72" locStartPos="0" locEndLn="73" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="67" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="68" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="67" ElType=".C" desc="void endless_loop_004 ()" rngLn="67">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="69" ElType="." desc="int ret;" rngLn="69">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="70" ElType="." desc="int a = 0;" rngLn="70">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="72" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="71" ElType="!" desc="int flag = 1;" rngLn="71">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="72" ElType=".P" desc="while (flag)" rngLn="72">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;endless_loop_005_func_001()&quot; always evaluates to true" ln="93" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1953440919" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="93" locStartPos="0" locEndLn="94" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="89" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="90" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="89" ElType=".C" desc="void endless_loop_005 ()" rngLn="89">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="91" ElType="." desc="int ret;" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="92" ElType="." desc="int a = 0;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="93" ElType="!" desc="endless_loop_005_func_001()" rngLn="93">
          <ElDescList>
            <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="86" ElType="!" desc="return 1;" rngLn="86">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="93" ElType=".P" desc="while (endless_loop_005_func_001())" rngLn="93">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="131" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-2030183333" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="126" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="127" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="126" ElType=".C" desc="void endless_loop_007 ()" rngLn="126">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="128" ElType="." desc="int ret;" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="129" ElType="." desc="int a = 0;" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="130" ElType="!" desc="int flag = 1;" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="131" ElType=".P" desc="while (flag > 0)" rngLn="131">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="164" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="164" locStartPos="1" locEndLn="164" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" />
    <DupViol msg="Duplicated function: 'void endless_loop_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="179" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1404631964" NvActs="3" locStartln="179" locStartPos="0" locEndLn="224" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <ElDescList>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="224" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="179" ElType="" desc="[Line 179] Duplicated function in file 'endless_loop.c'" sourceRngHash="863731051">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="213" ElType="" desc="[Line 213] Duplicated function in file 'endless_loop.c'" sourceRngHash="863731051">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="185" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-853300163" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="185" locStartPos="0" locEndLn="186" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="178" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="179" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="178" ElType=".C" desc="void endless_loop_main ()" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="180" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="185" ElType=".P" desc="if (vflag == 2 || vflag ==888)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="190" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1171444689" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="190" locStartPos="0" locEndLn="191" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="178" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="179" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="178" ElType=".C" desc="void endless_loop_main ()" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="180" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="185" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="190" ElType=".P" desc="if (vflag == 3 || vflag ==888)" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="195" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-292818412" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="195" locStartPos="0" locEndLn="196" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="178" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="179" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="178" ElType=".C" desc="void endless_loop_main ()" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="180" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="185" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="190" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="195" ElType=".P" desc="if (vflag == 4 || vflag ==888)" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="200" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2126796110" lang="cpp" locType="sr" config="1" hash="1404631964" locStartln="200" locStartPos="0" locEndLn="201" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" FirstElSrcRngStartln="178" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="179" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="178" ElType=".C" desc="void endless_loop_main ()" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="180" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="185" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="190" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="195" ElType="." desc="if (vflag == 4 || vflag ==888)" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 4 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/endless_loop.c" srcRnghash="1404631964" ln="200" ElType=".P" desc="if (vflag == 5 || vflag ==888)" rngLn="200">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 5) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="22" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1098438541" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="22" locStartPos="0" locEndLn="23" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="20" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="21" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="20" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="20">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="21" ElType="." desc="if(1)" rngLn="21">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="22" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="35" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1186481759" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="35" locStartPos="0" locEndLn="36" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="31" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="32" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="31" ElType=".C" desc="void free_nondynamic_allocated_memory_002()" rngLn="31">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="33" ElType="." desc="char* ptr=&quot;a&quot;;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="34" ElType="!" desc="int flag=1;" rngLn="34">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="35" ElType=".P" desc="if(flag>0)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="36" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1339196897" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="36" locStartPos="0" locEndLn="37" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="33" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="34" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="33" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="34" ElType="." desc="int flag=1;" rngLn="34">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="35" ElType="." desc="if(flag>0)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag > 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="36" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="36">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;free_nondynamic_allocated_memory_003_gbl_ptr&quot; represents a string literal" ln="48" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1599816313" lang="cpp" locType="sr" urgent="true" config="1" hash="1002973307" locStartln="48" locStartPos="0" locEndLn="49" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="47" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="48" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="47" ElType=".C" desc="free_nondynamic_allocated_memory_003_gbl_ptr = &quot;STRING&quot;; /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="47">
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_003_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_003_gbl_ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="48" ElType=".P" desc="free(free_nondynamic_allocated_memory_003_gbl_ptr);" rngLn="48">
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_003_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_003_gbl_ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; points to a local variable" ln="62" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="-1640216749" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="62" locStartPos="0" locEndLn="63" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="61" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="62" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="59" ElType="." desc="char** ptr;" rngLn="59">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="60" ElType="." desc="char *ptr1 = &quot;STRING&quot;;" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="61" ElType=".C" desc="ptr = &amp;ptr1;" rngLn="61">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="62" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="62">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-952104547" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="72" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="73" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="72" ElType=".C" desc="calloc(...)" rngLn="72">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="72" ElType="!" desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="73" ElType="." desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="74" ElType="!" desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="76" ElType="." desc="if(buf2 != NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[1], buf2&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-519481383" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="72" ElType="." desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="73" ElType="." desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="74" ElType="." desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="76" ElType=".C" desc="if(buf2 != NULL)" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[1], buf2&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-511085929" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="73" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="74" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="72" ElType="." desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="73" ElType=".C" desc="calloc(...)" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="73" ElType="!" desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="74" ElType="!" desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="76" ElType="." desc="if(buf2 != NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;pbuf&quot; points to a local variable" ln="86" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="-2056110090" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="86" locStartPos="0" locEndLn="87" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="73" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="74" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="72" ElType="." desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="73" ElType=".C" desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props />
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="74" ElType="." desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="pbuf" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: pbuf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="76" ElType="." desc="if(buf2 != NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="82" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="84" srcRngStartPos="0" srcRngEndLn="85" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="84" ElType="." desc="free(buf1);" rngLn="84">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="85" ElType="." desc="free(buf2);" rngLn="85">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="86" ElType=".P" desc="free(pbuf); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="86">
          <Props>
            <Prop key="Tracked variables" val="pbuf" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: pbuf" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr4&quot; points to a local variable" ln="103" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1260183992" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="103" locStartPos="0" locEndLn="104" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="100" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="101" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="96" ElType="." desc="int b=2;float c=3.5; double d=4.5;" rngLn="96">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="97" ElType="." desc="char* ptr1=&quot;a&quot;;" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="98" ElType="." desc="int* ptr2=&amp;b;" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="99" ElType="." desc="float* ptr3=&amp;c;" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="100" ElType=".C" desc="double* ptr4=&amp;d;" rngLn="100">
          <Props>
            <Prop key="Tracked variables" val="ptr4" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr4" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="103" ElType=".P" desc="free(ptr4); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="103">
          <Props>
            <Prop key="Tracked variables" val="ptr4" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr4" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="114" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="114" locStartPos="1" locEndLn="114" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" />
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="115" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1098438541" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="113" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="114" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="113" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="113">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="114" ElType="." desc="while(1)" rngLn="114">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="115" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="115">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="115" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1110890757" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="115" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="116" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="113" ElType="." desc="char* ptr=&quot;a&quot;;" rngLn="113">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="114" ElType="." desc="while(1)" rngLn="114">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="115" ElType=".C" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="115">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="114" ElType="." desc="while(1)" rngLn="114">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="115" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="115">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a > b&quot; always evaluates to true" ln="127" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-391149533" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="127" locStartPos="0" locEndLn="128" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="123" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="124" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="123" ElType=".C" desc="void free_nondynamic_allocated_memory_008()" rngLn="123">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="125" ElType="." desc="char* ptr=&quot;a&quot;;" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="126" ElType="!" desc="int a=2,b=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="127" ElType=".P" desc="while(a>b)" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="128" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1297448688" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="128" locStartPos="0" locEndLn="129" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="125" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="125">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="126" ElType="." desc="int a=2,b=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="127" ElType="." desc="while(a>b)" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a > b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="128" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="128" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="971915472" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="128" locStartPos="0" locEndLn="129" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="128" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="129" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="125" ElType="." desc="char* ptr=&quot;a&quot;;" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="126" ElType="." desc="int a=2,b=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="127" ElType="." desc="while(a>b)" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a > b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="128" ElType=".C" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="127" ElType="." desc="while(a>b)" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a > b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="128" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a &lt; b&quot; always evaluates to true" ln="140" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1029427119" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="140" locStartPos="0" locEndLn="141" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="136" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="137" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="136" ElType=".C" desc="void free_nondynamic_allocated_memory_009()" rngLn="136">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="138" ElType="." desc="char* ptr=&quot;s&quot;;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="139" ElType="!" desc="int a=0,b=2;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="140" ElType=".P" desc="while(a&lt;b)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="141" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="-645552174" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="141" locStartPos="0" locEndLn="142" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="138" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="139" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="138" ElType=".C" desc="char* ptr=&quot;s&quot;;" rngLn="138">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="139" ElType="." desc="int a=0,b=2;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="140" ElType="." desc="while(a&lt;b)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="141" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="141">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="141" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-902428386" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="141" locStartPos="0" locEndLn="142" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="141" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="142" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="138" ElType="." desc="char* ptr=&quot;s&quot;;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="139" ElType="." desc="int a=0,b=2;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="140" ElType="." desc="while(a&lt;b)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="141" ElType=".C" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="141">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="140" ElType="." desc="while(a&lt;b)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="141" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="141">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="155" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="-24109352" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="155" locStartPos="0" locEndLn="156" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="154" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="155" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="151" ElType="." desc="int i;" rngLn="151">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="152" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="152">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="154" ElType=".C" desc="char* ptr=&quot;k&quot;;" rngLn="154">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="155" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="155">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="170" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="-24105546" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="170" locStartPos="0" locEndLn="171" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="169" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="170" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="166" ElType="." desc="int i;" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="167" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="167">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="169" ElType=".C" desc="char* ptr=&quot;l&quot;;" rngLn="169">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="170" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="170">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="187" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="966107390" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="181" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="182" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="181" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="181">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="182" ElType="." desc="int a=0,b=2;" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="183" ElType="." desc="while(a&lt;b)" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="185" ElType="." desc="a++;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="186" ElType="." desc="if(a==1)" rngLn="186">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="187" ElType=".P" desc="free(ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="187">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;new_struct&quot; may possibly be null" ln="208" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="589066700" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="208" locStartPos="0" locEndLn="209" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="206" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="207" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="206" ElType=".C" desc="malloc(...)" rngLn="206">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="206" ElType="!" desc="free_nondynamic_allocated_memory_struct_013* new_struct=malloc(sizeof(free_nondynamic_allocated_memory_struct_013));" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="207" ElType="." desc="free_nondynamic_allocated_memory_struct_013 str;" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="new_struct" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new_struct" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="208" ElType=".P" desc="new_struct->next = &amp;str;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="new_struct" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new_struct" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;new_struct->next&quot; points to a local variable" ln="209" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="1873175097" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="209" locStartPos="0" locEndLn="210" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="208" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="209" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="206" ElType="." desc="free_nondynamic_allocated_memory_struct_013* new_struct=malloc(sizeof(free_nondynamic_allocated_memory_struct_013));" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="207" ElType="." desc="free_nondynamic_allocated_memory_struct_013 str;" rngLn="207">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="208" ElType=".C" desc="new_struct->next = &amp;str;" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="new_struct->next" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: new_struct->next" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="209" ElType=".P" desc="free(new_struct->next);/*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="209">
          <Props>
            <Prop key="Tracked variables" val="new_struct->next" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: new_struct->next" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;free_nondynamic_allocated_memory_str&quot; points to a local variable" ln="229" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="450061600" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="229" locStartPos="0" locEndLn="230" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="228" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="229" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="227" ElType="." desc="free_nondynamic_allocated_memory_struct_014 free_nondynamic_allocated_memory_st ;" rngLn="227">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="228" ElType=".C" desc="free_nondynamic_allocated_memory_str = &amp;free_nondynamic_allocated_memory_st;" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_str" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_str" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="229" ElType=".P" desc="free(free_nondynamic_allocated_memory_str);/*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="229">
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_str" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_str" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;free_nondynamic_allocated_memory_015_gbl_ptr&quot; represents a string literal" ln="239" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="858300170" lang="cpp" locType="sr" config="1" hash="1002973307" locStartln="239" locStartPos="0" locEndLn="240" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="244" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="245" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="244" ElType=".C" desc="free_nondynamic_allocated_memory_015_gbl_ptr = &quot;STRING&quot;;" rngLn="244">
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_015_gbl_ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="245" ElType="!" desc="free_nondynamic_allocated_memory_015_func_001();" rngLn="245">
          <ElDescList>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="239" ElType=".P" desc="free(free_nondynamic_allocated_memory_015_gbl_ptr); /*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="239">
              <Props>
                <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_015_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Invalid resource: free_nondynamic_allocated_memory_015_gbl_ptr" kind="var" />
                <Ann msg="Point of freeing" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;free_nondynamic_allocated_memory_016_gbl_ptr&quot; represents a string literal" ln="262" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="587047461" lang="cpp" locType="sr" urgent="true" config="1" hash="1002973307" locStartln="262" locStartPos="0" locEndLn="263" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="256" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="257" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="267" ElType="." desc="free_nondynamic_allocated_memory_016_gbl_var = 'A';" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="268" ElType="!" desc="free_nondynamic_allocated_memory_016_func_001();" rngLn="268">
          <ElDescList>
            <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="256" ElType=".C" desc="free_nondynamic_allocated_memory_016_gbl_ptr = &quot;STRING&quot;;" rngLn="256">
              <Props>
                <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_016_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Point where the resource is defined" kind="cause" />
                <Ann msg="Invalid resource: free_nondynamic_allocated_memory_016_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="269" srcRngStartPos="0" srcRngEndLn="270" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="269" ElType="!" desc="free_nondynamic_allocated_memory_016_func_002();" rngLn="269">
          <ElDescList>
            <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="261" ElType="." desc="if(free_nondynamic_allocated_memory_016_gbl_var =='A')" rngLn="261">
              <Props>
                <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_016_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Invalid resource: free_nondynamic_allocated_memory_016_gbl_ptr" kind="var" />
                <Ann msg="Condition evaluation: (free_nondynamic_allocated_memory_016_gbl_var == 65) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="262" ElType=".P" desc="free(free_nondynamic_allocated_memory_016_gbl_ptr);/*Tool should detect this line as error*/ /*ERROR:Free memory not allocated dynamically*/" rngLn="262">
              <Props>
                <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_016_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Invalid resource: free_nondynamic_allocated_memory_016_gbl_ptr" kind="var" />
                <Ann msg="Point of freeing" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="free_nondynamic_allocated_memory_016_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: free_nondynamic_allocated_memory_016_gbl_ptr" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void free_nondynamic_allocated_memory_main ( ) { if ( vflag...'" ln="278" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1002973307" NvActs="3" locStartln="278" locStartPos="0" locEndLn="358" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c">
      <ElDescList>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_nondynamically_allocated_memory.c" srcRnghash="1002973307" ln="278" ElType="" desc="[Line 278] Duplicated function in file 'free_nondynamically_allocated_memory.c'" sourceRngHash="889729050">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="278" ElType="" desc="[Line 278] Duplicated function in file 'free_nondynamically_allocated_memory.c'" sourceRngHash="889729050">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;a > 0&quot; always evaluates to true" ln="34" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1226722158" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="34" locStartPos="0" locEndLn="35" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="31" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="32" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="31" ElType=".C" desc="void free_null_pointer_002 ()" rngLn="31">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="33" ElType="!" desc="int a=20;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="34" ElType=".P" desc="if(a>0)" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fptr&quot; may possibly be null" ln="74" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1622101718" lang="cpp" locType="sr" urgent="true" config="1" hash="-1172664629" locStartln="74" locStartPos="0" locEndLn="75" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="69" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="70" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="69" ElType=".C" desc="malloc(...)" rngLn="69">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="69" ElType="!" desc="float **fptr = (float**) malloc(5*sizeof(float*));" rngLn="69">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="70" ElType="." desc="int i=0,j=0;" rngLn="70">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="74" ElType=".P" desc="fptr[i]=NULL;" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_005_gbl_ptr&quot; may possibly be null" ln="109" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-405094815" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="109" locStartPos="0" locEndLn="110" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="100" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="101" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="107" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="108" ElType="!" desc="free_null_pointer_005_func_001(strlen(str));" rngLn="108">
          <ElDescList>
            <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="100" ElType=".C" desc="free_null_pointer_005_gbl_ptr=NULL;" rngLn="100">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="101" srcRngStartPos="0" srcRngEndLn="102" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="101" ElType="." desc="if(a != INDEX)" rngLn="101">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a != 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="109" ElType=".P" desc="strcpy(free_null_pointer_005_gbl_ptr,str);" rngLn="109">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_005_gbl_ptr&quot; may possibly be null" ln="109" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="439432494" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="109" locStartPos="0" locEndLn="110" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="102" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="103" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="107" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="108" ElType="!" desc="free_null_pointer_005_func_001(strlen(str));" rngLn="108">
          <ElDescList>
            <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="100" ElType="." desc="free_null_pointer_005_gbl_ptr=NULL;" rngLn="100">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="101" srcRngStartPos="0" srcRngEndLn="102" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="101" ElType="." desc="if(a != INDEX)" rngLn="101">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a != 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="102" ElType=".C" desc="malloc(...)" rngLn="102">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="102" ElType="!" desc="free_null_pointer_005_gbl_ptr= malloc(sizeof(char) * (len+1));" rngLn="102">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="109" ElType=".P" desc="strcpy(free_null_pointer_005_gbl_ptr,str);" rngLn="109">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_006_func_001(...) == 0&quot; always evaluates to true" ln="140" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1880943962" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="140" locStartPos="0" locEndLn="141" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="134" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="135" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="134" srcRngStartPos="0" srcRngEndLn="135" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="134" ElType=".C" desc="void free_null_pointer_006 ()" rngLn="134">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="136" ElType="." desc="int flag=0,i;" rngLn="136">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="137" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="137">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="138" ElType="." desc="free_null_pointer_006_s_001* s=(free_null_pointer_006_s_001*) calloc(5,sizeof(free_null_pointer_006_s_001)) ;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="140" ElType="!" desc="free_null_pointer_006_func_001(...)" rngLn="140">
          <ElDescList>
            <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="120" ElType="." desc="int ret;" rngLn="120">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="121" ElType="." desc="if (flag ==0)" rngLn="121">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="122" ElType="!" desc="ret = 0;" rngLn="122">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="125" ElType="!" desc="return ret;" rngLn="125">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="140" ElType=".P" desc="if(free_null_pointer_006_func_001(flag)==0)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="144" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1274168507" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="144" locStartPos="0" locEndLn="145" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="138" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="139" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="136" ElType="." desc="int flag=0,i;" rngLn="136">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="137" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="137">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="138" ElType=".C" desc="calloc(...)" rngLn="138">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="138" ElType="!" desc="free_null_pointer_006_s_001* s=(free_null_pointer_006_s_001*) calloc(5,sizeof(free_null_pointer_006_s_001)) ;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="140" ElType="." desc="free_null_pointer_006_func_001(...)" rngLn="140">
          <ElDescList>
            <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="120" ElType="." desc="int ret;" rngLn="120">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="121" ElType="." desc="if (flag ==0)" rngLn="121">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="122" ElType="." desc="ret = 0;" rngLn="122">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="125" ElType="." desc="return ret;" rngLn="125">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="140" ElType="." desc="if(free_null_pointer_006_func_001(flag)==0)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="142" ElType="." desc="for(i= 0; i&lt;5 ;i++)" rngLn="142">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="144" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="144" ElType=".P" desc="(s+i)->buf = NULL;" rngLn="144">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void free_null_pointer_007_func_002 ( ) { int i , j ;...'" ln="171" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1172664629" NvActs="3" locStartln="171" locStartPos="0" locEndLn="186" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="171" ElType="" desc="[Line 171] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-1123431535">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="181" ElType="" desc="[Line 181] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-1123431535">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;free_null_pointer_007_gbl_doubleptr&quot; may possibly be null" ln="177" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-123341258" lang="cpp" locType="sr" urgent="true" config="1" hash="-1172664629" locStartln="177" locStartPos="0" locEndLn="178" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="173" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="174" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="172" ElType="." desc="int i,j;" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="173" ElType=".C" desc="malloc(...)" rngLn="173">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="173" ElType="!" desc="free_null_pointer_007_gbl_doubleptr=(long**) malloc(10*sizeof(long*));" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="175" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="175">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_007_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_007_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="177" ElType=".P" desc="free_null_pointer_007_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="177">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_007_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_007_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_007_func_001(...) != 0&quot; always evaluates to false" ln="213" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1013023842" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="213" locStartPos="0" locEndLn="214" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="189" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="190" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="189" ElType=".C" desc="void free_null_pointer_007()" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="191" ElType="." desc="int flag=0,i,j;" rngLn="191">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="192" ElType="." desc="free_null_pointer_007_gbl_doubleptr=NULL;" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="193" ElType="." desc="goto label;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="212" ElType="." desc="label:" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="213" ElType="!" desc="free_null_pointer_007_func_001(...)" rngLn="213">
          <ElDescList>
            <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="163" ElType="." desc="int ret ;" rngLn="163">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="164" ElType="." desc="if (flag ==0)" rngLn="164">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="165" ElType="!" desc="ret = 0;" rngLn="165">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="168" ElType="!" desc="return ret;" rngLn="168">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="213" ElType=".P" desc="if(free_null_pointer_007_func_001(flag)!=ZERO)" rngLn="213">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="241" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1228557131" lang="cpp" locType="sr" urgent="true" config="1" hash="-1172664629" locStartln="241" locStartPos="0" locEndLn="242" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="231" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="232" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="238" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="238">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="239" ElType="." desc="char *str1=NULL;" rngLn="239">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="240" ElType="!" desc="free_null_pointer_008_func_001(strlen(str),&amp;str1);" rngLn="240">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="228" ElType="." desc="char * p = NULL;" rngLn="228">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="229" ElType="." desc="if(min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer)" rngLn="229">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (min &lt;= 0) (assuming true)" kind="condEval" />
                <Ann msg="Condition evaluation: (max &lt;= 5) (assuming true)" kind="condEval" />
                <Ann msg="Condition evaluation: min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="231" ElType=".C" desc="malloc(...)" rngLn="231">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="231" ElType="!" desc="p = malloc(sizeof(char) * (len+1));" rngLn="231">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="232" ElType="!" desc="*stringPtr = p;" rngLn="232">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="241" ElType=".P" desc="strcpy(str1,str);" rngLn="241">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="241" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-244210689" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="241" locStartPos="0" locEndLn="242" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="239" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="240" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="238" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="238">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="239" ElType=".C" desc="char *str1=NULL;" rngLn="239">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="240" ElType="!" desc="free_null_pointer_008_func_001(strlen(str),&amp;str1);" rngLn="240">
          <ElDescList>
            <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="228" ElType="." desc="char * p = NULL;" rngLn="228">
              <Props>
                <Prop key="Tracked variables" val="*stringPtr" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: *stringPtr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="229" ElType="!" desc="if(min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer)" rngLn="229">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (min &lt;= 0) (assuming false)" kind="condEval" />
                <Ann msg="Condition evaluation: min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer (false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="241" ElType=".P" desc="strcpy(str1,str);" rngLn="241">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_009dst&quot; may possibly be null" ln="275" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1391192391" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="275" locStartPos="0" locEndLn="276" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="254" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="255" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="271" ElType="." desc="int i;" rngLn="271">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="272" ElType="!" desc="free_null_pointer_009_func_001();" rngLn="272">
          <ElDescList>
            <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="254" ElType=".C" desc="free_null_pointer_009dst = NULL;" rngLn="254">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_009dst" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: free_null_pointer_009dst" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="255" ElType="." desc="int i;" rngLn="255">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="257" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="257" ElType="." desc="while(0)" rngLn="257">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 0 (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="273" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="273">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_009dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_009dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="275" ElType=".P" desc="strcpy (free_null_pointer_009dst[i],&quot;STRING&quot;);" rngLn="275">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_009dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_009dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;src[i]&quot; is uninitialized" ln="320" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-OVERFNZT" ruleSCSCMsg="Start of the path" tool="c++test" id="-271869889" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="320" locStartPos="0" locEndLn="321" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="342" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="343" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="342" srcRngStartPos="0" srcRngEndLn="343" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="342" ElType=".C" desc="void free_null_pointer_010 ()" rngLn="342">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="344" ElType="." desc="char str2[][15] = {{&quot;STRING&quot;}," rngLn="344">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="346" ElType="." desc="free_null_pointer_010_func_001();" rngLn="346">
          <ElDescList>
            <ElDesc srcRngStartln="302" srcRngStartPos="0" srcRngEndLn="303" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="302" ElType="." desc="int i;" rngLn="302">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="305" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="304" ElType="." desc="while(SET_MEM)" rngLn="304">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 0 (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="347" ElType="!" desc="free_null_pointer_010_func_002(free_null_pointer_010_gbl_dst,str2);" rngLn="347">
          <ElDescList>
            <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="317" ElType="." desc="int i;" rngLn="317">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="318" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="318">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="320" srcRngStartPos="0" srcRngEndLn="321" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="320" ElType="." desc="strcpy(*(dst+i),src[i]);" rngLn="320">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="318" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="318">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="320" srcRngStartPos="0" srcRngEndLn="321" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="320" ElType=".P" desc="strcpy(*(dst+i),src[i]);" rngLn="320">
              <Props />
              <Anns>
                <Ann msg="Not zero-terminated string: src[i]" kind="comment" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void free_null_pointer_012 ( ) { double * ptr = NULL , a ;...'" ln="439" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1172664629" NvActs="3" locStartln="439" locStartPos="0" locEndLn="463" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="439" ElType="" desc="[Line 439] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-2075948185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="469" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="445" ElType="" desc="[Line 445] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-1462333542">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(...) == 0&quot; always evaluates to false" ln="443" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="621615047" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="443" locStartPos="0" locEndLn="444" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="438" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType="." desc="double *ptr =NULL, a;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="." desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="!" desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="!" desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="!" desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType=".P" desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MA&quot; always evaluates to false" ln="443" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1194174635" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="443" locStartPos="0" locEndLn="444" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="438" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType="." desc="double *ptr =NULL, a;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="." desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="." desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType=".P" desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(...) == 0&quot; always evaluates to true" ln="449" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-16216954" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="449" locStartPos="0" locEndLn="450" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="438" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType="." desc="double *ptr =NULL, a;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="." desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="." desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MA (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="!" desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="433" ElType="!" desc="ret = 0;" rngLn="433">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="!" desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType=".P" desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA&quot; always evaluates to true" ln="449" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-257311274" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="449" locStartPos="0" locEndLn="450" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="438" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType="." desc="double *ptr =NULL, a;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="." desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="." desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MA (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="433" ElType="." desc="ret = 0;" rngLn="433">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType=".P" desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="451" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-319392564" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="451" locStartPos="0" locEndLn="452" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="438" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="439" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="438" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="438">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType="." desc="double *ptr =NULL, a;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="!" desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="." desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MA (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="433" ElType="." desc="ret = 0;" rngLn="433">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="." desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="451" ElType=".P" desc="if(flag == 10)" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="452" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1619324902" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="452" locStartPos="0" locEndLn="453" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="440" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="441" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="440" ElType=".C" desc="double *ptr =NULL, a;" rngLn="440">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="441" ElType="." desc="int flag=10;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="443">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="435" ElType="." desc="ret=1;" rngLn="435">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="443" ElType="." desc="if (free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MAX ==1)" rngLn="443">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(1) == ZERO &amp;&amp; MA (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="431" ElType="." desc="int ret;" rngLn="431">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="432" ElType="." desc="if (flag ==0)" rngLn="432">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="433" ElType="." desc="ret = 0;" rngLn="433">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="436" ElType="." desc="return ret;" rngLn="436">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="449" ElType="." desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="451" ElType="." desc="if(flag == 10)" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="453" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="452" ElType=".P" desc="a = *(ptr+1);" rngLn="452">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void free_null_pointer_013 ( ) { double * fptr ; double * *...'" ln="470" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1172664629" NvActs="3" locStartln="470" locStartPos="0" locEndLn="493" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="470" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="470" ElType="" desc="[Line 470] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-1001835517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="476" srcRngStartPos="0" srcRngEndLn="499" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="476" ElType="" desc="[Line 476] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="-54470574">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;i >= 10&quot; always evaluates to false" ln="479" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1157748492" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="479" locStartPos="0" locEndLn="480" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="469" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="470" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="469" ElType=".C" desc="void free_null_pointer_013 ()" rngLn="469">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="471" ElType="." desc="double * fptr;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="472" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="473" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="474" srcRngStartPos="0" srcRngEndLn="475" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="474" ElType="." desc="fptr = NULL;" rngLn="474">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="475" ElType="!" desc="int i=0;" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="478" ElType="." desc="double * fptr = *fp1;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="479" ElType=".P" desc="if(i>=10 &amp;&amp; i&lt;=100)" rngLn="479">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i>=10 &amp;&amp; i&lt;=100&quot; always evaluates to false" ln="479" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1867954242" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="479" locStartPos="0" locEndLn="480" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="469" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="470" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="469" ElType=".C" desc="void free_null_pointer_013 ()" rngLn="469">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="471" ElType="." desc="double * fptr;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="472" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="473" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="474" srcRngStartPos="0" srcRngEndLn="475" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="474" ElType="." desc="fptr = NULL;" rngLn="474">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="475" ElType="." desc="int i=0;" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="478" ElType="." desc="double * fptr = *fp1;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="479" ElType=".P" desc="if(i>=10 &amp;&amp; i&lt;=100)" rngLn="479">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i >= 10) (false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fptr&quot; may possibly be null" ln="483" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-510060714" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="483" locStartPos="0" locEndLn="484" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="474" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="475" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="471" ElType="." desc="double * fptr;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="472" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="473" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="474" srcRngStartPos="0" srcRngEndLn="475" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="474" ElType=".C" desc="fptr = NULL;" rngLn="474">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: *fp1, *fp2, fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="475" ElType="." desc="int i=0;" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="478" ElType="!" desc="double * fptr = *fp1;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="479" ElType="." desc="if(i>=10 &amp;&amp; i&lt;=100)" rngLn="479">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
            <Ann msg="Condition evaluation: (i >= 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: i>=10 &amp;&amp; i&lt;=100 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="483" srcRngStartPos="0" srcRngEndLn="484" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="483" ElType=".P" desc="*(fptr+3) = 50.5;" rngLn="483">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i >= 0&quot; always evaluates to true" ln="486" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1382391189" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="486" locStartPos="0" locEndLn="487" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="469" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="470" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="469" ElType=".C" desc="void free_null_pointer_013 ()" rngLn="469">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="471" ElType="." desc="double * fptr;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="472" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="473" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="474" srcRngStartPos="0" srcRngEndLn="475" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="474" ElType="." desc="fptr = NULL;" rngLn="474">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="475" ElType="!" desc="int i=0;" rngLn="475">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="478" ElType="." desc="double * fptr = *fp1;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="479" ElType="." desc="if(i>=10 &amp;&amp; i&lt;=100)" rngLn="479">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i >= 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: i>=10 &amp;&amp; i&lt;=100 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="483" srcRngStartPos="0" srcRngEndLn="484" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="483" ElType="." desc="*(fptr+3) = 50.5;" rngLn="483">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="484" ElType="." desc="*fp1 = fptr;" rngLn="484">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="485" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="485" ElType="!" desc="i++;" rngLn="485">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="486" srcRngStartPos="0" srcRngEndLn="487" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="486" ElType=".P" desc="}while(i>=0 &amp;&amp; i&lt;=1);" rngLn="486">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 1&quot; always evaluates to false" ln="512" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="343777198" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="512" locStartPos="0" locEndLn="513" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="507" ElType=".C" desc="void free_null_pointer_014_func_001(int flag)" rngLn="507">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="510" ElType="." desc="if(flag ==1)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="512" ElType=".P" desc="for (i=1;i&lt;1;i++)" rngLn="512">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 1&quot; always evaluates to false" ln="542" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="343777198" lang="cpp" locType="sr" config="1" hash="-1172664629" locStartln="542" locStartPos="0" locEndLn="543" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" FirstElSrcRngStartln="537" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="538" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="537" ElType=".C" desc="void free_null_pointer_014_func_003(int flag)" rngLn="537">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="539" srcRngStartPos="0" srcRngEndLn="540" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="539" ElType="." desc="int i;" rngLn="539">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="540" srcRngStartPos="0" srcRngEndLn="541" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="540" ElType="." desc="if (flag ==1)" rngLn="540">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="542" srcRngStartPos="0" srcRngEndLn="543" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="542" ElType=".P" desc="for (i=1;i&lt;1;i++)" rngLn="542">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void free_null_pointer_main ( ) { if ( vflag == 1 || vflag ==...'" ln="569" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1172664629" NvActs="3" locStartln="569" locStartPos="0" locEndLn="639" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="569" srcRngStartPos="0" srcRngEndLn="639" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/free_null_pointer.c" srcRnghash="-1172664629" ln="569" ElType="" desc="[Line 569] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="1007396428">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="571" srcRngStartPos="0" srcRngEndLn="642" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="571" ElType="" desc="[Line 571] Duplicated function in file 'free_null_pointer.c'" sourceRngHash="1164514756">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;str_rev&quot; may possibly be null" ln="101" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1849129091" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="101" locStartPos="0" locEndLn="102" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="98" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="99" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="92" ElType="." desc="int i = 0;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="93" ElType="." desc="int j;" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="94" ElType="." desc="char * str_rev = NULL;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="95" ElType="." desc="if (str1 != NULL)" rngLn="95">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="97" ElType="." desc="i = strlen(str1);" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="98" ElType=".C" desc="malloc(...)" rngLn="98">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="98" ElType="!" desc="str_rev = (char *) malloc(i+1);" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="99" ElType="." desc="for (j = 0; j &lt; i; j++)" rngLn="99">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; i) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="101" srcRngStartPos="0" srcRngEndLn="102" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="101" ElType=".P" desc="str_rev[j] = str1[i-j-1];" rngLn="101">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str_rev&quot; may possibly be null" ln="103" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2098254483" lang="cpp" locType="sr" urgent="true" config="1" hash="-430235276" locStartln="103" locStartPos="0" locEndLn="104" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="98" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="99" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="92" ElType="." desc="int i = 0;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="93" ElType="." desc="int j;" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="94" ElType="." desc="char * str_rev = NULL;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="95" ElType="." desc="if (str1 != NULL)" rngLn="95">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="97" ElType="." desc="i = strlen(str1);" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="98" ElType=".C" desc="malloc(...)" rngLn="98">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="98" ElType="!" desc="str_rev = (char *) malloc(i+1);" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="99" ElType="." desc="for (j = 0; j &lt; i; j++)" rngLn="99">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; i) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="103" ElType=".P" desc="str_rev[i] = '\0';" rngLn="103">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;j &lt;= 1&quot; always evaluates to true" ln="117" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="816358232" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="117" locStartPos="0" locEndLn="118" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="112" ElType=".C" desc="void func_pointer_004 ()" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="114" ElType="." desc="int j;" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="115" ElType="." desc="char buf[][25]={&quot;This is a String&quot;," rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="117" ElType=".P" desc="for(j = 0; j &lt;= 1; j++)" rngLn="117">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="151" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="130729685" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="151" locStartPos="0" locEndLn="152" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="147" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="148" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="145" ElType="." desc="int i,j;" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="146" ElType="." desc="long ** doubleptr;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="147" ElType=".C" desc="malloc(...)" rngLn="147">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="147" ElType="!" desc="doubleptr=(long**) malloc(10*sizeof(long*));" rngLn="147">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="149" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="151" ElType=".P" desc="doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="151">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;func_pointer_005_func_001(...) == 0&quot; always evaluates to true" ln="168" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1926356355" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="168" locStartPos="0" locEndLn="169" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="163" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="164" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="163" ElType=".C" desc="void func_pointer_005()" rngLn="163">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="165" ElType="." desc="int flag=0,i,j;" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="166" ElType="." desc="long ** doubleptr=NULL;" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="168" ElType="!" desc="func_pointer_005_func_001(...)" rngLn="168">
          <ElDescList>
            <ElDesc srcRngStartln="135" srcRngStartPos="0" srcRngEndLn="136" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="135" ElType="." desc="int ret =0;" rngLn="135">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="136" ElType="." desc="if (flag ==0)" rngLn="136">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="137" ElType="!" desc="ret = 0;" rngLn="137">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="140" ElType="!" desc="return ret;" rngLn="140">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="168" ElType=".P" desc="if(func_pointer_005_func_001(flag)==0)" rngLn="168">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="210" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1893527792" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="206" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="207" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="205" ElType="." desc="int i,j;" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="206" ElType=".C" desc="malloc(...)" rngLn="206">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="206" ElType="!" desc="doubleptr=(float **) malloc(10*sizeof(float*));" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="208" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="208">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="210" ElType=".P" desc="doubleptr[i]=(float *) malloc(10*sizeof(float));" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;func_pointer_006_func_001(...) == 0&quot; always evaluates to true" ln="251" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="930925149" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="251" locStartPos="0" locEndLn="252" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="248" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="249" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="248" ElType=".C" desc="void func_pointer_006()" rngLn="248">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="250" ElType="." desc="int flag=0,i,j;" rngLn="250">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="251" ElType="!" desc="func_pointer_006_func_001(...)" rngLn="251">
          <ElDescList>
            <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="195" ElType="." desc="int ret =0;" rngLn="195">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="196" ElType="." desc="if (flag ==0)" rngLn="196">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="197" ElType="!" desc="ret = 0;" rngLn="197">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="200" ElType="!" desc="return ret;" rngLn="200">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="251" ElType=".P" desc="if(func_pointer_006_func_001(flag)==0)" rngLn="251">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="338" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1235012518" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="338" locStartPos="0" locEndLn="339" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="337" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="338" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="330" ElType="." desc="int flag = rand();" rngLn="330">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="331" ElType="." desc="flag = 1;" rngLn="331">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="332" ElType="." desc="func_pointer_009_u_001 *u;" rngLn="332">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="333" ElType="." desc="switch (flag)" rngLn="333">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="337" ElType=".C" desc="calloc(...)" rngLn="337">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="337" ElType="!" desc="u = (func_pointer_009_u_001 *)calloc(1,sizeof(func_pointer_009_u_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="338" ElType=".P" desc="u->a = 40;" rngLn="338">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str_rev&quot; may possibly be null" ln="395" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1010927045" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="395" locStartPos="0" locEndLn="396" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="392" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="393" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="386" ElType="." desc="int i = 0;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="387" ElType="." desc="int j;" rngLn="387">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="388" ElType="." desc="char * str_rev = NULL;" rngLn="388">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="389" ElType="." desc="if (str1 != NULL)" rngLn="389">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="391" ElType="." desc="i = strlen(str1);" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="392" ElType=".C" desc="malloc(...)" rngLn="392">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="392" ElType="!" desc="str_rev = (char *) malloc(i+1);" rngLn="392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="393" ElType="." desc="for (j = 0; j &lt; i; j++)" rngLn="393">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; i) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="395" ElType=".P" desc="str_rev[j] = str1[j];" rngLn="395">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str_rev&quot; may possibly be null" ln="397" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="744879364" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="397" locStartPos="0" locEndLn="398" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="392" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="393" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="386" ElType="." desc="int i = 0;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="387" ElType="." desc="int j;" rngLn="387">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="388" ElType="." desc="char * str_rev = NULL;" rngLn="388">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="389" ElType="." desc="if (str1 != NULL)" rngLn="389">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="391" ElType="." desc="i = strlen(str1);" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="392" ElType=".C" desc="malloc(...)" rngLn="392">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="392" ElType="!" desc="str_rev = (char *) malloc(i+1);" rngLn="392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="393" ElType="." desc="for (j = 0; j &lt; i; j++)" rngLn="393">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; i) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="397" ElType=".P" desc="str_rev[j] = '\0';" rngLn="397">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str_rev" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;j &lt;= 1&quot; always evaluates to true" ln="411" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="582093399" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="411" locStartPos="0" locEndLn="412" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="406" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="407" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="406" ElType=".C" desc="void func_pointer_011 ()" rngLn="406">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="408" ElType="." desc="int j;" rngLn="408">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="409" ElType="." desc="const char buf[][25]={&quot;This is a String&quot;," rngLn="409">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="411" srcRngStartPos="0" srcRngEndLn="412" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="411" ElType=".P" desc="for(j = 0; j &lt;= 1; j++)" rngLn="411">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'int ( * func_pointer_012_func_001 ( ) ) [ 4 ] { int ( * p ) [...'" ln="430" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-430235276" NvActs="3" locStartln="430" locStartPos="0" locEndLn="447" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="430" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="430" ElType="" desc="[Line 430] Duplicated function in file 'func_pointer.c'" sourceRngHash="917588889">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="448" srcRngStartPos="0" srcRngEndLn="465" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="448" ElType="" desc="[Line 448] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="-1724798365">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="438" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1852064560" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="438" locStartPos="0" locEndLn="439" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="437" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="438" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="431" ElType="." desc="int (*p)[4];" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="432" ElType="." desc="int arr[4][4] = {{1,2,3,4}," rngLn="432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="436" ElType="." desc="int i,j;" rngLn="436">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="437" ElType=".C" desc="malloc(...)" rngLn="437">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="437" ElType="!" desc="p= (int (*)[]) malloc (sizeof arr);" rngLn="437">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="438" ElType=".P" desc="memcpy(p, arr, sizeof(arr));" rngLn="438">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="481" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-446217706" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="481" locStartPos="0" locEndLn="482" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="470" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="471" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="470" srcRngStartPos="0" srcRngEndLn="471" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="470" ElType=".C" desc="int func_pointer_013_func_002 (int flag)" rngLn="470">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="472" ElType="." desc="int ret = 0;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="473" ElType="." desc="int arr[]={3,8,9,10,4};" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="474" srcRngStartPos="0" srcRngEndLn="475" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="474" ElType="." desc="int *ptr;" rngLn="474">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="475" srcRngStartPos="0" srcRngEndLn="476" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="475" ElType="!" desc="if (flag == 1)" rngLn="475">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="477" srcRngStartPos="0" srcRngEndLn="478" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="477" ElType="." desc="goto my_label;" rngLn="477">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="480" srcRngStartPos="0" srcRngEndLn="481" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="480" ElType="." desc="my_label:" rngLn="480">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="481" ElType=".P" desc="if (flag == 1)" rngLn="481">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="526" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="526" locStartPos="0" locEndLn="527" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="515" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="516" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="515" ElType=".C" desc="int func_pointer_014_func_002 (int flag)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="517" ElType="." desc="int ret = 0;" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="518" ElType="!" desc="if (flag == 1)" rngLn="518">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="520" ElType="." desc="goto my_label;" rngLn="520">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="525" srcRngStartPos="0" srcRngEndLn="526" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="525" ElType="." desc="my_label:" rngLn="525">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="526" ElType=".P" desc="if (flag == 1)" rngLn="526">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="535" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1606668411" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="535" locStartPos="0" locEndLn="536" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="515" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="516" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="515" ElType=".C" desc="int func_pointer_014_func_002 (int flag)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="517" ElType="." desc="int ret = 0;" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="518" ElType="!" desc="if (flag == 1)" rngLn="518">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="520" ElType="." desc="goto my_label;" rngLn="520">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="525" srcRngStartPos="0" srcRngEndLn="526" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="525" ElType="." desc="my_label:" rngLn="525">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="526" ElType="." desc="if (flag == 1)" rngLn="526">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="528" srcRngStartPos="0" srcRngEndLn="529" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="528" ElType="." desc="func_gbl = (float(*)( void))func_pointer_014_func_001;" rngLn="528">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="530" srcRngStartPos="0" srcRngEndLn="531" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="530" ElType="." desc="goto my_label2;" rngLn="530">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="534" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="534" ElType="." desc="my_label2:" rngLn="534">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="535" srcRngStartPos="0" srcRngEndLn="536" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="535" ElType=".P" desc="if (flag == 1)" rngLn="535">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;st1&quot; may possibly be null" ln="601" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="819421683" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="601" locStartPos="0" locEndLn="602" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="600" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="601" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="598" srcRngStartPos="0" srcRngEndLn="599" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="598" ElType="." desc="func_pointer_015_s_001 st,*st1;" rngLn="598">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="600" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="599" ElType="." desc="st.a = 10;" rngLn="599">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="600" ElType=".C" desc="malloc(...)" rngLn="600">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="600" ElType="!" desc="st1 = (func_pointer_015_s_001 *)malloc(1*sizeof(func_pointer_015_s_001));" rngLn="600">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="601" srcRngStartPos="0" srcRngEndLn="602" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="601" ElType=".P" desc="memset(st1, 0, sizeof(*st1));" rngLn="601">
          <Props>
            <Prop key="Tracked variables" val="st1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: st1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void func_pointer_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="616" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-430235276" NvActs="3" locStartln="616" locStartPos="0" locEndLn="692" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="616" srcRngStartPos="0" srcRngEndLn="692" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="616" ElType="" desc="[Line 616] Duplicated function in file 'func_pointer.c'" sourceRngHash="-1746751440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="643" srcRngStartPos="0" srcRngEndLn="719" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="643" ElType="" desc="[Line 643] Duplicated function in file 'func_pointer.c'" sourceRngHash="-1746751440">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="622" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-853300163" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="622" locStartPos="0" locEndLn="623" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="615" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="616" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="615" ElType=".C" desc="void func_pointer_main ()" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="617" srcRngStartPos="0" srcRngEndLn="618" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="617" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="617">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="622" srcRngStartPos="0" srcRngEndLn="623" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="622" ElType=".P" desc="if (vflag == 2 || vflag ==888)" rngLn="622">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="627" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1171444689" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="627" locStartPos="0" locEndLn="628" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="615" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="616" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="615" ElType=".C" desc="void func_pointer_main ()" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="617" srcRngStartPos="0" srcRngEndLn="618" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="617" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="617">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="622" srcRngStartPos="0" srcRngEndLn="623" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="622" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="622">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="627" ElType=".P" desc="if (vflag == 3 || vflag ==888)" rngLn="627">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="632" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-292818412" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="632" locStartPos="0" locEndLn="633" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="615" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="616" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="615" ElType=".C" desc="void func_pointer_main ()" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="617" srcRngStartPos="0" srcRngEndLn="618" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="617" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="617">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="622" srcRngStartPos="0" srcRngEndLn="623" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="622" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="622">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="627" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="627">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="632" srcRngStartPos="0" srcRngEndLn="633" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="632" ElType=".P" desc="if (vflag == 4 || vflag ==888)" rngLn="632">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="637" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2126796110" lang="cpp" locType="sr" config="1" hash="-430235276" locStartln="637" locStartPos="0" locEndLn="638" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" FirstElSrcRngStartln="615" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="616" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="615" ElType=".C" desc="void func_pointer_main ()" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="617" srcRngStartPos="0" srcRngEndLn="618" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="617" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="617">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="622" srcRngStartPos="0" srcRngEndLn="623" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="622" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="622">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="627" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="627">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="632" srcRngStartPos="0" srcRngEndLn="633" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="632" ElType="." desc="if (vflag == 4 || vflag ==888)" rngLn="632">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 4 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="637" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/func_pointer.c" srcRnghash="-430235276" ln="637" ElType=".P" desc="if (vflag == 5 || vflag ==888)" rngLn="637">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 5) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a > 0.0&quot; always evaluates to false" ln="70" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-76912791" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="70" locStartPos="0" locEndLn="71" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="66" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="67" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="66" srcRngStartPos="0" srcRngEndLn="67" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="66" ElType=".C" desc="void function_return_value_unchecked_002 ()" rngLn="66">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="68" srcRngStartPos="0" srcRngEndLn="69" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="68" ElType="!" desc="float a=0.0;" rngLn="68">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="69" ElType="." desc="function_return_value_unchecked_002_func_001(10); /*Tool should detect this line as error*/ /*ERROR:Return value of function never checked*/" rngLn="69">
          <ElDescList>
            <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="58" ElType="." desc="float ret =1.0;" rngLn="58">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="59" ElType="." desc="while(flag>0)" rngLn="59">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="61" ElType="." desc="ret++;" rngLn="61">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="62" ElType="." desc="flag--;" rngLn="62">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="59" ElType="." desc="while(flag>0)" rngLn="59">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="61" ElType="." desc="ret++;" rngLn="61">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="62" ElType="." desc="flag--;" rngLn="62">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="59" ElType="." desc="while(flag>0)" rngLn="59">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="64" ElType="." desc="return ret;" rngLn="64">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="70" ElType=".P" desc="if (a >0)" rngLn="70">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a != 0&quot; always evaluates to false" ln="88" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="409195103" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="88" locStartPos="0" locEndLn="89" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="83" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="84" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="83" ElType=".C" desc="void function_return_value_unchecked_003 ()" rngLn="83">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="85" ElType="!" desc="int a=1;" rngLn="85">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="86" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="86" ElType="." desc="char buf = function_return_value_unchecked_003_func_001(); /*Tool should detect this line as error*/ /*ERROR:Return value of function never checked*/" rngLn="86">
          <ElDescList>
            <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="80" ElType="." desc="char str1 = 'a';" rngLn="80">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="81" ElType="." desc="return str1;" rngLn="81">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="87" ElType="!" desc="a--;" rngLn="87">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="88" ElType=".P" desc="if (a!=0)" rngLn="88">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void function_return_value_unchecked_004 ( ) {...'" ln="114" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-273319451" NvActs="3" locStartln="114" locStartPos="0" locEndLn="143" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <ElDescList>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="114" ElType="" desc="[Line 114] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="744830104">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="116" ElType="" desc="[Line 116] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="614446990">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'float ( * function_return_value_unchecked_006_func_001 ( ) )...'" ln="183" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-273319451" NvActs="3" locStartln="183" locStartPos="0" locEndLn="203" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <ElDescList>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="183" ElType="" desc="[Line 183] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="-607640449">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="184" ElType="" desc="[Line 184] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="-607640449">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;a == 20&quot; always evaluates to false" ln="277" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-384507603" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="277" locStartPos="0" locEndLn="278" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="273" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="274" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="273" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="273">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="275" ElType="!" desc="int a=10,b=2,c=0;" rngLn="275">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="276" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="277" ElType=".P" desc="if(a == 20)" rngLn="277">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;b != 2&quot; always evaluates to false" ln="282" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="154213140" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="282" locStartPos="0" locEndLn="283" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="273" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="274" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="273" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="273">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="275" ElType="!" desc="int a=10,b=2,c=0;" rngLn="275">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="276" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="277" ElType="." desc="if(a == 20)" rngLn="277">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 20) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="282" srcRngStartPos="0" srcRngEndLn="283" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="282" ElType=".P" desc="else if (b != 2)" rngLn="282">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;c > 0&quot; always evaluates to false" ln="287" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-78177634" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="287" locStartPos="0" locEndLn="288" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="273" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="274" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="273" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="273">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="275" ElType="!" desc="int a=10,b=2,c=0;" rngLn="275">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="276" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="277" ElType="." desc="if(a == 20)" rngLn="277">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 20) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="282" srcRngStartPos="0" srcRngEndLn="283" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="282" ElType="." desc="else if (b != 2)" rngLn="282">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (b != 2) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="287" srcRngStartPos="0" srcRngEndLn="288" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="287" ElType=".P" desc="else if (c >0)" rngLn="287">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Do not use &quot;==&quot; or &quot;!=&quot; to test floating-point expression" ln="289" sev="3" auth="kali" rule="MISRA2004-13_3" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="289" locStartPos="10" locEndLn="289" locEndPos="11" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" />
    <FlowViol msg="Condition &quot;function_return_value_unchecked_013_func_001()&quot; always evaluates to true" ln="362" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1696988058" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="362" locStartPos="0" locEndLn="363" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="360" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="361" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="361" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="360" ElType=".C" desc="void function_return_value_unchecked_013 ()" rngLn="360">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="362" ElType="!" desc="function_return_value_unchecked_013_func_001()" rngLn="362">
          <ElDescList>
            <ElDesc srcRngStartln="357" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="357" ElType="!" desc="return (1);" rngLn="357">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="362" ElType=".P" desc="if(function_return_value_unchecked_013_func_001())" rngLn="362">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Do not use &quot;==&quot; or &quot;!=&quot; to test floating-point expression" ln="433" sev="3" auth="kali" rule="MISRA2004-13_3" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="-273319451" locStartln="433" locStartPos="32" locEndLn="433" locEndPos="33" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" />
    <DupViol msg="Duplicated function: 'void function_return_value_unchecked_main ( ) { if ( vflag ==...'" ln="444" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-273319451" NvActs="3" locStartln="444" locStartPos="0" locEndLn="524" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c">
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/function_return_value_unchecked.c" srcRnghash="-273319451" ln="444" ElType="" desc="[Line 444] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="-542142164">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="455" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="455" ElType="" desc="[Line 455] Duplicated function in file 'function_return_value_unchecked.c'" sourceRngHash="-542142164">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;condition == 0&quot; always evaluates to true" ln="22" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="40253053" lang="cpp" locType="sr" config="1" hash="-718634417" locStartln="22" locStartPos="0" locEndLn="23" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" FirstElSrcRngStartln="18" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="19" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="18" ElType=".C" desc="void improper_termination_of_block_001()" rngLn="18">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="20" ElType="!" desc="int condition=0,x=0,y=0;" rngLn="20">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="22" ElType=".P" desc="if (condition==0) /*Tool should detect this line as error*/ /*ERROR:Improper termination of block*/" rngLn="22">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;condition == 0&quot; always evaluates to true" ln="38" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="40253053" lang="cpp" locType="sr" config="1" hash="-718634417" locStartln="38" locStartPos="0" locEndLn="39" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" FirstElSrcRngStartln="34" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="35" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="34" ElType=".C" desc="void improper_termination_of_block_002()" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="36" ElType="!" desc="int condition=0,x=0,y=0;" rngLn="36">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="38" ElType=".P" desc="if (condition==0); printf(&quot;%d&quot;,x);/*Tool should detect this line as error*/ /*ERROR:Improper termination of block*/" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;x &lt; 10&quot; always evaluates to true" ln="67" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1282219495" lang="cpp" locType="sr" config="1" hash="-718634417" locStartln="67" locStartPos="0" locEndLn="68" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" FirstElSrcRngStartln="63" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="64" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="63" ElType=".C" desc="void improper_termination_of_block_004()" rngLn="63">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="65" ElType="!" desc="int x=0,y=0;" rngLn="65">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/improper_termination_of_block.c" srcRnghash="-718634417" ln="67" ElType=".P" desc="while(x&lt;10);/*Tool should detect this line as error*/ /*ERROR:Improper termination of block*/" rngLn="67">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void invalid_extern_main ( ) { if ( vflag == 1 || vflag ==...'" ln="67" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1361092418" NvActs="3" locStartln="67" locStartPos="0" locEndLn="99" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/invalid_extern.c">
      <ElDescList>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_extern.c" srcRnghash="1361092418" ln="67" ElType="" desc="[Line 67] Duplicated function in file 'invalid_extern.c'" sourceRngHash="-1622532995">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c" srcRnghash="721056729" ln="73" ElType="" desc="[Line 73] Duplicated function in file 'invalid_extern.c'" sourceRngHash="-1622532995">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="33" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-568853363" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="33" locStartPos="0" locEndLn="34" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="28" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="28">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="!" desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType=".P" desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="37" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1758367336" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="37" locStartPos="0" locEndLn="38" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="28" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="28">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="!" desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType="." desc="if(ptr!=NULL)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="37" ElType=".P" desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="37">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="39" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1047622458" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="39" locStartPos="0" locEndLn="40" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="28" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="28">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="!" desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType="." desc="if(ptr!=NULL)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="37" ElType="." desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="37">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="39" ElType=".P" desc="if(flag == 10)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="44" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1758367336" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="44" locStartPos="0" locEndLn="45" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="28" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="28">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="!" desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType="." desc="if(ptr!=NULL)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="44" ElType=".P" desc="if(flag == 10)" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="45" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2132125153" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="33" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="34" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="." desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType=".C" desc="malloc(...)" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="!" desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType="." desc="if(ptr!=NULL)" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="44" ElType="." desc="if(flag == 10)" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="45" ElType=".P" desc="a = *(ptr+1); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="45" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="983132250" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="35" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="36" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="." desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType=".C" desc="if(ptr!=NULL)" rngLn="35">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="44" ElType="." desc="if(flag == 10)" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="45" ElType=".P" desc="a = *(ptr+1); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="45" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1941449672" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="41" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="42" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="30" ElType="." desc="int *ptr, a;" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="31" ElType="." desc="int flag=10;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="33" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( a= 5);" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="35" ElType="." desc="if(ptr!=NULL)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="37" ElType="." desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="37">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="39" ElType="." desc="if(flag == 10)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="41" ElType=".C" desc="free(ptr);" rngLn="41">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="44" ElType="." desc="if(flag == 10)" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="45" ElType=".P" desc="a = *(ptr+1); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="67" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1764755415" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="67" locStartPos="0" locEndLn="68" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="57" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="58" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="57" ElType=".C" desc="double *ptr, *dptr = 0,a;" rngLn="57">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: dptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="59" ElType="." desc="if (staticflag == 10)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="60" ElType="." desc="(ptr= (double*) malloc(10*sizeof(double)));" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="64" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="64">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="67" ElType=".P" desc="(*(dptr+1) = 5.5) ;" rngLn="67">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="67" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="307723342" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="67" locStartPos="0" locEndLn="68" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="62" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="63" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="57" ElType="." desc="double *ptr, *dptr = 0,a;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="59" ElType="." desc="if (staticflag == 10)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="62" ElType=".C" desc="malloc(...)" rngLn="62">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="62" ElType="!" desc="(dptr = (double*) malloc(5*sizeof(double)));" rngLn="62">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="64" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="64">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Condition evaluation: (staticflag == 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="67" ElType=".P" desc="(*(dptr+1) = 5.5) ;" rngLn="67">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;dptr&quot;" ln="84" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1567691844" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="84" locStartPos="0" locEndLn="85" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="57" ElType="." desc="double *ptr, *dptr = 0,a;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="59" ElType="." desc="if (staticflag == 10)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="62" ElType="." desc="(dptr = (double*) malloc(5*sizeof(double)));" rngLn="62">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="64" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="64">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="67" ElType="." desc="(*(dptr+1) = 5.5) ;" rngLn="67">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="69" ElType="." desc="if(staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="69">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="76" ElType=".C" desc="free(dptr);" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: dptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="79" ElType="." desc="if(staticflag == 10)" rngLn="79">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="84" srcRngStartPos="0" srcRngEndLn="85" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="84" ElType=".P" desc="a = *(dptr+1);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: dptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;a&quot; is used prior to initialization" ln="85" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-2131250458" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="85" locStartPos="0" locEndLn="86" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="57" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="58" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="57" ElType=".C" desc="double *ptr, *dptr = 0,a;" rngLn="57">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="59" srcRngStartPos="0" srcRngEndLn="60" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="59" ElType="." desc="if (staticflag == 10)" rngLn="59">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="60" ElType="." desc="(ptr= (double*) malloc(10*sizeof(double)));" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="64" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="64">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="65" ElType="." desc="(*(ptr+1) = 10.5);" rngLn="65">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="69" ElType="." desc="if(staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="69">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (ptr != 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: staticflag == 10 &amp;&amp; ptr!=NULL) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="72" ElType="." desc="free(ptr);" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="79" ElType="." desc="if(staticflag == 10)" rngLn="79">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="81" ElType="." desc=";" rngLn="81">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="85" ElType=".P" desc="printf(&quot;%lf&quot;,a);" rngLn="85">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: a" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;buf&quot;" ln="105" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1614334294" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="105" locStartPos="0" locEndLn="106" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="103" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="104" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="95" ElType="." desc="int i=1;" rngLn="95">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="96" ElType="." desc="char *buf,*c;" rngLn="96">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="97" ElType="." desc="while(i>0)" rngLn="97">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="99" ElType="." desc="buf = (char *) malloc (25 * sizeof(char));" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="100" ElType="." desc="if(buf!=NULL)" rngLn="100">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="105" ElType="." desc="c = buf; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="106" srcRngStartPos="0" srcRngEndLn="107" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="106" ElType="." desc="i++;" rngLn="106">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="107" ElType="." desc="if(i>=10)" rngLn="107">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i >= 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="97" ElType="." desc="while(i>0)" rngLn="97">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="99" ElType="." desc="buf = (char *) malloc (25 * sizeof(char));" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="100" ElType="." desc="if(buf!=NULL)" rngLn="100">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="102" ElType="." desc="strcpy(buf,&quot;This is String&quot;);" rngLn="102">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="103" ElType=".C" desc="free(buf);" rngLn="103">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="105" ElType=".P" desc="c = buf; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="105">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: buf" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;buf&quot;" ln="133" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="365992146" lang="cpp" locType="sr" urgent="true" config="1" hash="-1950574767" locStartln="133" locStartPos="0" locEndLn="134" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="128" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="129" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="120" ElType="." desc="char * buf = NULL;" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="121" ElType="." desc="if(staticflag1)" rngLn="121">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="123" ElType="." desc="buf = (char *)malloc(100*sizeof(char));" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="124" ElType="." desc="if(buf !=NULL)" rngLn="124">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="126" ElType="." desc="memset(buf, 'A', 100-1);" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="127" ElType="." desc="buf[100-1] = '\0';" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="128" ElType=".C" desc="free(buf);" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="131" ElType="." desc="if(staticflag1)" rngLn="131">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag1 != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="133" ElType=".P" desc="printf(&quot;String= %s&quot;,buf); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="133">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: buf" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; is used prior to initialization" ln="147" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="313149593" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="147" locStartPos="0" locEndLn="148" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="143" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="144" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="143" ElType=".C" desc="int *ptr ;" rngLn="143">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="145" ElType="." desc="if (count ==0)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (count == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="147" ElType=".P" desc="count = *ptr; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="147">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="181" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2112258755" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="181" locStartPos="0" locEndLn="182" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="168" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="169" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="168" ElType=".C" desc="calloc(...)" rngLn="168">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="168" ElType="!" desc="float *buf1=(float*)calloc(5,sizeof(float));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="169" ElType="." desc="float *buf2=(float*)calloc(5,sizeof(float));" rngLn="169">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="170" ElType="." desc="float *buf3=(float*)calloc(5,sizeof(float));" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="171" ElType="." desc="float *buf4=(float*)calloc(5,sizeof(float));" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="172" ElType="." desc="float *buf5=(float*)calloc(5,sizeof(float));" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="173" ElType="!" desc="float **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="174" ElType="." desc="int i,j=4;" rngLn="174">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="175" ElType="." desc="if(buf2 != NULL)" rngLn="175">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="179" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="181" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="181">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[1], buf2&quot; may possibly be null" ln="188" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-692158723" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="188" locStartPos="0" locEndLn="189" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="175" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="176" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="168" ElType="." desc="float *buf1=(float*)calloc(5,sizeof(float));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="169" ElType="." desc="float *buf2=(float*)calloc(5,sizeof(float));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="170" ElType="." desc="float *buf3=(float*)calloc(5,sizeof(float));" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="171" ElType="." desc="float *buf4=(float*)calloc(5,sizeof(float));" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="172" ElType="." desc="float *buf5=(float*)calloc(5,sizeof(float));" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="173" ElType="." desc="float **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="174" ElType="." desc="int i,j=4;" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="175" ElType=".C" desc="if(buf2 != NULL)" rngLn="175">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="179" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="181" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="181">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="179" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="183" ElType="." desc="free(buf1);" rngLn="183">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="184" ElType="." desc="free(buf2);" rngLn="184">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="185" ElType="." desc="free(buf3);" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="186" ElType="." desc="free(buf4);" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="187" ElType="." desc="free(buf5);" rngLn="187">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="188" ElType=".P" desc="*((*pbuf[1])+1) =buf2[0]; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="188">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;*pbuf[1], buf2&quot;" ln="188" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="342823814" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="188" locStartPos="0" locEndLn="189" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="184" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="185" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="168" ElType="." desc="float *buf1=(float*)calloc(5,sizeof(float));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="169" ElType="." desc="float *buf2=(float*)calloc(5,sizeof(float));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="170" ElType="." desc="float *buf3=(float*)calloc(5,sizeof(float));" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="171" ElType="." desc="float *buf4=(float*)calloc(5,sizeof(float));" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="172" ElType="." desc="float *buf5=(float*)calloc(5,sizeof(float));" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="173" ElType="." desc="float **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="174" ElType="." desc="int i,j=4;" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="175" ElType="." desc="if(buf2 != NULL)" rngLn="175">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="177" ElType="." desc="buf2[0] = 10.0;" rngLn="177">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="179" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="181" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="181">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="179" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="183" ElType="." desc="free(buf1);" rngLn="183">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="184" ElType=".C" desc="free(buf2);" rngLn="184">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: *pbuf[1], buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="185" ElType="." desc="free(buf3);" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="186" ElType="." desc="free(buf4);" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="187" ElType="." desc="free(buf5);" rngLn="187">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="188" ElType=".P" desc="*((*pbuf[1])+1) =buf2[0]; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="188">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: *pbuf[1], buf2" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="201" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-54403334" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="201" locStartPos="0" locEndLn="202" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="197" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="198" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="197" ElType=".C" desc="malloc(...)" rngLn="197">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="197" ElType="!" desc="char **ptr = (char**) malloc(5*sizeof(char*));" rngLn="197">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="198" ElType="." desc="int i;" rngLn="198">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="200" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="200">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="201" ElType=".P" desc="ptr[i]=(char*) malloc(15*sizeof(char));" rngLn="201">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="210" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1126809855" lang="cpp" locType="sr" urgent="true" config="1" hash="-1950574767" locStartln="210" locStartPos="0" locEndLn="211" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="209" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="210" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="197" ElType="." desc="char **ptr = (char**) malloc(5*sizeof(char*));" rngLn="197">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="198" ElType="." desc="int i;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="200" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="200">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="201" ElType="." desc="ptr[i]=(char*) malloc(15*sizeof(char));" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="200" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="200">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="203" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="203">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="205" ElType="." desc="strcpy(*(ptr+i),&quot;String&quot;);" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="206" ElType="." desc="free(ptr[i]);" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="207" ElType="." desc="ptr[i] = NULL;" rngLn="207">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="203" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="203">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="209" ElType=".C" desc="free(ptr);" rngLn="209">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="210" ElType=".P" desc="strcpy(*(ptr+2),&quot;String&quot;); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="210">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;buf&quot;" ln="224" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="470926126" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="224" locStartPos="0" locEndLn="225" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="223" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="224" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="219" ElType="." desc="char* buf=(char*) calloc(25, sizeof(char));" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="220" ElType="." desc="char* buf1= &quot;This is a string&quot;;" rngLn="220">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="221" ElType="." desc="if(buf != NULL)" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="223" srcRngStartPos="0" srcRngEndLn="224" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="223" ElType=".C" desc="free(buf);" rngLn="223">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="224" srcRngStartPos="0" srcRngEndLn="225" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="224" ElType=".P" desc="memcpy(buf,buf1,11); /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="224">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: buf" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="265" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1621795174" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="265" locStartPos="0" locEndLn="266" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="261" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="262" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="255" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="256" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="256">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="258" ElType="." desc="if(u!=NULL)" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="260" ElType="." desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="261" ElType=".C" desc="if(u->s1!=NULL)" rngLn="261">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: u->s1" kind="var" />
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="264" ElType="!" desc="p = u;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="265" ElType=".P" desc="p->s1->a[0] = 1;" rngLn="265">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="265" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="96556326" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="265" locStartPos="0" locEndLn="266" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="260" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="261" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="255" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="256" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="256">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="258" ElType="." desc="if(u!=NULL)" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="260" ElType=".C" desc="malloc(...)" rngLn="260">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="260" ElType="!" desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="261" ElType="." desc="if(u->s1!=NULL)" rngLn="261">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1" kind="var" />
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="264" ElType="!" desc="p = u;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="265" ElType=".P" desc="p->s1->a[0] = 1;" rngLn="265">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1->a, u->s1->a&quot; may possibly be null" ln="265" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1104063712" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="265" locStartPos="0" locEndLn="266" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="262" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="263" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="255" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="256" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="256">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="258" ElType="." desc="if(u!=NULL)" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="260" ElType="." desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="261" ElType="." desc="if(u->s1!=NULL)" rngLn="261">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="262" ElType=".C" desc="malloc(...)" rngLn="262">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="262" ElType="!" desc="u->s1->a = (int *) malloc(5*sizeof(int));" rngLn="262">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="264" ElType="!" desc="p = u;" rngLn="264">
          <Props>
            <Prop key="Tracked variables" val="u->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1->a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="265" ElType=".P" desc="p->s1->a[0] = 1;" rngLn="265">
          <Props>
            <Prop key="Tracked variables" val="p->s1->a, u->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1->a, u->s1->a" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;p&quot;" ln="270" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1480584414" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="270" locStartPos="0" locEndLn="271" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="269" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="270" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="255" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="256" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="256">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="258" ElType="." desc="if(u!=NULL)" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="260" ElType="." desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="261" ElType="." desc="if(u->s1!=NULL)" rngLn="261">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="262" ElType="." desc="u->s1->a = (int *) malloc(5*sizeof(int));" rngLn="262">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="264" ElType="." desc="p = u;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="265" ElType="." desc="p->s1->a[0] = 1;" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="267" ElType="." desc="free(u->s1->a);" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="268" ElType="." desc="free(u->s1);" rngLn="268">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="269" srcRngStartPos="0" srcRngEndLn="270" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="269" ElType=".C" desc="free(u);" rngLn="269">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="270" ElType=".P" desc="p->s1->a[0] = 1; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="270">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: p" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr1&quot; may possibly be null" ln="291" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1483031903" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="291" locStartPos="0" locEndLn="292" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="280" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="281" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="286" srcRngStartPos="0" srcRngEndLn="287" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="286" ElType="." desc="int ptr[5] = {4,6,9,10,0};" rngLn="286">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="287" srcRngStartPos="0" srcRngEndLn="288" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="287" ElType="." desc="int *ptr1,i;" rngLn="287">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="288" srcRngStartPos="0" srcRngEndLn="289" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="288" ElType="!" desc="invalid_memory_access_func_010(5,&amp;ptr1);" rngLn="288">
          <ElDescList>
            <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="280" ElType=".C" desc="malloc(...)" rngLn="280">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="280" ElType="!" desc="int * p = malloc(sizeof(int) * len);" rngLn="280">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="281" ElType="!" desc="*Ptr = p;" rngLn="281">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="289" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="289">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="291" srcRngStartPos="0" srcRngEndLn="292" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="291" ElType=".P" desc="*(ptr1+i) = ptr[i];" rngLn="291">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr1&quot;" ln="294" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="1218367104" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="294" locStartPos="0" locEndLn="295" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="293" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="294" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="286" srcRngStartPos="0" srcRngEndLn="287" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="286" ElType="." desc="int ptr[5] = {4,6,9,10,0};" rngLn="286">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="287" srcRngStartPos="0" srcRngEndLn="288" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="287" ElType="." desc="int *ptr1,i;" rngLn="287">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="288" srcRngStartPos="0" srcRngEndLn="289" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="288" ElType="." desc="invalid_memory_access_func_010(5,&amp;ptr1);" rngLn="288">
          <ElDescList>
            <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="280" ElType="." desc="int * p = malloc(sizeof(int) * len);" rngLn="280">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="281" ElType="." desc="*Ptr = p;" rngLn="281">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="289" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="289">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="291" srcRngStartPos="0" srcRngEndLn="292" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="291" ElType="." desc="*(ptr1+i) = ptr[i];" rngLn="291">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="289" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="289">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="293" srcRngStartPos="0" srcRngEndLn="294" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="293" ElType=".C" desc="free(ptr1);" rngLn="293">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="294" srcRngStartPos="0" srcRngEndLn="295" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="294" ElType=".P" desc="*(ptr1+1) = ptr[1];/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="294">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr1" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr&quot; out of bounds at index >= 4. Correct index(es): [0...3]" ln="320" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="918544613" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="320" locStartPos="0" locEndLn="321" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="301" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="302" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="301" srcRngStartPos="0" srcRngEndLn="302" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="301" ElType=".C" desc="void invalid_memory_access_011 ()" rngLn="301">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="303" srcRngStartPos="0" srcRngEndLn="304" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="303" ElType="." desc="int *ptr,i=0,j;" rngLn="303">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="305" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="304" ElType="." desc="int index[4] = {3, 5, 4, 6};" rngLn="304">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="305" srcRngStartPos="0" srcRngEndLn="306" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="305" ElType="." desc="for(j=0;;j++)" rngLn="305">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="307" ElType="." desc="ptr = (int *)malloc(sizeof(int) * 4);" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="308" ElType="." desc="if(ptr!=NULL)" rngLn="308">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="317" ElType="." desc="if(j>10)" rngLn="317">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (j > 10) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="305" srcRngStartPos="0" srcRngEndLn="306" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="305" ElType="." desc="for(j=0;;j++)" rngLn="305">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="307" ElType="!" desc="malloc(...)" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="307" ElType="!" desc="ptr = (int *)malloc(sizeof(int) * 4);" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="308" ElType="." desc="if(ptr!=NULL)" rngLn="308">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="310" srcRngStartPos="0" srcRngEndLn="311" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="310" ElType="." desc="while(i&lt;4)" rngLn="310">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 4) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="315" srcRngStartPos="0" srcRngEndLn="316" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="315" ElType="." desc="free(ptr);" rngLn="315">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="317" ElType="." desc="if(j>10)" rngLn="317">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (j > 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="318" ElType="." desc="break;" rngLn="318">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="320" srcRngStartPos="0" srcRngEndLn="321" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="320" ElType=".P" desc="*(ptr+i) = i; /*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="320">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="371" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-913780319" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="355" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="356" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="." desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 2&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="356" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="355" ElType=".C" desc="if(s!=NULL)" rngLn="355">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="363" srcRngStartPos="0" srcRngEndLn="364" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="363" ElType="." desc="break;" rngLn="363">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="371" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-913780319" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="343" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="344" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="." desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="343" ElType=".C" desc="if(s!=NULL)" rngLn="343">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="351" ElType="." desc="break;" rngLn="351">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="371" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1497549845" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="337" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="338" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType=".C" desc="calloc(...)" rngLn="337">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="!" desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="343" ElType="." desc="if(s!=NULL)" rngLn="343">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="351" ElType="." desc="break;" rngLn="351">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;s&quot;" ln="371" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1444104546" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="367" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="368" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="." desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case default&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="367" ElType=".C" desc="free(s);" rngLn="367">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="368" ElType="." desc="break;" rngLn="368">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;s&quot;" ln="371" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-244654674" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="349" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="350" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="." desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="343" ElType="." desc="if(s!=NULL)" rngLn="343">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="345" srcRngStartPos="0" srcRngEndLn="346" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="345" ElType="." desc="s->a = 10;" rngLn="345">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="346" ElType="." desc="s->b = 10;" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="347" ElType="." desc="s->uninit = 10;" rngLn="347">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="348" ElType="." desc="i=s->a;" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="349" ElType=".C" desc="free(s);" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="351" ElType="." desc="break;" rngLn="351">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;s&quot;" ln="371" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1319352477" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="361" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="362" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="336" ElType="." desc="invalid_memory_access_012_s_001 *s;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="337" ElType="." desc="s = (invalid_memory_access_012_s_001 *)calloc(1,sizeof(invalid_memory_access_012_s_001));" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="338" ElType="." desc="int i=0;" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="339" ElType="." desc="switch (flag)" rngLn="339">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 2&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="356" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="355" ElType="." desc="if(s!=NULL)" rngLn="355">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="357" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="357" ElType="." desc="s->a = 20;" rngLn="357">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="358" srcRngStartPos="0" srcRngEndLn="359" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="358" ElType="." desc="s->b = 20;" rngLn="358">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="359" ElType="." desc="s->uninit = 20;" rngLn="359">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="361" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="360" ElType="." desc="i=s->a;" rngLn="360">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="361" srcRngStartPos="0" srcRngEndLn="362" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="361" ElType=".C" desc="free(s);" rngLn="361">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="363" srcRngStartPos="0" srcRngEndLn="364" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="363" ElType="." desc="break;" rngLn="363">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="371" ElType=".P" desc="return (i+s->a);/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_013_s_001_s_gbl&quot; may possibly be null" ln="432" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-339305146" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="432" locStartPos="0" locEndLn="433" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="405" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="406" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="400" ElType="." desc="int i=0;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="401" ElType="." desc="switch (flag)" rngLn="401">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="405" ElType=".C" desc="if (invalid_memory_access_013_s_001_s_gbl != NULL)" rngLn="405">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Condition evaluation: (invalid_memory_access_013_s_001_s_gbl != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="413" ElType="." desc="break;" rngLn="413">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="432" ElType=".P" desc="return invalid_memory_access_013_s_001_s_gbl->a;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_013_s_001_s_gbl&quot; may possibly be null" ln="432" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="713660813" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="432" locStartPos="0" locEndLn="433" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="395" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="396" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="453" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="452" ElType="." desc="int ret;" rngLn="452">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="453" srcRngStartPos="0" srcRngEndLn="454" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="453" ElType="!" desc="invalid_memory_access_013_func_001 (1);" rngLn="453">
          <ElDescList>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="394" ElType="." desc="if(flag >0)" rngLn="394">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag > 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="395" ElType=".C" desc="calloc(...)" rngLn="395">
              <Props>
                <Prop key="Tracked variables" val="calloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: calloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="395" ElType="!" desc="invalid_memory_access_013_s_001_s_gbl = (invalid_memory_access_013_s_001 *)calloc(1,sizeof(invalid_memory_access_013_s_001));" rngLn="395">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="454" srcRngStartPos="0" srcRngEndLn="455" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="454" ElType="!" desc="ret = invalid_memory_access_013_func_002 (1);" rngLn="454">
          <ElDescList>
            <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="400" ElType="." desc="int i=0;" rngLn="400">
              <Props>
                <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="401" ElType="." desc="switch (flag)" rngLn="401">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="405" ElType="." desc="if (invalid_memory_access_013_s_001_s_gbl != NULL)" rngLn="405">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (invalid_memory_access_013_s_001_s_gbl != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="413" ElType="." desc="break;" rngLn="413">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="432" ElType=".P" desc="return invalid_memory_access_013_s_001_s_gbl->a;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="432">
              <Props>
                <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_013_s_001_s_gbl&quot; may possibly be null" ln="432" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-339305146" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="432" locStartPos="0" locEndLn="433" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="417" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="418" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="400" ElType="." desc="int i=0;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="401" ElType="." desc="switch (flag)" rngLn="401">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 2&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="417" ElType=".C" desc="if (invalid_memory_access_013_s_001_s_gbl != NULL)" rngLn="417">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Condition evaluation: (invalid_memory_access_013_s_001_s_gbl != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="425" ElType="." desc="break;" rngLn="425">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="432" ElType=".P" desc="return invalid_memory_access_013_s_001_s_gbl->a;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;invalid_memory_access_013_s_001_s_gbl&quot;" ln="432" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1005812996" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="432" locStartPos="0" locEndLn="433" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="423" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="424" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="400" ElType="." desc="int i=0;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="401" ElType="." desc="switch (flag)" rngLn="401">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 2&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="417" ElType="." desc="if (invalid_memory_access_013_s_001_s_gbl != NULL)" rngLn="417">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_013_s_001_s_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="419" srcRngStartPos="0" srcRngEndLn="420" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="419" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->a = 20;" rngLn="419">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="420" srcRngStartPos="0" srcRngEndLn="421" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="420" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->b = 20;" rngLn="420">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="421" srcRngStartPos="0" srcRngEndLn="422" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="421" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->uninit = 20;" rngLn="421">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="422" ElType="." desc="i=invalid_memory_access_013_s_001_s_gbl->a;" rngLn="422">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="423" ElType=".C" desc="free(invalid_memory_access_013_s_001_s_gbl);" rngLn="423">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: invalid_memory_access_013_s_001_s_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="425" ElType="." desc="break;" rngLn="425">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="432" ElType=".P" desc="return invalid_memory_access_013_s_001_s_gbl->a;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;invalid_memory_access_013_s_001_s_gbl&quot;" ln="432" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-2076566599" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="432" locStartPos="0" locEndLn="433" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="411" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="412" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="400" ElType="." desc="int i=0;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="401" ElType="." desc="switch (flag)" rngLn="401">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="405" ElType="." desc="if (invalid_memory_access_013_s_001_s_gbl != NULL)" rngLn="405">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_013_s_001_s_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="407" srcRngStartPos="0" srcRngEndLn="408" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="407" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->a = 10;" rngLn="407">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="408" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->b = 10;" rngLn="408">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="409" ElType="." desc="invalid_memory_access_013_s_001_s_gbl->uninit = 10;" rngLn="409">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="410" srcRngStartPos="0" srcRngEndLn="411" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="410" ElType="." desc="i=invalid_memory_access_013_s_001_s_gbl->a;" rngLn="410">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="411" srcRngStartPos="0" srcRngEndLn="412" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="411" ElType=".C" desc="free(invalid_memory_access_013_s_001_s_gbl);" rngLn="411">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: invalid_memory_access_013_s_001_s_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="413" ElType="." desc="break;" rngLn="413">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="432" ElType=".P" desc="return invalid_memory_access_013_s_001_s_gbl->a;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_013_s_001_s_gbl" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: invalid_memory_access_013_s_001_s_gbl" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;str_rev&quot;" ln="516" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-1605059242" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="516" locStartPos="0" locEndLn="517" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="515" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="516" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="500" srcRngStartPos="0" srcRngEndLn="501" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="500" ElType="." desc="int i = 0;" rngLn="500">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="501" ElType="." desc="int j;" rngLn="501">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="502" ElType="." desc="char * str_rev = NULL;" rngLn="502">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="503" srcRngStartPos="0" srcRngEndLn="504" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="503" ElType="." desc="if (str1 != NULL)" rngLn="503">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="505" ElType="." desc="i = strlen(str1);" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="506" ElType="." desc="str_rev = (char *) malloc(i+1);" rngLn="506">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="507" ElType="." desc="if (str_rev != NULL)" rngLn="507">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str_rev != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="509" ElType="." desc="for (j = 0; j &lt; i; j++)" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; i) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="513" ElType="." desc="str_rev[i] = '\0';" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="515" ElType=".C" desc="free(str_rev) ;" rngLn="515">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: str_rev" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="516" ElType=".P" desc="return str_rev;/*Tool should detect this line as error*/ /*ERROR:Invalid memory access to already freed area*/" rngLn="516">
          <Props>
            <Prop key="Tracked variables" val="str_rev" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: str_rev" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_016_func_001(...) == 0&quot; always evaluates to true" ln="554" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="718772420" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="554" locStartPos="0" locEndLn="555" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="551" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="552" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="551" ElType=".C" desc="void invalid_memory_access_016_func_002()" rngLn="551">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="553" ElType="." desc="int i;" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType="!" desc="invalid_memory_access_016_func_001(...)" rngLn="554">
          <ElDescList>
            <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="543" ElType="." desc="int ret;" rngLn="543">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="544" ElType="." desc="if (flag ==0)" rngLn="544">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="545" ElType="!" desc="ret = 0;" rngLn="545">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="548" ElType="!" desc="return ret;" rngLn="548">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType=".P" desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_016_doubleptr_gbl&quot; may possibly be null" ln="559" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1028638053" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="559" locStartPos="0" locEndLn="560" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="556" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="557" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="553" ElType="." desc="int i;" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType="." desc="invalid_memory_access_016_func_001(...)" rngLn="554">
          <ElDescList>
            <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="543" ElType="." desc="int ret;" rngLn="543">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="544" ElType="." desc="if (flag ==0)" rngLn="544">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="545" ElType="." desc="ret = 0;" rngLn="545">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="548" ElType="." desc="return ret;" rngLn="548">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType="." desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="556" ElType=".C" desc="malloc(...)" rngLn="556">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="556" ElType="!" desc="invalid_memory_access_016_doubleptr_gbl=(char**) malloc(10*sizeof(char*));" rngLn="556">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="557" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="557">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="559" ElType=".P" desc="invalid_memory_access_016_doubleptr_gbl[i]=(char*) malloc(10*sizeof(char));" rngLn="559">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_016_doubleptr_gbl[0]&quot; may possibly be null" ln="560" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1810270520" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="560" locStartPos="0" locEndLn="561" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="559" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="560" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="553" ElType="." desc="int i;" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType="." desc="invalid_memory_access_016_func_001(...)" rngLn="554">
          <ElDescList>
            <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="543" ElType="." desc="int ret;" rngLn="543">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="544" ElType="." desc="if (flag ==0)" rngLn="544">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="545" ElType="." desc="ret = 0;" rngLn="545">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="548" ElType="." desc="return ret;" rngLn="548">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="554" ElType="." desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="556" ElType="." desc="invalid_memory_access_016_doubleptr_gbl=(char**) malloc(10*sizeof(char*));" rngLn="556">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="557" srcRngStartPos="0" srcRngEndLn="558" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="557" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="557">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="559" ElType=".C" desc="malloc(...)" rngLn="559">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="559" ElType="!" desc="invalid_memory_access_016_doubleptr_gbl[i]=(char*) malloc(10*sizeof(char));" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="560" ElType=".P" desc="strcpy(invalid_memory_access_016_doubleptr_gbl[i],&quot;STRING00&quot;);" rngLn="560">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_016_func_001(...) == 0&quot; always evaluates to true" ln="574" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="283794833" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="574" locStartPos="0" locEndLn="575" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="571" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="572" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="571" srcRngStartPos="0" srcRngEndLn="572" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="571" ElType=".C" desc="void invalid_memory_access_016()" rngLn="571">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="573" ElType="." desc="int flag=0,i;" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="574" srcRngStartPos="0" srcRngEndLn="575" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="574" ElType="!" desc="invalid_memory_access_016_func_001(...)" rngLn="574">
          <ElDescList>
            <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="543" ElType="." desc="int ret;" rngLn="543">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="544" ElType="." desc="if (flag ==0)" rngLn="544">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="545" ElType="!" desc="ret = 0;" rngLn="545">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="548" ElType="!" desc="return ret;" rngLn="548">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="574" srcRngStartPos="0" srcRngEndLn="575" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="574" ElType=".P" desc="if(invalid_memory_access_016_func_001(flag)==0)" rngLn="574">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_017_func_001(...) == 0&quot; always evaluates to false" ln="628" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-456257080" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="628" locStartPos="0" locEndLn="629" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="625" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="626" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="625" ElType=".C" desc="void invalid_memory_access_017()" rngLn="625">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="627" ElType="." desc="int flag=10;" rngLn="627">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="628" srcRngStartPos="0" srcRngEndLn="629" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="628" ElType="!" desc="invalid_memory_access_017_func_001(...)" rngLn="628">
          <ElDescList>
            <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="600" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="599" ElType="." desc="int ret;" rngLn="599">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="600" ElType="." desc="if (flag ==0)" rngLn="600">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="603" srcRngStartPos="0" srcRngEndLn="604" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="603" ElType="!" desc="ret=1;" rngLn="603">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="604" srcRngStartPos="0" srcRngEndLn="605" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="604" ElType="!" desc="return ret;" rngLn="604">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="628" srcRngStartPos="0" srcRngEndLn="629" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="628" ElType=".P" desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="628">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_017_func_001(...) == 0&quot; always evaluates to false" ln="637" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-817422996" lang="cpp" locType="sr" config="1" hash="-1950574767" locStartln="637" locStartPos="0" locEndLn="638" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" FirstElSrcRngStartln="625" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="626" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="625" ElType=".C" desc="void invalid_memory_access_017()" rngLn="625">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="627" ElType="." desc="int flag=10;" rngLn="627">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="628" srcRngStartPos="0" srcRngEndLn="629" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="628" ElType="." desc="invalid_memory_access_017_func_001(...)" rngLn="628">
          <ElDescList>
            <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="600" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="599" ElType="." desc="int ret;" rngLn="599">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="600" ElType="." desc="if (flag ==0)" rngLn="600">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="603" srcRngStartPos="0" srcRngEndLn="604" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="603" ElType="." desc="ret=1;" rngLn="603">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="604" srcRngStartPos="0" srcRngEndLn="605" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="604" ElType="." desc="return ret;" rngLn="604">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="628" srcRngStartPos="0" srcRngEndLn="629" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="628" ElType="." desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="628">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_017_func_001(...) == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="634" srcRngStartPos="0" srcRngEndLn="635" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="634" ElType="." desc="invalid_memory_access_017_func_002();" rngLn="634">
          <ElDescList>
            <ElDesc srcRngStartln="609" srcRngStartPos="0" srcRngEndLn="610" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="609" ElType="." desc="invalid_memory_access_017_doubleptr_gbl=(char*) malloc(10*sizeof(char));" rngLn="609">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="610" ElType="." desc="if(invalid_memory_access_017_doubleptr_gbl !=NULL)" rngLn="610">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (invalid_memory_access_017_doubleptr_gbl != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="637" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="637" ElType="!" desc="invalid_memory_access_017_func_001(...)" rngLn="637">
          <ElDescList>
            <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="600" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="599" ElType="." desc="int ret;" rngLn="599">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="600" srcRngStartPos="0" srcRngEndLn="601" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="600" ElType="." desc="if (flag ==0)" rngLn="600">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="603" srcRngStartPos="0" srcRngEndLn="604" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="603" ElType="!" desc="ret=1;" rngLn="603">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="604" srcRngStartPos="0" srcRngEndLn="605" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="604" ElType="!" desc="return ret;" rngLn="604">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="637" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="637" ElType=".P" desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="637">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void invalid_memory_access_main ( ) { if ( vflag == 1 ||...'" ln="662" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1950574767" NvActs="3" locStartln="662" locStartPos="0" locEndLn="749" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="662" srcRngStartPos="0" srcRngEndLn="749" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/invalid_memory_access.c" srcRnghash="-1950574767" ln="662" ElType="" desc="[Line 662] Duplicated function in file 'invalid_memory_access.c'" sourceRngHash="410240501">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="676" srcRngStartPos="0" srcRngEndLn="763" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="676" ElType="" desc="[Line 676] Duplicated function in file 'invalid_memory_access.c'" sourceRngHash="410240501">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void littlemem_st_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="359" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1137563220" NvActs="3" locStartln="359" locStartPos="0" locEndLn="414" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/littlemem_st.c">
      <ElDescList>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/littlemem_st.c" srcRnghash="-1137563220" ln="359" ElType="" desc="[Line 359] Duplicated function in file 'littlemem_st.c'" sourceRngHash="911549097">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/littlemem_st.c" srcRnghash="-247052797" ln="360" ElType="" desc="[Line 360] Duplicated function in file 'littlemem_st.c'" sourceRngHash="911549097">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <StdViol msg="Loop does not contain terminate point" ln="26" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1187823448" locStartln="26" locStartPos="1" locEndLn="26" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/livelock.c" />
    <FlowViol msg="Possible deadlock - acquiring locks &quot;livelock_001_glb_A&quot;, &quot;livelock_001_glb_B&quot; in different orders" ln="28" ruleSAFMsg="Point where the lock cycle is detected" auth="kali" sev="1" rule="BD-TRS-ORDER" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-838420100" lang="cpp" locType="sr" config="1" hash="-1187823448" locStartln="28" locStartPos="0" locEndLn="29" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/livelock.c" FirstElSrcRngStartln="45" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="46" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c">
      <Props />
      <ElDescList>
        <ElDesc ElType="!" desc="&quot;livelock_001_glb_B&quot;, &quot;livelock_001_glb_A&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="26" ElType="." desc="while(1)" rngLn="26">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="28" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_A);" rngLn="28">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="29" ElType="." desc="x=x+1;" rngLn="29">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="30" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_A);" rngLn="30">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="32" ElType="!" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_B); /*Tool should detect this line as error*/ /*ERROR: Live lock*/" rngLn="32">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;livelock_001_glb_B&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="33" ElType="." desc="if(status==0)" rngLn="33">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (status == 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="35" ElType="." desc="continue;" rngLn="35">
              <Props />
              <Anns>
                <Ann msg="Continue the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="26" ElType="." desc="while(1)" rngLn="26">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="28" ElType=".P" desc="pthread_mutex_lock(&amp;livelock_001_glb_A);" rngLn="28">
              <Props />
              <Anns>
                <Ann msg="Second lock - locking &quot;livelock_001_glb_A&quot;" kind="comment" />
                <Ann msg="Point where the lock cycle is detected" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc ElType="!" desc="&quot;livelock_001_glb_A&quot;, &quot;livelock_001_glb_B&quot;">
          <ElDescList>
            <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="43" ElType="." desc="while(1)" rngLn="43">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="45" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_B);" rngLn="45">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="46" ElType="." desc="y=y+1;" rngLn="46">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="47" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_B);" rngLn="47">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="49" ElType="!" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_A);" rngLn="49">
              <Props />
              <Anns>
                <Ann msg="First lock - locking &quot;livelock_001_glb_A&quot;" kind="comment" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="50" ElType="." desc="if(status==0)" rngLn="50">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (status == 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="52" ElType="." desc="continue;" rngLn="52">
              <Props />
              <Anns>
                <Ann msg="Continue the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="43" ElType="." desc="while(1)" rngLn="43">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="45" ElType=".C" desc="pthread_mutex_lock(&amp;livelock_001_glb_B);" rngLn="45">
              <Props />
              <Anns>
                <Ann msg="Point where the lock is acquired" kind="cause" />
                <Ann msg="Second lock - locking &quot;livelock_001_glb_B&quot;" kind="comment" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Lock acquired twice: livelock_001_glb_B" ln="32" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="393196913" lang="cpp" locType="sr" config="1" hash="-1187823448" locStartln="32" locStartPos="0" locEndLn="33" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/livelock.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="26" ElType="." desc="while(1)" rngLn="26">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="28" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_A);" rngLn="28">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="29" ElType="." desc="x=x+1;" rngLn="29">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="30" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_A);" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="32" ElType=".C" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_B); /*Tool should detect this line as error*/ /*ERROR: Live lock*/" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="livelock_001_glb_B" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: livelock_001_glb_B" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="33" ElType="." desc="if(status==0)" rngLn="33">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (status == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="35" ElType="." desc="continue;" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Continue the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="26" ElType="." desc="while(1)" rngLn="26">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="28" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_A);" rngLn="28">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="29" ElType="." desc="x=x+1;" rngLn="29">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="30" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_A);" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="32" ElType=".P" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_B); /*Tool should detect this line as error*/ /*ERROR: Live lock*/" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="livelock_001_glb_B" />
          </Props>
          <Anns>
            <Ann msg="Lock: livelock_001_glb_B" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="43" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-1187823448" locStartln="43" locStartPos="1" locEndLn="43" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/livelock.c" />
    <FlowViol msg="Lock acquired twice: livelock_001_glb_A" ln="49" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="2084284112" lang="cpp" locType="sr" config="1" hash="-1187823448" locStartln="49" locStartPos="0" locEndLn="50" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/livelock.c" FirstElSrcRngStartln="49" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="50" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="43" ElType="." desc="while(1)" rngLn="43">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="45" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_B);" rngLn="45">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="46" ElType="." desc="y=y+1;" rngLn="46">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="47" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_B);" rngLn="47">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="49" ElType=".C" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_A);" rngLn="49">
          <Props>
            <Prop key="Tracked variables" val="livelock_001_glb_A" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: livelock_001_glb_A" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="50" ElType="." desc="if(status==0)" rngLn="50">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (status == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="52" ElType="." desc="continue;" rngLn="52">
          <Props />
          <Anns>
            <Ann msg="Continue the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="43" ElType="." desc="while(1)" rngLn="43">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="45" ElType="." desc="pthread_mutex_lock(&amp;livelock_001_glb_B);" rngLn="45">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="46" ElType="." desc="y=y+1;" rngLn="46">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="47" ElType="." desc="pthread_mutex_unlock(&amp;livelock_001_glb_B);" rngLn="47">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/livelock.c" srcRnghash="-1187823448" ln="49" ElType=".P" desc="int status=pthread_mutex_trylock(&amp;livelock_001_glb_A);" rngLn="49">
          <Props>
            <Prop key="Tracked variables" val="livelock_001_glb_A" />
          </Props>
          <Anns>
            <Ann msg="Lock: livelock_001_glb_A" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_001_glb_mutex" ln="48" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-1492272681" lang="cpp" locType="sr" urgent="true" config="1" hash="1480940434" locStartln="48" locStartPos="0" locEndLn="49" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="40" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_001_glb_mutex);" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="41" ElType="." desc="lock_never_unlock_001_glb_data = (lock_never_unlock_001_glb_data % 100) + 1;" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="43" ElType="." desc="unsigned long ip = (unsigned long)pthread_self();" rngLn="43">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="44" ElType="." desc="printf(&quot;Task1! Lock Never Unlock, threadID# %lu! gbl1 = %d \n&quot;,ip ,lock_never_unlock_001_glb_data);" rngLn="44">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="47" ElType="." desc="return NULL;" rngLn="47">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="48" ElType=".P" desc="}" rngLn="48">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Lock acquired twice: lock_never_unlock_002_glb_mutex" ln="93" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="-613756145" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="93" locStartPos="0" locEndLn="94" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="90" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="91" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="90" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_002_glb_mutex);" rngLn="90">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_002_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: lock_never_unlock_002_glb_mutex" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="91" ElType="." desc="lock_never_unlock_002_glb_data = (lock_never_unlock_002_glb_data % 100) + 1;" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="93" ElType=".P" desc="pthread_mutex_lock(&amp;lock_never_unlock_002_glb_mutex);" rngLn="93">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_002_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Lock: lock_never_unlock_002_glb_mutex" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_002_glb_mutex" ln="103" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-1778668962" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="103" locStartPos="0" locEndLn="104" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="90" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="91" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="90" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_002_glb_mutex);" rngLn="90">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="91" ElType="." desc="lock_never_unlock_002_glb_data = (lock_never_unlock_002_glb_data % 100) + 1;" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="93" ElType="." desc="pthread_mutex_lock(&amp;lock_never_unlock_002_glb_mutex);" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="94" ElType="." desc="lock_never_unlock_002_glb_data = (lock_never_unlock_002_glb_data % 100) + 1;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="99" ElType="." desc="pthread_mutex_unlock(&amp;lock_never_unlock_002_glb_mutex);" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="102" ElType="." desc="return NULL;" rngLn="102">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="103" ElType=".P" desc="}" rngLn="103">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Lock acquired twice: lock_never_unlock_003_glb_mutex" ln="147" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="-2119046793" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="147" locStartPos="0" locEndLn="148" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="161" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="162" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="161" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_003_glb_mutex);" rngLn="161">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_003_glb_mutex" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: lock_never_unlock_003_glb_mutex" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="162" srcRngStartPos="0" srcRngEndLn="163" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="162" ElType="." desc="lock_never_unlock_003_glb_data = (lock_never_unlock_003_glb_data) + 3.5;" rngLn="162">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="163" ElType="!" desc="lock_never_unlock_003_func_001(pram);" rngLn="163">
          <ElDescList>
            <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="147" ElType=".P" desc="pthread_mutex_lock (&amp;lock_never_unlock_003_glb_mutex);" rngLn="147">
              <Props>
                <Prop key="Tracked variables" val="lock_never_unlock_003_glb_mutex" />
              </Props>
              <Anns>
                <Ann msg="Lock: lock_never_unlock_003_glb_mutex" kind="var" />
                <Ann msg="Point of the second lock acquisition" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_003_glb_mutex" ln="167" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="40079713" lang="cpp" locType="sr" urgent="true" config="1" hash="1480940434" locStartln="167" locStartPos="0" locEndLn="168" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="161" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="162" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="161" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_003_glb_mutex);" rngLn="161">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="162" srcRngStartPos="0" srcRngEndLn="163" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="162" ElType="." desc="lock_never_unlock_003_glb_data = (lock_never_unlock_003_glb_data) + 3.5;" rngLn="162">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="163" ElType="." desc="lock_never_unlock_003_func_001(pram);" rngLn="163">
          <ElDescList>
            <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="147" ElType="." desc="pthread_mutex_lock (&amp;lock_never_unlock_003_glb_mutex);" rngLn="147">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="148" ElType="." desc="lock_never_unlock_003_glb_data = (lock_never_unlock_003_glb_data) + 1.2;" rngLn="148">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="164" ElType="." desc="pthread_mutex_unlock(&amp;lock_never_unlock_003_glb_mutex);" rngLn="164">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="166" ElType="." desc="return NULL;" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="167" ElType=".P" desc="}" rngLn="167">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void lock_never_unlock_003 ( ) { # if ! defined (...'" ln="170" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="170" locStartPos="0" locEndLn="181" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="170" ElType="" desc="[Line 170] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-1074351576">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="173" ElType="" desc="[Line 173] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-1074351576">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_004_glb_mutex_1" ln="219" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1414997094" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="219" locStartPos="0" locEndLn="220" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="205" ElType="." desc="long ip;" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="207" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_004_glb_mutex_1 );" rngLn="207">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="208" ElType="." desc="ip = (long)input;" rngLn="208">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="209" ElType="." desc="ip = ip *10;" rngLn="209">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="214" ElType="." desc="if (ip &lt; 0)" rngLn="214">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip &lt; 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="218" ElType="." desc="return NULL;" rngLn="218">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="219" ElType=".P" desc="}" rngLn="219">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_005_glb_mutex" ln="271" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-340533053" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="271" locStartPos="0" locEndLn="272" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="263" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="264" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="263" ElType=".C" desc="pthread_mutex_lock(&amp;lock_never_unlock_005_glb_mutex);" rngLn="263">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="264" ElType="." desc="lock_never_unlock_005_glb_data = (lock_never_unlock_005_glb_data % 100) + 5;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="267" ElType="." desc="unsigned long ip = (unsigned long)pthread_self();" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="268" ElType="." desc="printf(&quot;Task5! Lock Never Unlock, threadID# %lu! gbl5 = %d \n&quot;,ip ,lock_never_unlock_005_glb_data);" rngLn="268">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="270" ElType="." desc="return NULL;" rngLn="270">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="271" ElType=".P" desc="}" rngLn="271">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_006_glb_mutex_1" ln="316" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-1612962906" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="316" locStartPos="0" locEndLn="317" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="304" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="305" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="302" srcRngStartPos="0" srcRngEndLn="303" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="302" ElType="." desc="long ip;" rngLn="302">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="305" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="304" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_006_glb_mutex_1 );" rngLn="304">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="305" srcRngStartPos="0" srcRngEndLn="306" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="305" ElType="." desc="ip = (long)input;" rngLn="305">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="306" srcRngStartPos="0" srcRngEndLn="307" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="306" ElType="." desc="ip = ip *10;" rngLn="306">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="311" srcRngStartPos="0" srcRngEndLn="312" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="311" ElType="." desc="if (ip &lt; 0) /*Tool should detect this line as error*/ /* ERROR:Lock Never Unlock */" rngLn="311">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip &lt; 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="315" srcRngStartPos="0" srcRngEndLn="316" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="315" ElType="." desc="return NULL;" rngLn="315">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="316" ElType=".P" desc="}" rngLn="316">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="342" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-206418876" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="342" locStartPos="0" locEndLn="343" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="335" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="336" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="335" srcRngStartPos="0" srcRngEndLn="336" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="335" ElType=".C" desc="void lock_never_unlock_006 ()" rngLn="335">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="337" ElType="!" desc="int thread_set = 0;" rngLn="337">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="339" ElType="." desc="pthread_t th1,th2;" rngLn="339">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="340" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="340" ElType="." desc="long int t1 = 10;" rngLn="340">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="341" srcRngStartPos="0" srcRngEndLn="342" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="341" ElType="." desc="long int t2 = 20;" rngLn="341">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="342" srcRngStartPos="0" srcRngEndLn="343" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="342" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="342">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * lock_never_unlock_007_tsk_001 ( void * input ) { # if...'" ln="363" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="363" locStartPos="0" locEndLn="385" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="363" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="363" ElType="" desc="[Line 363] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-1288396174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="365" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="365" ElType="" desc="[Line 365] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-302119136">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Lock acquired twice: lock_never_unlock_007_glb_mutex_2" ln="398" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="747295001" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="398" locStartPos="0" locEndLn="399" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="398" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="399" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="390" srcRngStartPos="0" srcRngEndLn="391" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="390" ElType="." desc="long ip;" rngLn="390">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="391" ElType="." desc="int i=5;" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="392" ElType="." desc="ip = (long)input;" rngLn="392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="393" ElType="." desc="ip = ip *20;" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="394" ElType="." desc="while (i>0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="396" ElType="." desc="if (ip >= 0)" rngLn="396">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="398" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_007_glb_mutex_2 );" rngLn="398">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_007_glb_mutex_2" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: lock_never_unlock_007_glb_mutex_2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="400" ElType="." desc="if(i!=5)" rngLn="400">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="406" ElType="." desc="i--;" rngLn="406">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="394" ElType="." desc="while (i>0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="396" ElType="." desc="if (ip >= 0)" rngLn="396">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="398" ElType=".P" desc="pthread_mutex_lock( &amp;lock_never_unlock_007_glb_mutex_2 );" rngLn="398">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_007_glb_mutex_2" />
          </Props>
          <Anns>
            <Ann msg="Lock: lock_never_unlock_007_glb_mutex_2" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_007_glb_mutex_2" ln="413" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1620863167" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="413" locStartPos="0" locEndLn="414" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="398" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="399" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="390" srcRngStartPos="0" srcRngEndLn="391" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="390" ElType="." desc="long ip;" rngLn="390">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="391" ElType="." desc="int i=5;" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="392" ElType="." desc="ip = (long)input;" rngLn="392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="393" ElType="." desc="ip = ip *20;" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="394" ElType="." desc="while (i>0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="396" ElType="." desc="if (ip >= 0)" rngLn="396">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="398" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_007_glb_mutex_2 );" rngLn="398">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="400" ElType="." desc="if(i!=5)" rngLn="400">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="406" ElType="." desc="i--;" rngLn="406">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="394" ElType="." desc="while (i>0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="396" ElType="." desc="if (ip >= 0)" rngLn="396">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="398" ElType="." desc="pthread_mutex_lock( &amp;lock_never_unlock_007_glb_mutex_2 );" rngLn="398">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="400" ElType="." desc="if(i!=5)" rngLn="400">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="402" ElType="." desc="lock_never_unlock_007_glb_var += 20;" rngLn="402">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="403" ElType="." desc="pthread_mutex_unlock( &amp;lock_never_unlock_007_glb_mutex_2 );/*Tool should detect this line as error*/ /* ERROR:Lock Never Unlock */" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="406" ElType="." desc="i--;" rngLn="406">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="394" ElType="." desc="while (i>0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="412" ElType="." desc="return NULL;" rngLn="412">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="413" ElType=".P" desc="}" rngLn="413">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * lock_never_unlock_008_tsk_001 ( void * input ) { # if...'" ln="441" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="441" locStartPos="0" locEndLn="462" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="462" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="441" ElType="" desc="[Line 441] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="912798344">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="442" ElType="" desc="[Line 442] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-109038263">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * lock_never_unlock_008_tsk_002 ( void * input ) { # if...'" ln="465" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="465" locStartPos="0" locEndLn="486" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="465" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="465" ElType="" desc="[Line 465] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-1223767301">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="466" srcRngStartPos="0" srcRngEndLn="487" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="466" ElType="" desc="[Line 466] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-1223767301">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="495" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-206418876" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="495" locStartPos="0" locEndLn="496" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="488" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="489" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="488" srcRngStartPos="0" srcRngEndLn="489" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="488" ElType=".C" desc="void lock_never_unlock_008 ()" rngLn="488">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="490" srcRngStartPos="0" srcRngEndLn="491" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="490" ElType="!" desc="int thread_set = 0;" rngLn="490">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="492" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="492" ElType="." desc="pthread_t th1,th2;" rngLn="492">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="493" ElType="." desc="long int t1 = 10;" rngLn="493">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="494" srcRngStartPos="0" srcRngEndLn="495" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="494" ElType="." desc="long int t2 = 20;" rngLn="494">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="495" srcRngStartPos="0" srcRngEndLn="496" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="495" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="495">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * lock_never_unlock_009_tsk_001 ( void * input ) { # if...'" ln="517" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="517" locStartPos="0" locEndLn="538" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="517" ElType="" desc="[Line 517] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="1728167704">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="539" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="518" ElType="" desc="[Line 518] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="1728167704">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * lock_never_unlock_009_tsk_002 ( void * input ) { # if...'" ln="541" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="541" locStartPos="0" locEndLn="566" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="541" srcRngStartPos="0" srcRngEndLn="566" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="541" ElType="" desc="[Line 541] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-2015954286">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="542" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="542" ElType="" desc="[Line 542] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="50772809">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Lock acquired twice: lock_never_unlock_009_glb_mutex_2" ln="551" ruleSAFMsg="Point of the second lock acquisition" auth="kali" sev="1" rule="BD-TRS-DLOCK" ruleSCSCMsg="Point of the first lock acquisition" tool="c++test" id="1792684710" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="551" locStartPos="0" locEndLn="552" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="551" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="552" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props>
        <Prop key="Tracked variables" val="Lock" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="543" ElType="." desc="long ip;" rngLn="543">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="544" ElType="." desc="int i=5;" rngLn="544">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="545" ElType="." desc="ip = (long)input;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="546" ElType="." desc="ip = ip *20;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="549" ElType="." desc="if (ip >= 0)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="551" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_009_glb_mutex_2 );" rngLn="551">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_009_glb_mutex_2" />
          </Props>
          <Anns>
            <Ann msg="Point of the first lock acquisition" kind="cause" />
            <Ann msg="Lock: lock_never_unlock_009_glb_mutex_2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="553" ElType="." desc="if(i!=5)" rngLn="553">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="559" ElType="." desc="i--;" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="560" ElType="." desc="} while (i>0);" rngLn="560">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="549" ElType="." desc="if (ip >= 0)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="551" ElType=".P" desc="pthread_mutex_lock( &amp;lock_never_unlock_009_glb_mutex_2 );" rngLn="551">
          <Props>
            <Prop key="Tracked variables" val="lock_never_unlock_009_glb_mutex_2" />
          </Props>
          <Anns>
            <Ann msg="Lock: lock_never_unlock_009_glb_mutex_2" kind="var" />
            <Ann msg="Point of the second lock acquisition" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_009_glb_mutex_2" ln="566" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-140117562" lang="cpp" locType="sr" config="1" hash="1480940434" locStartln="566" locStartPos="0" locEndLn="567" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" FirstElSrcRngStartln="551" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="552" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="543" ElType="." desc="long ip;" rngLn="543">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="544" ElType="." desc="int i=5;" rngLn="544">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="545" ElType="." desc="ip = (long)input;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="546" ElType="." desc="ip = ip *20;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="549" ElType="." desc="if (ip >= 0)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="551" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_009_glb_mutex_2 );" rngLn="551">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="553" ElType="." desc="if(i!=5)" rngLn="553">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="559" ElType="." desc="i--;" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="560" ElType="." desc="} while (i>0);" rngLn="560">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="549" ElType="." desc="if (ip >= 0)" rngLn="549">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="551" ElType="." desc="pthread_mutex_lock( &amp;lock_never_unlock_009_glb_mutex_2 );" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="553" ElType="." desc="if(i!=5)" rngLn="553">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i != 5) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="555" ElType="." desc="lock_never_unlock_009_glb_var += 20;" rngLn="555">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="556" ElType="." desc="pthread_mutex_unlock( &amp;lock_never_unlock_009_glb_mutex_2 );/*Tool should detect this line as error*/ /* ERROR:Lock Never Unlock */" rngLn="556">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="559" srcRngStartPos="0" srcRngEndLn="560" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="559" ElType="." desc="i--;" rngLn="559">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="560" ElType="." desc="} while (i>0);" rngLn="560">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="565" srcRngStartPos="0" srcRngEndLn="566" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="565" ElType="." desc="return NULL;" rngLn="565">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="566" ElType=".P" desc="}" rngLn="566">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void lock_never_unlock_main ( ) { if ( vflag == 1 || vflag ==...'" ln="588" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1480940434" NvActs="3" locStartln="588" locStartPos="0" locEndLn="633" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c">
      <ElDescList>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="633" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/lock_never_unlock.c" srcRnghash="1480940434" ln="588" ElType="" desc="[Line 588] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="-210042623">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="589" srcRngStartPos="0" srcRngEndLn="636" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="589" ElType="" desc="[Line 589] Duplicated function in file 'lock_never_unlock.c'" sourceRngHash="12392129">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <MetViol msg="Value 53 is out of acceptable range: 'lower than 30'" ln="17" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="-1803064676" locStartln="17" locStartPos="0" locEndLn="18" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/main.c" />
    <DupViol msg="Duplicated function: 'int main ( int argc , char * argv [ ] ) { if ( argv [ 1 ] ) {...'" ln="18" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1803064676" NvActs="3" locStartln="18" locStartPos="0" locEndLn="341" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/main.c">
      <ElDescList>
        <ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/main.c" srcRnghash="-1803064676" ln="18" ElType="" desc="[Line 18] Duplicated function in file 'main.c'" sourceRngHash="-316669159">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/main.c" srcRnghash="-1803064676" ln="18" ElType="" desc="[Line 18] Duplicated function in file 'main.c'" sourceRngHash="-316669159">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <StdViol msg="Loop does not contain terminate point" ln="40" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="40" locStartPos="1" locEndLn="40" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" />
    <FlowViol msg="Memory not deallocated: buf" ln="42" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1365952177" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="42" locStartPos="0" locEndLn="43" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="42" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="43" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="38" ElType="." desc="int i;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="39" ElType="." desc="long *buf;" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="40" ElType="." desc="for (i=0;;i++)" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="42" ElType=".C" desc="calloc(...)" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="42" ElType="!" desc="buf=(long*) calloc(5,sizeof(long));" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="43" ElType="." desc="if(buf !=NULL)" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="45" ElType="." desc="buf[1]=1;/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="45">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="40" ElType="." desc="for (i=0;;i++)" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="42" ElType=".P" desc="buf=(long*) calloc(5,sizeof(long));" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr[0]&quot; out of bounds at index 0" ln="60" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1386315676" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="60" locStartPos="0" locEndLn="61" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="54" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="55" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="54" ElType=".C" desc="void memory_allocation_failure_002 ()" rngLn="54">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="56" ElType="." desc="long long int i=0;" rngLn="56">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="57" ElType="!" desc="malloc(...)" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="57" ElType="!" desc="long long int *ptr=(long long*) malloc(MAX_VAL *sizeof(long long));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="58" ElType="." desc="if(ptr !=NULL)" rngLn="58">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="60" ElType=".P" desc="*(ptr+i) = i;" rngLn="60">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_003 ( ) { unsigned int * * ptr...'" ln="71" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="71" locStartPos="0" locEndLn="87" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="87" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="71" ElType="" desc="[Line 71] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-2131662354">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="73" ElType="" desc="[Line 73] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="1393306838">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-381699904" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="72" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="73" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="72" ElType=".C" desc="malloc(...)" rngLn="72">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="72" ElType="!" desc="unsigned int **ptr = (unsigned int**) malloc(MAX*sizeof(unsigned int*));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="73" ElType="." desc="unsigned int i,j;" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="74" ElType="." desc="if(ptr!=NULL)" rngLn="74">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="78" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="78">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="80" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="82" ElType=".P" desc="*(*(ptr+i)+j)=i;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-491026400" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="72" ElType="." desc="unsigned int **ptr = (unsigned int**) malloc(MAX*sizeof(unsigned int*));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="73" ElType="." desc="unsigned int i,j;" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="74" ElType=".C" desc="if(ptr!=NULL)" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="78" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="78">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="80" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="82" ElType=".P" desc="*(*(ptr+i)+j)=i;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr[i][0]&quot; out of bounds at index 0" ln="82" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1844960843" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="70" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="71" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="70" ElType=".C" desc="void memory_allocation_failure_003 ()" rngLn="70">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="72" ElType="." desc="unsigned int **ptr = (unsigned int**) malloc(MAX*sizeof(unsigned int*));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="73" ElType="." desc="unsigned int i,j;" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="74" ElType="." desc="if(ptr!=NULL)" rngLn="74">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="75" ElType="." desc="for(i=0;i&lt;MAX;i++)" rngLn="75">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="76" ElType="." desc="ptr[i]=(unsigned int*) malloc(MAX_VAL*sizeof(unsigned int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="75" ElType="." desc="for(i=0;i&lt;MAX;i++)" rngLn="75">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="76" ElType="!" desc="malloc(...)" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="76" ElType="!" desc="ptr[i]=(unsigned int*) malloc(MAX_VAL*sizeof(unsigned int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="75" ElType="." desc="for(i=0;i&lt;MAX;i++)" rngLn="75">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="78" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="78">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="80" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="82" ElType=".P" desc="*(*(ptr+i)+j)=i;" rngLn="82">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr[0]&quot; out of bounds at index 1" ln="107" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-994813874" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="107" locStartPos="0" locEndLn="108" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="102" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="103" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="102" ElType=".C" desc="void memory_allocation_failure_004 ()" rngLn="102">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="104" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="104" ElType="!" desc="memory_allocation_failure_004_func_001(...)" rngLn="104">
          <ElDescList>
            <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="95" ElType="." desc="int ret =0;" rngLn="95">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="96" ElType="." desc="if (flag ==0)" rngLn="96">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="97" ElType="!" desc="ret = MAX_VAL;" rngLn="97">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="100" ElType="!" desc="return ret;" rngLn="100">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="104" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="104" ElType="!" desc="malloc(...)" rngLn="104">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="104" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="104" ElType="!" desc="unsigned int *ptr = (unsigned int*) malloc(memory_allocation_failure_004_func_001(0)*sizeof(unsigned int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="104">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="105" ElType="." desc="if(ptr !=NULL)" rngLn="105">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="107" ElType=".P" desc="*(ptr+1) = 10;" rngLn="107">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'int memory_allocation_failure_005_func_001 ( int flag ) {...'" ln="118" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="118" locStartPos="0" locEndLn="145" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="118" ElType="" desc="[Line 118] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-2002549297">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="121" ElType="" desc="[Line 121] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="789889511">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_006_func_001(...) == 0&quot; always evaluates to true" ln="177" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1996163372" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="177" locStartPos="0" locEndLn="178" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="173" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="174" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="173" ElType=".C" desc="void memory_allocation_failure_006_func_002()" rngLn="173">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="175" ElType="." desc="int i;" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType="!" desc="memory_allocation_failure_006_func_001(...)" rngLn="177">
          <ElDescList>
            <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="165" ElType="." desc="int ret;" rngLn="165">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="166" ElType="." desc="if (flag ==0)" rngLn="166">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="167" ElType="!" desc="ret = 0;" rngLn="167">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="170" ElType="!" desc="return ret;" rngLn="170">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType=".P" desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_006_gbl_doubleptr&quot; may possibly be null" ln="182" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-586825671" lang="cpp" locType="sr" urgent="true" config="1" hash="267710189" locStartln="182" locStartPos="0" locEndLn="183" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="179" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="180" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="175" ElType="." desc="int i;" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType="." desc="memory_allocation_failure_006_func_001(...)" rngLn="177">
          <ElDescList>
            <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="165" ElType="." desc="int ret;" rngLn="165">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="166" ElType="." desc="if (flag ==0)" rngLn="166">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="167" ElType="." desc="ret = 0;" rngLn="167">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="170" ElType="." desc="return ret;" rngLn="170">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType="." desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_allocation_failure_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="179" ElType=".C" desc="malloc(...)" rngLn="179">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="179" ElType="!" desc="memory_allocation_failure_006_gbl_doubleptr=(int**) malloc(10*sizeof(int*));" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="180" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="180">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="182" ElType=".P" desc="memory_allocation_failure_006_gbl_doubleptr[i]=(int*) malloc(MAX_10*sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="182">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_006_gbl_doubleptr[0]&quot; may possibly be null" ln="183" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-966653173" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="183" locStartPos="0" locEndLn="184" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="182" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="183" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="175" ElType="." desc="int i;" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType="." desc="memory_allocation_failure_006_func_001(...)" rngLn="177">
          <ElDescList>
            <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="165" ElType="." desc="int ret;" rngLn="165">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="166" ElType="." desc="if (flag ==0)" rngLn="166">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="167" ElType="." desc="ret = 0;" rngLn="167">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="170" ElType="." desc="return ret;" rngLn="170">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="177" ElType="." desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_allocation_failure_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="179" ElType="." desc="memory_allocation_failure_006_gbl_doubleptr=(int**) malloc(10*sizeof(int*));" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="180" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="182" ElType=".C" desc="malloc(...)" rngLn="182">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="182" ElType="!" desc="memory_allocation_failure_006_gbl_doubleptr[i]=(int*) malloc(MAX_10*sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="183" ElType=".P" desc="memory_allocation_failure_006_gbl_doubleptr[i][0] =10;" rngLn="183">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_006 ( ) { int flag = 0 , i ;...'" ln="189" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="189" locStartPos="0" locEndLn="209" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="189" ElType="" desc="[Line 189] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="879059331">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="192" ElType="" desc="[Line 192] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="879059331">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_006_func_001(...) == 0&quot; always evaluates to true" ln="192" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1818939265" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="192" locStartPos="0" locEndLn="193" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="188" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="189" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="188" ElType=".C" desc="void memory_allocation_failure_006()" rngLn="188">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="190" ElType="." desc="int flag=0,i;" rngLn="190">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="192" ElType="!" desc="memory_allocation_failure_006_func_001(...)" rngLn="192">
          <ElDescList>
            <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="165" ElType="." desc="int ret;" rngLn="165">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="166" ElType="." desc="if (flag ==0)" rngLn="166">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="167" ElType="!" desc="ret = 0;" rngLn="167">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="170" ElType="!" desc="return ret;" rngLn="170">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="192" ElType=".P" desc="if(memory_allocation_failure_006_func_001(flag)==0)" rngLn="192">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_allocation_failure_007_str_gbl" ln="220" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-114495065" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="220" locStartPos="0" locEndLn="221" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="220" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="221" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="235" ElType="." desc="int j;" rngLn="235">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="236" ElType="." desc="char buf[][25]={&quot;This is a String&quot;," rngLn="236">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="238" ElType="." desc="for(j = 0; j &lt;= 1; j++)" rngLn="238">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt;= 1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="240" ElType="." desc="if(buf[j]!= NULL)" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf[j] != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="242" ElType="!" desc="memory_allocation_failure_007_str_gbl = memory_allocation_failure_007_func_001(buf[j]);" rngLn="242">
          <ElDescList>
            <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="218" ElType="." desc="int j;" rngLn="218">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="219" ElType="." desc="if (str1 != NULL) {" rngLn="219">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (str1 != 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="220" ElType=".C" desc="malloc(...)" rngLn="220">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="220" ElType="!" desc="memory_allocation_failure_007_str_gbl = (char *) malloc(static_var+1);/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="220">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="221" ElType="." desc="if(memory_allocation_failure_007_str_gbl!=NULL) {" rngLn="221">
              <Props>
                <Prop key="Tracked variables" val="memory_allocation_failure_007_str_gbl" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: memory_allocation_failure_007_str_gbl" kind="var" />
                <Ann msg="Condition evaluation: (memory_allocation_failure_007_str_gbl != 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="222" ElType="." desc="for (j = 0; j &lt; static_var; j++) {" rngLn="222">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (j &lt; static_var) (assuming false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="225" srcRngStartPos="0" srcRngEndLn="226" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="225" ElType="." desc="memory_allocation_failure_007_str_gbl[static_var] = '\0';" rngLn="225">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="227" ElType="!" desc="return memory_allocation_failure_007_str_gbl;" rngLn="227">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="238" ElType="." desc="for(j = 0; j &lt;= 1; j++)" rngLn="238">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_007_str_gbl" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_007_str_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt;= 1) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="240" ElType="." desc="if(buf[j]!= NULL)" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf[j] != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="242" ElType="!" desc="memory_allocation_failure_007_str_gbl = memory_allocation_failure_007_func_001(buf[j]);" rngLn="242">
          <ElDescList>
            <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="218" ElType="." desc="int j;" rngLn="218">
              <Props>
                <Prop key="Tracked variables" val="memory_allocation_failure_007_str_gbl" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: memory_allocation_failure_007_str_gbl" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="219" ElType="." desc="if (str1 != NULL) {" rngLn="219">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (str1 != 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="220" ElType=".P" desc="memory_allocation_failure_007_str_gbl = (char *) malloc(static_var+1);/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="220">
              <Props>
                <Prop key="Tracked variables" val="memory_allocation_failure_007_str_gbl" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: memory_allocation_failure_007_str_gbl" kind="var" />
                <Ann msg="Point where allocated memory is lost" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(unsigned int)i &lt; 4294967294&quot; always evaluates to true" ln="256" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1599568564" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="256" locStartPos="0" locEndLn="257" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="252" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="253" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="252" ElType=".C" desc="char * memory_allocation_failure_008_func_001 (const char *msg) {" rngLn="252">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="253" ElType="." desc="const char *error_log = msg;" rngLn="253">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="254" ElType="." desc="char * buffer = 0;" rngLn="254">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="255" ElType="." desc="int i;" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="256" ElType=".P" desc="for(i=0;i&lt;max_buffer;i++)" rngLn="256">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Overflow when writing to buffer &quot;buffer&quot; (char[1], 1 bytes large). Number of bytes written = -2" ln="262" ruleSAFMsg="Point where the buffer overflow occurs" auth="kali" sev="1" rule="BD-PB-OVERFWR" ruleSCSCMsg="Point where number of elements to write is defined" tool="c++test" id="1998309728" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="262" locStartPos="0" locEndLn="263" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="262" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="263" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="253" ElType="." desc="const char *error_log = msg;" rngLn="253">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="254" ElType="." desc="char * buffer = 0;" rngLn="254">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="255" ElType="." desc="int i;" rngLn="255">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="256" ElType="." desc="for(i=0;i&lt;max_buffer;i++)" rngLn="256">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 4294967294) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="258" ElType="." desc="buffer = (char*) malloc(max_buffer * sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="258">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="259" ElType="." desc="break;" rngLn="259">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="261" ElType="." desc="if(buffer!=NULL)" rngLn="261">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buffer != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="262" ElType="CP" desc="snprintf(buffer, max_buffer * sizeof(char), &quot;Error: %s&quot;, error_log);" rngLn="262">
          <Props />
          <Anns>
            <Ann msg="Point where number of elements to write is defined" kind="cause" />
            <Ann msg="Point where the buffer overflow occurs" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_allocation_failure_008_func_001(...)" ln="269" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-984006789" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="269" locStartPos="0" locEndLn="270" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="258" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="259" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="267" ElType="." desc="char *str = &quot;STRINGMEM&quot;;" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="268" ElType="!" desc="memory_allocation_failure_008_func_001(str);" rngLn="268">
          <ElDescList>
            <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="253" ElType="." desc="const char *error_log = msg;" rngLn="253">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="254" ElType="." desc="char * buffer = 0;" rngLn="254">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="255" ElType="." desc="int i;" rngLn="255">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="256" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="256" ElType="." desc="for(i=0;i&lt;max_buffer;i++)" rngLn="256">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 4294967294) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="258" ElType=".C" desc="malloc(...)" rngLn="258">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="258" ElType="!" desc="buffer = (char*) malloc(max_buffer * sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="258">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="259" ElType="." desc="break;" rngLn="259">
              <Props>
                <Prop key="Tracked variables" val="buffer" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: buffer" kind="var" />
                <Ann msg="Exit the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="261" ElType="." desc="if(buffer!=NULL)" rngLn="261">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (buffer != 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="262" ElType="." desc="snprintf(buffer, max_buffer * sizeof(char), &quot;Error: %s&quot;, error_log);" rngLn="262">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="263" ElType="!" desc="return buffer;" rngLn="263">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="269" srcRngStartPos="0" srcRngEndLn="270" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="269" ElType=".P" desc="}" rngLn="269">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_008_func_001(...)" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_008_func_001(...)" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf" ln="282" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1283322112" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="282" locStartPos="0" locEndLn="283" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="282" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="283" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="279" ElType="." desc="int i=0;" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="282" srcRngStartPos="0" srcRngEndLn="283" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="282" ElType=".C" desc="malloc(...)" rngLn="282">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="282" srcRngStartPos="0" srcRngEndLn="283" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="282" ElType="!" desc="buf = (char*) malloc(MAX_BUFFER * sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="282">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="283" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="283" ElType="." desc="i++;" rngLn="283">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="284" srcRngStartPos="0" srcRngEndLn="285" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="284" ElType="." desc="}while (i&lt;MAX_VAL);" rngLn="284">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 4294967295) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="282" srcRngStartPos="0" srcRngEndLn="283" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="282" ElType=".P" desc="buf = (char*) malloc(MAX_BUFFER * sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="282">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_allocation_failure_010_arr_gbl" ln="321" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1827558471" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="321" locStartPos="0" locEndLn="322" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="321" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="322" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="316" ElType="." desc="int i=0;" rngLn="316">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="317" ElType="." desc="if (devno &lt;= NDEVS)" rngLn="317">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (devno &lt;= 4) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="321" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="321" ElType=".C" desc="malloc(...)" rngLn="321">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="321" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="321" ElType="!" desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="321">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="322" srcRngStartPos="0" srcRngEndLn="323" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="322" ElType="." desc="i++;" rngLn="322">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_010_arr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_010_arr_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="323" srcRngStartPos="0" srcRngEndLn="324" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="323" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="323">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 4294967295) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="321" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="321" ElType=".P" desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="321">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_010_arr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_010_arr_gbl" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(unsigned int)i &lt;= 4294967295&quot; always evaluates to true" ln="323" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-961593679" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="323" locStartPos="0" locEndLn="324" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="314" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="315" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="314" ElType=".C" desc="void memory_allocation_failure_010_func_001(int devno)" rngLn="314">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="316" ElType="!" desc="int i=0;" rngLn="316">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="317" ElType="." desc="if (devno &lt;= NDEVS)" rngLn="317">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (devno &lt;= 4) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="321" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="321" ElType="." desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="321">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="322" srcRngStartPos="0" srcRngEndLn="323" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="322" ElType="!" desc="i++;" rngLn="322">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="323" srcRngStartPos="0" srcRngEndLn="324" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="323" ElType=".P" desc="}while( i&lt;=MAX_VAL);" rngLn="323">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1&quot; may possibly be null" ln="386" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2119218538" lang="cpp" locType="sr" urgent="true" config="1" hash="267710189" locStartln="386" locStartPos="0" locEndLn="387" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="385" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="386" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="385">
          <ElDescList>
            <ElDesc srcRngStartln="375" srcRngStartPos="0" srcRngEndLn="376" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="375" ElType="." desc="int ret =0;" rngLn="375">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="376" ElType="." desc="if (flag ==0)" rngLn="376">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="377" ElType="." desc="ret = MAX_VAL;" rngLn="377">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="380" ElType="." desc="return ret;" rngLn="380">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType=".C" desc="malloc(...)" rngLn="385">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="!" desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(0)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="386" ElType=".P" desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="386">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1->s1&quot; may possibly be null" ln="387" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-587492925" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="387" locStartPos="0" locEndLn="388" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="386" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="387" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="385">
          <ElDescList>
            <ElDesc srcRngStartln="375" srcRngStartPos="0" srcRngEndLn="376" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="375" ElType="." desc="int ret =0;" rngLn="375">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="376" ElType="." desc="if (flag ==0)" rngLn="376">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="377" ElType="." desc="ret = MAX_VAL;" rngLn="377">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="380" ElType="." desc="return ret;" rngLn="380">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="." desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(0)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="386" ElType=".C" desc="malloc(...)" rngLn="386">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="386" ElType="!" desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="387" ElType=".P" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="387">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1&quot; is checked for null after being dereferenced" ln="394" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-179562349" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="394" locStartPos="0" locEndLn="395" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="387" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="388" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="392" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="392">
          <ElDescList>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="387" ElType=".C" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="387">
              <Props>
                <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1 != null" />
              </Props>
              <Anns>
                <Ann msg="Point of dereferencing" kind="cause" />
                <Ann msg="Important values: memory_allocation_failure_011_gbl_u1 != null" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="394" ElType=".P" desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="394">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1 != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: memory_allocation_failure_011_gbl_u1 != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_011_gbl_u1 != 0&quot; always evaluates to true" ln="394" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="838572366" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="394" locStartPos="0" locEndLn="395" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="389" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="390" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="389" ElType=".C" desc="void memory_allocation_failure_011 ()" rngLn="389">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="391" ElType="." desc="memory_allocation_failure_011_uni_001 *p =NULL;" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="392" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="392">
          <ElDescList>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="!" desc="memory_allocation_failure_011_func_001(...)" rngLn="385">
              <ElDescList>
                <ElDesc srcRngStartln="375" srcRngStartPos="0" srcRngEndLn="376" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="375" ElType="." desc="int ret =0;" rngLn="375">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="376" ElType="." desc="if (flag ==0)" rngLn="376">
                  <Props />
                  <Anns>
                    <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="377" ElType="!" desc="ret = MAX_VAL;" rngLn="377">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="380" ElType="!" desc="return ret;" rngLn="380">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="!" desc="malloc(...)" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="!" desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(0)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="386" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="386">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="387" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="387">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="394" ElType=".P" desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a&quot; may possibly be null" ln="397" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-544381854" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="397" locStartPos="0" locEndLn="398" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="387" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="388" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="391" ElType="." desc="memory_allocation_failure_011_uni_001 *p =NULL;" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="392" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="392">
          <ElDescList>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="385">
              <ElDescList>
                <ElDesc srcRngStartln="375" srcRngStartPos="0" srcRngEndLn="376" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="375" ElType="." desc="int ret =0;" rngLn="375">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="376" ElType="." desc="if (flag ==0)" rngLn="376">
                  <Props />
                  <Anns>
                    <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="377" ElType="." desc="ret = MAX_VAL;" rngLn="377">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="380" ElType="." desc="return ret;" rngLn="380">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="385" ElType="." desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(0)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="386" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="386">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="387" ElType=".C" desc="calloc(...)" rngLn="387">
              <Props>
                <Prop key="Tracked variables" val="calloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: calloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="387" ElType="!" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="387">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="394" ElType="." desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="394">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1->a" kind="var" />
            <Ann msg="Condition evaluation: (memory_allocation_failure_011_gbl_u1 != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="396" ElType="!" desc="p = memory_allocation_failure_011_gbl_u1;" rngLn="396">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="397" ElType=".P" desc="p->s1->a[1] = 10;" rngLn="397">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_012_func_002 ( int * pbuf [ ]...'" ln="421" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="421" locStartPos="0" locEndLn="435" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="421" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="421" ElType="" desc="[Line 421] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-1524536125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="430" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="430" ElType="" desc="[Line 430] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-696271204">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Negative value (-1) passed to function &quot;calloc&quot;" ln="423" ruleSAFMsg="Point of the negative value being passed to a function" auth="kali" sev="1" rule="BD-API-NEGPARAM" ruleSCSCMsg="Source of the negative value" tool="c++test" id="-1949553427" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="423" locStartPos="0" locEndLn="424" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="414" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="415" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Argument passed to the function" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="422" ElType="." desc="int buf1[5] = {1,2,3,4,5};" rngLn="422">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="423" ElType="!" desc="memory_allocation_failure_012_func_001(...)" rngLn="423">
          <ElDescList>
            <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="412" ElType="." desc="int ret =0;" rngLn="412">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="413" ElType="." desc="if (flag ==0)" rngLn="413">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="414" ElType=".C" desc="ret = MAX_VAL;" rngLn="414">
              <Props>
                <Prop key="Tracked variables" val="ret == -1" />
              </Props>
              <Anns>
                <Ann msg="Source of the negative value" kind="cause" />
                <Ann msg="Argument passed to the function: ret == -1" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="417" ElType="!" desc="return ret;" rngLn="417">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="423" ElType=".P" desc="memory_allocation_failure_012_buf2_gbl = (int *) calloc (memory_allocation_failure_012_func_001(0),sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="423">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_012_func_001(...) == -1" />
          </Props>
          <Anns>
            <Ann msg="Argument passed to the function: memory_allocation_failure_012_func_001(...) == -1" kind="var" />
            <Ann msg="Point of the negative value being passed to a function" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;pbuf[1]&quot; may possibly be null" ln="433" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="218541647" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="433" locStartPos="0" locEndLn="434" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="423" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="424" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="422" ElType="." desc="int buf1[5] = {1,2,3,4,5};" rngLn="422">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="423" ElType="." desc="memory_allocation_failure_012_func_001(...)" rngLn="423">
          <ElDescList>
            <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="412" ElType="." desc="int ret =0;" rngLn="412">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="413" ElType="." desc="if (flag ==0)" rngLn="413">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="414" ElType="." desc="ret = MAX_VAL;" rngLn="414">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="417" ElType="." desc="return ret;" rngLn="417">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="423" ElType=".C" desc="calloc(...)" rngLn="423">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="423" ElType="!" desc="memory_allocation_failure_012_buf2_gbl = (int *) calloc (memory_allocation_failure_012_func_001(0),sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="423">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="424" ElType="." desc="int buf3[5] = {1,2,3,4,5};" rngLn="424">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_012_buf2_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_012_buf2_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="425" ElType="." desc="int buf4[5] = {1,2,3,4,5};" rngLn="425">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="426" srcRngStartPos="0" srcRngEndLn="427" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="426" ElType="." desc="int buf5[5] = {1,2,3,4,5};" rngLn="426">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="427" srcRngStartPos="0" srcRngEndLn="428" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="427" ElType="." desc="pbuf[0] = buf1;" rngLn="427">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="428" srcRngStartPos="0" srcRngEndLn="429" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="428" ElType="!" desc="pbuf[1] = memory_allocation_failure_012_buf2_gbl;" rngLn="428">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="429" srcRngStartPos="0" srcRngEndLn="430" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="429" ElType="." desc="pbuf[2] = buf3;" rngLn="429">
          <Props>
            <Prop key="Tracked variables" val="pbuf[1]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: pbuf[1]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="430" srcRngStartPos="0" srcRngEndLn="431" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="430" ElType="." desc="pbuf[3] = buf4;" rngLn="430">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="431" ElType="." desc="pbuf[4] = buf5;" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="432" ElType="." desc="int ret;" rngLn="432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="433" ElType=".P" desc="ret = pbuf[1][1];" rngLn="433">
          <Props>
            <Prop key="Tracked variables" val="pbuf[1]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: pbuf[1]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_012 ( ) { int * ptr [ 5 ] , a...'" ln="438" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="438" locStartPos="0" locEndLn="452" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="438" ElType="" desc="[Line 438] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="679067593">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="461" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="447" ElType="" desc="[Line 447] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="679067593">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="442" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1051397881" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="442" locStartPos="0" locEndLn="443" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="437" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="438" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="437" ElType=".C" desc="void memory_allocation_failure_012 ()" rngLn="437">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="439" ElType="." desc="int *ptr[5], a;" rngLn="439">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="440" ElType="!" desc="int flag=10;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="442" ElType=".P" desc="(flag == 10)? (memory_allocation_failure_012_func_002(ptr)) : ( a =20);" rngLn="442">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="487" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1087222400" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="487" locStartPos="0" locEndLn="488" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="482" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="483" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="471" ElType="." desc="char **dptr,a;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="472" ElType="." desc="double *ptr,b = 0.0;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="473" ElType="." desc="int i;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="476" srcRngStartPos="0" srcRngEndLn="477" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="476" ElType="." desc="if (staticflag == 10)" rngLn="476">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="482" srcRngStartPos="0" srcRngEndLn="483" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="482" ElType=".C" desc="malloc(...)" rngLn="482">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="482" srcRngStartPos="0" srcRngEndLn="483" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="482" ElType="!" desc="dptr=(char**) malloc(10*sizeof(char*));" rngLn="482">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="483" srcRngStartPos="0" srcRngEndLn="484" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="483" ElType="." desc="if(1)" rngLn="483">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="485" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="485" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="485">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="487" ElType="." desc="memory_allocation_failure_013_func_001(...)" rngLn="487">
          <ElDescList>
            <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="462" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="461" ElType="." desc="int ret =0;" rngLn="461">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="462" srcRngStartPos="0" srcRngEndLn="463" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="462" ElType="." desc="if (flag ==0)" rngLn="462">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="463" srcRngStartPos="0" srcRngEndLn="464" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="463" ElType="." desc="ret = MAX_VAL;" rngLn="463">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="466" srcRngStartPos="0" srcRngEndLn="467" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="466" ElType="." desc="return ret;" rngLn="466">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="487" ElType=".P" desc="dptr[i]=(char*) malloc(memory_allocation_failure_013_func_001(0)*sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="487">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="493" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1518138956" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="493" locStartPos="0" locEndLn="494" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="478" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="479" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="471" ElType="." desc="char **dptr,a;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="472" ElType="." desc="double *ptr,b = 0.0;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="473" ElType="." desc="int i;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="476" srcRngStartPos="0" srcRngEndLn="477" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="476" ElType="." desc="if (staticflag == 10)" rngLn="476">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="478" ElType=".C" desc="malloc(...)" rngLn="478">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="478" ElType="!" desc="ptr= (double*) malloc(10*sizeof(double));" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="492" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="492" ElType="." desc="if (staticflag == 10)" rngLn="492">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="493" ElType=".P" desc="(*(ptr+1) = 10.5);" rngLn="493">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;a&quot; is used prior to initialization" ln="514" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="576577120" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="514" locStartPos="0" locEndLn="515" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="471" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="472" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="471" ElType=".C" desc="char **dptr,a;" rngLn="471">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="472" ElType="." desc="double *ptr,b = 0.0;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="473" ElType="." desc="int i;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="476" srcRngStartPos="0" srcRngEndLn="477" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="476" ElType="." desc="if (staticflag == 10)" rngLn="476">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="478" ElType="." desc="ptr= (double*) malloc(10*sizeof(double));" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="492" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="492" ElType="." desc="if (staticflag == 10)" rngLn="492">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="493" ElType="." desc="(*(ptr+1) = 10.5);" rngLn="493">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="497" srcRngStartPos="0" srcRngEndLn="498" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="497" ElType="." desc="if(staticflag == 10)" rngLn="497">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="498" srcRngStartPos="0" srcRngEndLn="499" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="498" ElType="." desc="b = *(ptr+1);" rngLn="498">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="502" ElType="." desc="if(staticflag == 10)" rngLn="502">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="505" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="504" ElType="." desc="free(ptr);" rngLn="504">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="505" ElType="." desc="ptr = NULL;" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="514" ElType=".P" desc="printf(&quot;%d&quot;,a);" rngLn="514">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: a" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Overflow when writing to buffer &quot;p&quot; (int[4][0], 0 bytes large). Number of bytes written = 64" ln="535" ruleSAFMsg="Point where the buffer overflow occurs" auth="kali" sev="1" rule="BD-PB-OVERFWR" ruleSCSCMsg="Point where number of elements to write is defined" tool="c++test" id="820992837" lang="cpp" locType="sr" urgent="true" config="1" hash="267710189" locStartln="535" locStartPos="0" locEndLn="536" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="535" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="536" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="526" ElType="." desc="int (*p)[4];" rngLn="526">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="527" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="527" ElType="." desc="int arr[4][4] = {{1,2,3,4}," rngLn="527">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="531" srcRngStartPos="0" srcRngEndLn="532" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="531" ElType="." desc="int i,j;" rngLn="531">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="532" ElType="." desc="p= (int (*)[]) malloc (arr_value[1] *1 );/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="532">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="533" srcRngStartPos="0" srcRngEndLn="534" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="533" ElType="." desc="if(p!=NULL)" rngLn="533">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (p != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="535" srcRngStartPos="0" srcRngEndLn="536" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="535" ElType="CP" desc="memcpy(p, arr, sizeof(arr));" rngLn="535">
          <Props />
          <Anns>
            <Ann msg="Point where number of elements to write is defined" kind="cause" />
            <Ann msg="Point where the buffer overflow occurs" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_014 ( ) { int ( * ptr1 ) [ 4 ]...'" ln="548" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="548" locStartPos="0" locEndLn="620" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="620" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="548" ElType="" desc="[Line 548] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-620273810">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="565" srcRngStartPos="0" srcRngEndLn="637" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="565" ElType="" desc="[Line 565] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="760260799">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="565" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1478189535" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="565" locStartPos="0" locEndLn="566" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="560" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="561" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="549" ElType="." desc="int (*ptr1)[4];" rngLn="549">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="550" ElType="." desc="char **dptr,a = 0;" rngLn="550">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="551" ElType="." desc="double *ptr,b;" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="552" ElType="." desc="int i,j;" rngLn="552">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="554" ElType="." desc="if (staticflag == 10)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="560" ElType=".C" desc="malloc(...)" rngLn="560">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="560" ElType="!" desc="dptr=(char**) malloc(10*sizeof(char*));" rngLn="560">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="561" ElType="." desc="if(1)" rngLn="561">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="563" srcRngStartPos="0" srcRngEndLn="564" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="563" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="563">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="565" srcRngStartPos="0" srcRngEndLn="566" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="565" ElType=".P" desc="dptr[i]=(char*) malloc(10*sizeof(char));" rngLn="565">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="573" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="980691672" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="573" locStartPos="0" locEndLn="574" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="556" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="557" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="549" ElType="." desc="int (*ptr1)[4];" rngLn="549">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="550" ElType="." desc="char **dptr,a = 0;" rngLn="550">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="551" ElType="." desc="double *ptr,b;" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="552" ElType="." desc="int i,j;" rngLn="552">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="554" ElType="." desc="if (staticflag == 10)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="556" ElType=".C" desc="malloc(...)" rngLn="556">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="556" ElType="!" desc="ptr= (double*) malloc(10*sizeof(double));" rngLn="556">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="571" srcRngStartPos="0" srcRngEndLn="572" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="571" ElType="." desc="if (staticflag == 10)" rngLn="571">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="573" ElType=".P" desc="(*(ptr+1) = 10.5);" rngLn="573">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="654" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="654" locStartPos="0" locEndLn="655" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="645" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="646" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="645" srcRngStartPos="0" srcRngEndLn="646" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="645" ElType=".C" desc="int memory_allocation_failure_015_func_003 (int flag)" rngLn="645">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="647" srcRngStartPos="0" srcRngEndLn="648" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="647" ElType="." desc="int ret = 0;" rngLn="647">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="648" ElType="!" desc="if (flag == 1)" rngLn="648">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="650" srcRngStartPos="0" srcRngEndLn="651" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="650" ElType="." desc="goto my_label;" rngLn="650">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="653" srcRngStartPos="0" srcRngEndLn="654" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="653" ElType="." desc="my_label:" rngLn="653">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="654" srcRngStartPos="0" srcRngEndLn="655" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="654" ElType=".P" desc="if (flag == 1)" rngLn="654">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_015_gbl_ptr&quot; may possibly be null" ln="658" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-942949287" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="658" locStartPos="0" locEndLn="659" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="642" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="643" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="647" srcRngStartPos="0" srcRngEndLn="648" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="647" ElType="." desc="int ret = 0;" rngLn="647">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="648" ElType="." desc="if (flag == 1)" rngLn="648">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="650" srcRngStartPos="0" srcRngEndLn="651" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="650" ElType="." desc="goto my_label;" rngLn="650">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="653" srcRngStartPos="0" srcRngEndLn="654" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="653" ElType="." desc="my_label:" rngLn="653">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="654" srcRngStartPos="0" srcRngEndLn="655" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="654" ElType="." desc="if (flag == 1)" rngLn="654">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="656" srcRngStartPos="0" srcRngEndLn="657" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="656" ElType="!" desc="memory_allocation_failure_015_func_002();" rngLn="656">
          <ElDescList>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType="." desc="memory_allocation_failure_015_func_001()" rngLn="642">
              <ElDescList>
                <ElDesc srcRngStartln="636" srcRngStartPos="0" srcRngEndLn="637" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="636" ElType="." desc="memory_allocation_failure_015_s_001 s = {MAX_V,20};" rngLn="636">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="637" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="637" ElType="." desc="return s.a;" rngLn="637">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType=".C" desc="malloc(...)" rngLn="642">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType="!" desc="memory_allocation_failure_015_gbl_ptr = (int *) malloc (memory_allocation_failure_015_func_001()*sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="642">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="658" srcRngStartPos="0" srcRngEndLn="659" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="658" ElType=".P" desc="*(memory_allocation_failure_015_gbl_ptr+1) = 7;" rngLn="658">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;memory_allocation_failure_015_gbl_ptr[0]&quot; out of bounds at index 1" ln="658" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-844152688" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="658" locStartPos="0" locEndLn="659" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="645" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="646" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="645" srcRngStartPos="0" srcRngEndLn="646" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="645" ElType=".C" desc="int memory_allocation_failure_015_func_003 (int flag)" rngLn="645">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="647" srcRngStartPos="0" srcRngEndLn="648" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="647" ElType="." desc="int ret = 0;" rngLn="647">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="648" ElType="." desc="if (flag == 1)" rngLn="648">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="650" srcRngStartPos="0" srcRngEndLn="651" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="650" ElType="." desc="goto my_label;" rngLn="650">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="653" srcRngStartPos="0" srcRngEndLn="654" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="653" ElType="." desc="my_label:" rngLn="653">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="654" srcRngStartPos="0" srcRngEndLn="655" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="654" ElType="." desc="if (flag == 1)" rngLn="654">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="656" srcRngStartPos="0" srcRngEndLn="657" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="656" ElType="!" desc="memory_allocation_failure_015_func_002();" rngLn="656">
          <ElDescList>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType="!" desc="memory_allocation_failure_015_func_001()" rngLn="642">
              <ElDescList>
                <ElDesc srcRngStartln="636" srcRngStartPos="0" srcRngEndLn="637" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="636" ElType="." desc="memory_allocation_failure_015_s_001 s = {MAX_V,20};" rngLn="636">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="637" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="637" ElType="!" desc="return s.a;" rngLn="637">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType="!" desc="malloc(...)" rngLn="642">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="642" ElType="!" desc="memory_allocation_failure_015_gbl_ptr = (int *) malloc (memory_allocation_failure_015_func_001()*sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory allocation failure */" rngLn="642">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="658" srcRngStartPos="0" srcRngEndLn="659" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="658" ElType=".P" desc="*(memory_allocation_failure_015_gbl_ptr+1) = 7;" rngLn="658">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr1&quot; may possibly be null" ln="707" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="242295087" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="707" locStartPos="0" locEndLn="708" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="705" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="706" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType="." desc="memory_allocation_failure_016_func_001(...)" rngLn="705">
          <ElDescList>
            <ElDesc srcRngStartln="680" srcRngStartPos="0" srcRngEndLn="681" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="680" ElType="." desc="int ret =0;" rngLn="680">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="681" srcRngStartPos="0" srcRngEndLn="682" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="681" ElType="." desc="if (flag ==0)" rngLn="681">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="682" srcRngStartPos="0" srcRngEndLn="683" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="682" ElType="." desc="ret = MAX_VAL_4;" rngLn="682">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="685" srcRngStartPos="0" srcRngEndLn="686" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="685" ElType="." desc="return ret;" rngLn="685">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType=".C" desc="malloc(...)" rngLn="705">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType="!" desc="int * ptr1 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="705">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="706" srcRngStartPos="0" srcRngEndLn="707" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="706" ElType="." desc="memory_allocation_failure_016_func_001(...)" rngLn="706">
          <ElDescList>
            <ElDesc srcRngStartln="680" srcRngStartPos="0" srcRngEndLn="681" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="680" ElType="." desc="int ret =0;" rngLn="680">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="681" srcRngStartPos="0" srcRngEndLn="682" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="681" ElType="." desc="if (flag ==0)" rngLn="681">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="682" srcRngStartPos="0" srcRngEndLn="683" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="682" ElType="." desc="ret = MAX_VAL_4;" rngLn="682">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="685" srcRngStartPos="0" srcRngEndLn="686" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="685" ElType="." desc="return ret;" rngLn="685">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="706" srcRngStartPos="0" srcRngEndLn="707" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="706" ElType="." desc="int * ptr2 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="706">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="707" srcRngStartPos="0" srcRngEndLn="708" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="707" ElType=".P" desc="*(ptr1+1) = 10;" rngLn="707">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;ptr1[0]&quot; out of bounds at index 1" ln="707" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1731267102" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="707" locStartPos="0" locEndLn="708" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="703" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="704" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="703" srcRngStartPos="0" srcRngEndLn="704" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="703" ElType=".C" desc="void memory_allocation_failure_016 ()" rngLn="703">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType="!" desc="memory_allocation_failure_016_func_001(...)" rngLn="705">
          <ElDescList>
            <ElDesc srcRngStartln="680" srcRngStartPos="0" srcRngEndLn="681" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="680" ElType="." desc="int ret =0;" rngLn="680">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="681" srcRngStartPos="0" srcRngEndLn="682" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="681" ElType="." desc="if (flag ==0)" rngLn="681">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="682" srcRngStartPos="0" srcRngEndLn="683" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="682" ElType="!" desc="ret = MAX_VAL_4;" rngLn="682">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="685" srcRngStartPos="0" srcRngEndLn="686" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="685" ElType="!" desc="return ret;" rngLn="685">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType="!" desc="malloc(...)" rngLn="705">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="705" ElType="!" desc="int * ptr1 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="705">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="706" srcRngStartPos="0" srcRngEndLn="707" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="706" ElType="." desc="memory_allocation_failure_016_func_001(...)" rngLn="706">
          <ElDescList>
            <ElDesc srcRngStartln="680" srcRngStartPos="0" srcRngEndLn="681" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="680" ElType="." desc="int ret =0;" rngLn="680">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="681" srcRngStartPos="0" srcRngEndLn="682" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="681" ElType="." desc="if (flag ==0)" rngLn="681">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="682" srcRngStartPos="0" srcRngEndLn="683" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="682" ElType="." desc="ret = MAX_VAL_4;" rngLn="682">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="685" srcRngStartPos="0" srcRngEndLn="686" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="685" ElType="." desc="return ret;" rngLn="685">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="706" srcRngStartPos="0" srcRngEndLn="707" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="706" ElType="." desc="int * ptr2 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="706">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="707" srcRngStartPos="0" srcRngEndLn="708" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="707" ElType=".P" desc="*(ptr1+1) = 10;" rngLn="707">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_allocation_failure_main ( ) { if ( vflag == 1 ||...'" ln="723" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="267710189" NvActs="3" locStartln="723" locStartPos="0" locEndLn="803" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <ElDescList>
        <ElDesc srcRngStartln="723" srcRngStartPos="0" srcRngEndLn="803" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="723" ElType="" desc="[Line 723] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="1057105508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="740" srcRngStartPos="0" srcRngEndLn="820" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="740" ElType="" desc="[Line 740] Duplicated function in file 'memory_allocation_failure.c'" sourceRngHash="-1926023324">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="729" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-853300163" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="729" locStartPos="0" locEndLn="730" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="722" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="723" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="722" ElType=".C" desc="void memory_allocation_failure_main ()" rngLn="722">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="724" srcRngStartPos="0" srcRngEndLn="725" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="724" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="724">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="729" srcRngStartPos="0" srcRngEndLn="730" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="729" ElType=".P" desc="if (vflag == 2 || vflag ==888)" rngLn="729">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="734" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1171444689" lang="cpp" locType="sr" config="1" hash="267710189" locStartln="734" locStartPos="0" locEndLn="735" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="722" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="723" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="722" ElType=".C" desc="void memory_allocation_failure_main ()" rngLn="722">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="724" srcRngStartPos="0" srcRngEndLn="725" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="724" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="724">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="729" srcRngStartPos="0" srcRngEndLn="730" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="729" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="729">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="734" srcRngStartPos="0" srcRngEndLn="735" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_allocation_failure.c" srcRnghash="267710189" ln="734" ElType=".P" desc="if (vflag == 3 || vflag ==888)" rngLn="734">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="23" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="23" locStartPos="1" locEndLn="23" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" />
    <FlowViol msg="Memory not deallocated: buf" ln="25" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-120871240" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="25" locStartPos="0" locEndLn="26" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="25" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="26" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="21" ElType="." desc="int i;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="22" ElType="." desc="char *buf;" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="23" ElType="." desc="for (i=0;;i++)" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="25" ElType=".C" desc="calloc(...)" rngLn="25">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="25" ElType="!" desc="buf=(char*) calloc(5,sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="25">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="26" ElType="." desc="if(buf!=NULL)" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="28" ElType="." desc="buf[0]=1;" rngLn="28">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="23" ElType="." desc="for (i=0;;i++)" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="25" ElType=".P" desc="buf=(char*) calloc(5,sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="25">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="46" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1517952848" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="46" locStartPos="0" locEndLn="47" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="42" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="43" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="42" ElType=".C" desc="malloc(...)" rngLn="42">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="42" ElType="!" desc="int **ptr = (int**) malloc(5*sizeof(int*));" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="43" ElType="." desc="int i,j;" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="45" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="45">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="46" ElType=".P" desc="ptr[i]=(int*) malloc(5*sizeof(int)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="46">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: ptr[0]" ln="56" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1140740695" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="56" locStartPos="0" locEndLn="57" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="46" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="47" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="42" ElType="." desc="int **ptr = (int**) malloc(5*sizeof(int*));" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="43" ElType="." desc="int i,j;" rngLn="43">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="45" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="45">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="46" ElType=".C" desc="malloc(...)" rngLn="46">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="46" ElType="!" desc="ptr[i]=(int*) malloc(5*sizeof(int)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="46">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="45" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="ptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr[0]" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="48" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="48">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="50" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="50">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="52" ElType="." desc="*(*(ptr+i)+j)=i;" rngLn="52">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="50" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="50">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="48" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="48">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="55" ElType="." desc="free(ptr);" rngLn="55">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="56" ElType=".P" desc="}" rngLn="56">
          <Props>
            <Prop key="Tracked variables" val="ptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr[0]" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="73" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1708259062" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="73" locStartPos="0" locEndLn="74" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="64" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="65" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="70" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="70">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="72" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="71" ElType="." desc="char *str1;" rngLn="71">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="72" ElType="!" desc="memory_leak_003_func_001(strlen(str),&amp;str1);/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="72">
          <ElDescList>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="64" ElType=".C" desc="malloc(...)" rngLn="64">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="64" ElType="!" desc="char * p = malloc(sizeof(char) * (len+1));" rngLn="64">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="65" ElType="!" desc="*stringPtr = p;" rngLn="65">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="73" ElType=".P" desc="strcpy(str1,str);" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str1, strcpy(...)" ln="74" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1822492564" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="74" locStartPos="0" locEndLn="75" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="64" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="65" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="70" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="70">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="72" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="71" ElType="." desc="char *str1;" rngLn="71">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="72" ElType="!" desc="memory_leak_003_func_001(strlen(str),&amp;str1);/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="72">
          <ElDescList>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="64" ElType=".C" desc="malloc(...)" rngLn="64">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="64" ElType="!" desc="char * p = malloc(sizeof(char) * (len+1));" rngLn="64">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="65" ElType="!" desc="*stringPtr = p;" rngLn="65">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="73" ElType="!" desc="strcpy(str1,str);" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="74" ElType=".P" desc="}" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="str1, strcpy(...)" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1, strcpy(...)" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="96" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1603166056" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="96" locStartPos="0" locEndLn="97" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="91" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="92" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="88" ElType="." desc="memory_leak_004_s_001* s=(memory_leak_004_s_001*) calloc(5,sizeof(memory_leak_004_s_001)) ;" rngLn="88">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="89" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="90" ElType="." desc="int i;" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="91" ElType=".C" desc="if(s!=NULL)" rngLn="91">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="96" ElType=".P" desc="strcpy((s+4)->buf,s1);" rngLn="96">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="96" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1664599684" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="96" locStartPos="0" locEndLn="97" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="88" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="89" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="88" ElType=".C" desc="calloc(...)" rngLn="88">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="88" ElType="!" desc="memory_leak_004_s_001* s=(memory_leak_004_s_001*) calloc(5,sizeof(memory_leak_004_s_001)) ;" rngLn="88">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="89" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="89">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="90" ElType="." desc="int i;" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="91" ElType="." desc="if(s!=NULL)" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="96" ElType=".P" desc="strcpy((s+4)->buf,s1);" rngLn="96">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: s[0].buf" ln="99" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-2007492975" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="99" locStartPos="0" locEndLn="100" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="94" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="95" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="88" ElType="." desc="memory_leak_004_s_001* s=(memory_leak_004_s_001*) calloc(5,sizeof(memory_leak_004_s_001)) ;" rngLn="88">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="89" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="90" ElType="." desc="int i;" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="91" ElType="." desc="if(s!=NULL)" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="92" ElType="." desc="for(i= 0; i&lt;5 ;i++)" rngLn="92">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="94" ElType=".C" desc="malloc(...)" rngLn="94">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="94" ElType="!" desc="(s+i)->buf = (char*)malloc(25* sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="92" ElType="." desc="for(i= 0; i&lt;5 ;i++)" rngLn="92">
          <Props>
            <Prop key="Tracked variables" val="s[0].buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: s[0].buf" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="96" ElType="." desc="strcpy((s+4)->buf,s1);" rngLn="96">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="97" ElType="." desc="for(i= 0; i&lt;5 ;i++);" rngLn="97">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="98" ElType="." desc="free(s);" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="99" ElType=".P" desc="}" rngLn="99">
          <Props>
            <Prop key="Tracked variables" val="s[0].buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: s[0].buf" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="110" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-501753840" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="110" locStartPos="0" locEndLn="111" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="105" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="106" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="105" ElType=".C" desc="void memory_leak_005()" rngLn="105">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="107" ElType="." desc="float *ptr;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="108" ElType="!" desc="int flag=10;" rngLn="108">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="110" ElType=".P" desc="if(flag > 0)" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag &lt; 0&quot; always evaluates to false" ln="118" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1183687802" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="105" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="106" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="105" ElType=".C" desc="void memory_leak_005()" rngLn="105">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="107" ElType="." desc="float *ptr;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="108" ElType="!" desc="int flag=10;" rngLn="108">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="110" ElType="." desc="if(flag > 0)" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag > 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="112" ElType="." desc="ptr= (float*) malloc(5*sizeof(float));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="113" ElType="." desc="if(ptr!=NULL)" rngLn="113">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="115" ElType="." desc="*(ptr+1) = 10.5;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="118" ElType=".P" desc="if(flag &lt; 0)" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: ptr" ln="120" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1276426428" lang="cpp" locType="sr" urgent="true" config="1" hash="-9148794" locStartln="120" locStartPos="0" locEndLn="121" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="107" ElType="." desc="float *ptr;" rngLn="107">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="108" ElType="." desc="int flag=10;" rngLn="108">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="110" ElType="." desc="if(flag > 0)" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag > 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="112" ElType=".C" desc="malloc(...)" rngLn="112">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="112" ElType="!" desc="ptr= (float*) malloc(5*sizeof(float));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="113" ElType="." desc="if(ptr!=NULL)" rngLn="113">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="115" ElType="." desc="*(ptr+1) = 10.5;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="118" ElType="." desc="if(flag &lt; 0)" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag &lt; 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="120" ElType=".P" desc="}" rngLn="120">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_leak_006_func_001(...) == 0&quot; always evaluates to true" ln="141" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-46611350" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="141" locStartPos="0" locEndLn="142" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="136" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="137" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="136" ElType=".C" desc="void memory_leak_006()" rngLn="136">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="138" ElType="." desc="double *dptr;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="139" ElType="." desc="int flag=0;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType="!" desc="memory_leak_006_func_001(...)" rngLn="141">
          <ElDescList>
            <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="128" ElType="." desc="int ret;" rngLn="128">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="129" ElType="." desc="if (flag ==0)" rngLn="129">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="130" ElType="!" desc="ret = 0;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="133" ElType="!" desc="return ret;" rngLn="133">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType=".P" desc="if(memory_leak_006_func_001(flag)==0)" rngLn="141">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_leak_006_func_001(...) != 0&quot; always evaluates to false" ln="149" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="578330840" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="149" locStartPos="0" locEndLn="150" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="136" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="137" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="136" ElType=".C" desc="void memory_leak_006()" rngLn="136">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="138" ElType="." desc="double *dptr;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="139" ElType="." desc="int flag=0;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType="." desc="memory_leak_006_func_001(...)" rngLn="141">
          <ElDescList>
            <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="128" ElType="." desc="int ret;" rngLn="128">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="129" ElType="." desc="if (flag ==0)" rngLn="129">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="130" ElType="." desc="ret = 0;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="133" ElType="." desc="return ret;" rngLn="133">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType="." desc="if(memory_leak_006_func_001(flag)==0)" rngLn="141">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_leak_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="143" ElType="." desc="dptr= (double*) malloc(5*sizeof(double));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="143">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="144" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="144" ElType="." desc="if(dptr!=NULL)" rngLn="144">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (dptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="146" ElType="." desc="*(dptr+1) = 10.50000;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="149" ElType="!" desc="memory_leak_006_func_001(...)" rngLn="149">
          <ElDescList>
            <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="128" ElType="." desc="int ret;" rngLn="128">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="129" ElType="." desc="if (flag ==0)" rngLn="129">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="130" ElType="!" desc="ret = 0;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="133" ElType="!" desc="return ret;" rngLn="133">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="149" ElType=".P" desc="if(memory_leak_006_func_001(flag) !=0)" rngLn="149">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: dptr" ln="151" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1367544842" lang="cpp" locType="sr" urgent="true" config="1" hash="-9148794" locStartln="151" locStartPos="0" locEndLn="152" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="143" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="144" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="138" ElType="." desc="double *dptr;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="139" ElType="." desc="int flag=0;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType="." desc="memory_leak_006_func_001(...)" rngLn="141">
          <ElDescList>
            <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="128" ElType="." desc="int ret;" rngLn="128">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="129" ElType="." desc="if (flag ==0)" rngLn="129">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="130" ElType="." desc="ret = 0;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="133" ElType="." desc="return ret;" rngLn="133">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="141" ElType="." desc="if(memory_leak_006_func_001(flag)==0)" rngLn="141">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_leak_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="143" ElType=".C" desc="malloc(...)" rngLn="143">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="143" ElType="!" desc="dptr= (double*) malloc(5*sizeof(double));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="143">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="144" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="144" ElType="." desc="if(dptr!=NULL)" rngLn="144">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: dptr" kind="var" />
            <Ann msg="Condition evaluation: (dptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="146" ElType="." desc="*(dptr+1) = 10.50000;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="149" ElType="." desc="memory_leak_006_func_001(...)" rngLn="149">
          <ElDescList>
            <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="128" ElType="." desc="int ret;" rngLn="128">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="129" ElType="." desc="if (flag ==0)" rngLn="129">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="130" ElType="." desc="ret = 0;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="133" ElType="." desc="return ret;" rngLn="133">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="149" ElType="." desc="if(memory_leak_006_func_001(flag) !=0)" rngLn="149">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_leak_006_func_001(...) != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="151" ElType=".P" desc="}" rngLn="151">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: dptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'int memory_leak_007_func_001 ( int flag ) { switch ( flag ) {...'" ln="159" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-9148794" NvActs="3" locStartln="159" locStartPos="0" locEndLn="192" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <ElDescList>
        <ElDesc srcRngStartln="159" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="159" ElType="" desc="[Line 159] Duplicated function in file 'memory_leak.c'" sourceRngHash="-1777509844">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="162" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="162" ElType="" desc="[Line 162] Duplicated function in file 'memory_leak.c'" sourceRngHash="1416917828">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;ret == 0&quot; always evaluates to false" ln="198" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1821224358" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="198" locStartPos="0" locEndLn="199" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="194" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="195" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="194" ElType=".C" desc="void memory_leak_007 ()" rngLn="194">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="196" ElType="." desc="int ret;" rngLn="196">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="197" ElType="!" desc="ret = memory_leak_007_func_001 (rand());" rngLn="197">
          <ElDescList>
            <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="160" ElType="." desc="switch (flag)" rngLn="160">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (assuming &quot;case default&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="190" ElType="!" desc="return -1;" rngLn="190">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="198" ElType=".P" desc="if(ret == 0)" rngLn="198">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="215" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-997176075" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="215" locStartPos="0" locEndLn="216" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="212" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="213" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="211" ElType="." desc="int *ptr=(int*) malloc(5 * sizeof(int));" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="212" ElType=".C" desc="malloc(...)" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="212" ElType="!" desc="int *p = (int*)malloc(5 * sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="213" ElType="." desc="if(ptr !=NULL)" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="215" ElType=".P" desc="p = ptr;" rngLn="215">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="219" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="2023928221" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="219" locStartPos="0" locEndLn="220" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="212" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="213" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="211" ElType="." desc="int *ptr=(int*) malloc(5 * sizeof(int));" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="212" ElType=".C" desc="malloc(...)" rngLn="212">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="212" ElType="!" desc="int *p = (int*)malloc(5 * sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="213" ElType="." desc="if(ptr !=NULL)" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="219" ElType=".P" desc="}" rngLn="219">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="231" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1166673539" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="231" locStartPos="0" locEndLn="232" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="228" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="229" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="227" ElType="." desc="float *ptr=(float*) malloc(5 * sizeof(float));" rngLn="227">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="228" ElType=".C" desc="malloc(...)" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="228" ElType="!" desc="int *p = (int*) malloc(5 * sizeof(int)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="228">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="229" ElType="." desc="if(ptr !=NULL)" rngLn="229">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="231" ElType=".P" desc="p = (int *)ptr;" rngLn="231">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="236" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1216102517" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="236" locStartPos="0" locEndLn="237" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="228" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="229" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="227" ElType="." desc="float *ptr=(float*) malloc(5 * sizeof(float));" rngLn="227">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="228" ElType=".C" desc="malloc(...)" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="228" ElType="!" desc="int *p = (int*) malloc(5 * sizeof(int)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="228">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="229" ElType="." desc="if(ptr !=NULL)" rngLn="229">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="236" ElType=".P" desc="}" rngLn="236">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p1" ln="247" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1536157381" lang="cpp" locType="sr" urgent="true" config="1" hash="-9148794" locStartln="247" locStartPos="0" locEndLn="248" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="245" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="246" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="244" ElType="." desc="int *ptr = (int*) calloc(5,sizeof(int));" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="245" ElType=".C" desc="calloc(...)" rngLn="245">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="245" ElType="!" desc="int *p1 = (int*) calloc(5,sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="245">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="246" ElType="." desc="int *p2 = NULL;" rngLn="246">
          <Props>
            <Prop key="Tracked variables" val="p1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="247" ElType=".P" desc="p1 = ptr;" rngLn="247">
          <Props>
            <Prop key="Tracked variables" val="p1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p2&quot; may possibly be null" ln="249" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1188148881" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="249" locStartPos="0" locEndLn="250" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="244" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="245" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="244" ElType=".C" desc="calloc(...)" rngLn="244">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="244" ElType="!" desc="int *ptr = (int*) calloc(5,sizeof(int));" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="245" ElType="." desc="int *p1 = (int*) calloc(5,sizeof(int));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="245">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="246" ElType="." desc="int *p2 = NULL;" rngLn="246">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="247" ElType="!" desc="p1 = ptr;" rngLn="247">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="248" ElType="!" desc="p2 = p1;" rngLn="248">
          <Props>
            <Prop key="Tracked variables" val="p1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="249" ElType=".P" desc="*(p2+4) = 1;" rngLn="249">
          <Props>
            <Prop key="Tracked variables" val="p2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;un.u2&quot; is used prior to initialization" ln="276" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-97764099" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="276" locStartPos="0" locEndLn="277" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="266" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="267" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="265" ElType="." desc="char * buf = NULL;" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="266" ElType=".C" desc="memory_leak_0011_uni_001 un;" rngLn="266">
          <Props>
            <Prop key="Tracked variables" val="un" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: un" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="267" ElType="." desc="buf = (char *)calloc(50, sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="268" ElType="." desc="if(buf!=NULL)" rngLn="268">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="274" ElType="!" desc="char * buf ;" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="276" ElType=".P" desc="buf = un.u2;" rngLn="276">
          <Props>
            <Prop key="Tracked variables" val="un.u2" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: un.u2" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf, un.u1" ln="278" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-2025103267" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="278" locStartPos="0" locEndLn="279" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="267" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="268" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="265" ElType="." desc="char * buf = NULL;" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="266" ElType="." desc="memory_leak_0011_uni_001 un;" rngLn="266">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="267" ElType=".C" desc="calloc(...)" rngLn="267">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="267" ElType="!" desc="buf = (char *)calloc(50, sizeof(char)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="267">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="268" ElType="." desc="if(buf!=NULL)" rngLn="268">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="270" ElType="!" desc="strcpy(buf, &quot;This Is A String&quot;);" rngLn="270">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="271" ElType="!" desc="un.u1 = buf;" rngLn="271">
          <Props>
            <Prop key="Tracked variables" val="buf, strcpy(...)" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf, strcpy(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="274" ElType="." desc="char * buf ;" rngLn="274">
          <Props>
            <Prop key="Tracked variables" val="buf, un.u1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf, un.u1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="276" ElType="." desc="buf = un.u2;" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="278" ElType=".P" desc="}" rngLn="278">
          <Props>
            <Prop key="Tracked variables" val="buf, un.u1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf, un.u1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="309" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1726454219" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="309" locStartPos="0" locEndLn="310" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="308" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="309" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="307" ElType="." desc="memory_leak_0012_uni_001 *u = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="308" ElType=".C" desc="malloc(...)" rngLn="308">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="308" ElType="!" desc="memory_leak_0012_uni_001 *p = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="308">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="309" ElType=".P" desc="p = u;" rngLn="309">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="311" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="232371328" lang="cpp" locType="sr" urgent="true" config="1" hash="-9148794" locStartln="311" locStartPos="0" locEndLn="312" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="307" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="308" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="307" ElType=".C" desc="malloc(...)" rngLn="307">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="307" ElType="!" desc="memory_leak_0012_uni_001 *u = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="308" ElType="." desc="memory_leak_0012_uni_001 *p = (memory_leak_0012_uni_001 * )malloc(5*sizeof( memory_leak_0012_uni_001 ));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="308">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="309" ElType="!" desc="p = u;" rngLn="309">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="311" srcRngStartPos="0" srcRngEndLn="312" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="311" ElType=".P" desc="p->s1.a = 1;" rngLn="311">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="349" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1494578215" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="349" locStartPos="0" locEndLn="350" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="348" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="349" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType=".C" desc="malloc(...)" rngLn="348">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="!" desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType=".P" desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="353" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-169161541" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="353" locStartPos="0" locEndLn="354" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="348" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="349" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="346" ElType="." desc="u->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType=".C" desc="malloc(...)" rngLn="348">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="!" desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType="." desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="353" ElType=".P" desc="p = u;" rngLn="353">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p->s1" ln="353" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="600680242" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="353" locStartPos="0" locEndLn="354" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="349" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="350" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="346" ElType="." desc="u->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="." desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType=".C" desc="malloc(...)" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType="!" desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props>
            <Prop key="Tracked variables" val="p->s1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p->s1" kind="var" />
            <Ann msg="Condition evaluation: (u != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="353" ElType=".P" desc="p = u;" rngLn="353">
          <Props>
            <Prop key="Tracked variables" val="p->s1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p->s1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="354" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-772292211" lang="cpp" locType="sr" urgent="true" config="1" hash="-9148794" locStartln="354" locStartPos="0" locEndLn="355" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="346" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="347" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="346" ElType=".C" desc="malloc(...)" rngLn="346">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="346" ElType="!" desc="u->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="." desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType="." desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="353" ElType="!" desc="p = u;" rngLn="353">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="354" srcRngStartPos="0" srcRngEndLn="355" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="354" ElType=".P" desc="p->s1->a = 1;" rngLn="354">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p" ln="359" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1618478252" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="359" locStartPos="0" locEndLn="360" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="348" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="349" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType=".C" desc="malloc(...)" rngLn="348">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="!" desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType="." desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="359" ElType=".P" desc="}" rngLn="359">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: p->s1" ln="359" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1235259613" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="359" locStartPos="0" locEndLn="360" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="349" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="350" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="343" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 ));" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="344" ElType="." desc="if(u!=NULL)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="348" ElType="." desc="memory_leak_0013_uni_001 *p = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="348">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType=".C" desc="malloc(...)" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="349" ElType="!" desc="p->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="349">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props>
            <Prop key="Tracked variables" val="p->s1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p->s1" kind="var" />
            <Ann msg="Condition evaluation: (u != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="359" ElType=".P" desc="}" rngLn="359">
          <Props>
            <Prop key="Tracked variables" val="p->s1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: p->s1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: *fp1, *fp2, fptr" ln="384" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-95625715" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="384" locStartPos="0" locEndLn="385" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="373" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="374" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="367" ElType="." desc="float * fptr;" rngLn="367">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="368" ElType="." desc="float **fp1 = &amp;fptr;" rngLn="368">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="369" ElType="." desc="float **fp2 = &amp;fptr;" rngLn="369">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="370" srcRngStartPos="0" srcRngEndLn="371" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="370" ElType="." desc="fptr = NULL;" rngLn="370">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="372" ElType="." desc="float * fptr = *fp1;" rngLn="372">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="373" srcRngStartPos="0" srcRngEndLn="374" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="373" ElType=".C" desc="calloc(...)" rngLn="373">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="373" srcRngStartPos="0" srcRngEndLn="374" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="373" ElType="!" desc="fptr = (float *)calloc(10, sizeof(float));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="373">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="374" srcRngStartPos="0" srcRngEndLn="375" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="374" ElType="." desc="if(fptr!=NULL)" rngLn="374">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: fptr" kind="var" />
            <Ann msg="Condition evaluation: (fptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="376" ElType="." desc="*(fptr+3) = 50.5;" rngLn="376">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="377" ElType="!" desc="*fp1 = fptr;" rngLn="377">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="381" srcRngStartPos="0" srcRngEndLn="382" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="381" ElType="." desc="float * fptr1 ;" rngLn="381">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="382" srcRngStartPos="0" srcRngEndLn="383" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="382" ElType="!" desc="fptr1 = *fp2;" rngLn="382">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="384" ElType=".P" desc="}" rngLn="384">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str1" ln="404" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1500053596" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="404" locStartPos="0" locEndLn="405" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="392" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="393" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="398" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="398">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="399" ElType="!" desc="char *str1 = memory_leak_0015_func_001(strlen(str)); /*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="399">
          <ElDescList>
            <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="392" ElType=".C" desc="char *stringPtr = malloc(sizeof(char) * (len+1));" rngLn="392">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="393" ElType="!" desc="return stringPtr;" rngLn="393">
              <Props>
                <Prop key="Tracked variables" val="stringPtr" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: stringPtr" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="400" ElType="." desc="if(str1!=NULL)" rngLn="400">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="402" ElType="!" desc="strcpy(str1,str);" rngLn="402">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="404" ElType=".P" desc="}" rngLn="404">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0016_gbl_ptr&quot; may possibly be null" ln="424" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-684923953" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="424" locStartPos="0" locEndLn="425" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="417" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="418" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="422" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="422">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="423" ElType="!" desc="memory_leak_0016_func_001(strlen(str));" rngLn="423">
          <ElDescList>
            <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="415" ElType="." desc="memory_leak_0016_gbl_ptr=NULL;" rngLn="415">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="416" ElType="." desc="if(a == INDEX)" rngLn="416">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="417" ElType=".C" desc="malloc(...)" rngLn="417">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="417" ElType="!" desc="memory_leak_0016_gbl_ptr= malloc(sizeof(char) * (len+1));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="417">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="424" ElType=".P" desc="strcpy(memory_leak_0016_gbl_ptr,str);" rngLn="424">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0016_gbl_ptr&quot; may possibly be null" ln="424" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="138426588" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="424" locStartPos="0" locEndLn="425" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="415" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="416" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="422" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="422">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="423" ElType="!" desc="memory_leak_0016_func_001(strlen(str));" rngLn="423">
          <ElDescList>
            <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="415" ElType=".C" desc="memory_leak_0016_gbl_ptr=NULL;" rngLn="415">
              <Props>
                <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="416" ElType="." desc="if(a == INDEX)" rngLn="416">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="424" ElType=".P" desc="strcpy(memory_leak_0016_gbl_ptr,str);" rngLn="424">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_leak_0017_func_002 ( ) { int i , j ;...'" ln="443" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-9148794" NvActs="3" locStartln="443" locStartPos="0" locEndLn="458" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <ElDescList>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="443" ElType="" desc="[Line 443] Duplicated function in file 'memory_leak.c'" sourceRngHash="-718982918">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="466" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="451" ElType="" desc="[Line 451] Duplicated function in file 'memory_leak.c'" sourceRngHash="1524060386">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;memory_leak_0017_gbl_doubleptr&quot; may possibly be null" ln="449" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1418309190" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="449" locStartPos="0" locEndLn="450" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="445" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="446" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="444" ElType="." desc="int i,j;" rngLn="444">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="446" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="445" ElType=".C" desc="malloc(...)" rngLn="445">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="446" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="445" ElType="!" desc="memory_leak_0017_gbl_doubleptr=(long**) malloc(10*sizeof(long*));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="445">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="447" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="447">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0017_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0017_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="449" ElType=".P" desc="memory_leak_0017_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="449">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0017_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0017_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_leak_0017_func_001(...) == 0&quot; always evaluates to true" ln="482" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-343824575" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="482" locStartPos="0" locEndLn="483" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="461" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="462" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="462" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="461" ElType=".C" desc="void memory_leak_0017()" rngLn="461">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="463" srcRngStartPos="0" srcRngEndLn="464" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="463" ElType="." desc="int flag=0,i,j;" rngLn="463">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="464" srcRngStartPos="0" srcRngEndLn="465" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="464" ElType="." desc="memory_leak_0017_gbl_doubleptr=NULL;" rngLn="464">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="465" srcRngStartPos="0" srcRngEndLn="466" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="465" ElType="." desc="goto label;" rngLn="465">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="481" ElType="." desc="label:" rngLn="481">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="482" srcRngStartPos="0" srcRngEndLn="483" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="482" ElType="!" desc="memory_leak_0017_func_001(...)" rngLn="482">
          <ElDescList>
            <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="434" ElType="." desc="int ret ;" rngLn="434">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="435" ElType="." desc="if (flag ==0)" rngLn="435">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="436" ElType="!" desc="ret = 0;" rngLn="436">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="439" ElType="!" desc="return ret;" rngLn="439">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="482" srcRngStartPos="0" srcRngEndLn="483" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="482" ElType=".P" desc="if(memory_leak_0017_func_001(flag)==ZERO)" rngLn="482">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0018dst&quot; may possibly be null" ln="504" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2112706454" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="504" locStartPos="0" locEndLn="505" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="501" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="502" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="496" srcRngStartPos="0" srcRngEndLn="497" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="496" ElType="." desc="memory_leak_0018dst = NULL;" rngLn="496">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="497" srcRngStartPos="0" srcRngEndLn="498" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="497" ElType="." desc="int i;" rngLn="497">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="499" srcRngStartPos="0" srcRngEndLn="500" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="499" ElType="." desc="while(1)" rngLn="499">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="501" ElType=".C" desc="malloc(...)" rngLn="501">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="501" ElType="!" desc="memory_leak_0018dst = (char**) malloc(5*sizeof(char*));" rngLn="501">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="502" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="502">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0018dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="505" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="504" ElType=".P" desc="memory_leak_0018dst[i]=(char*) malloc(15*sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="504">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0018dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_leak_0018dst[0]" ln="527" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="416644519" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="527" locStartPos="0" locEndLn="528" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="504" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="505" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="513" ElType="." desc="int i;" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="514" ElType="!" desc="memory_leak_0018_func_001();" rngLn="514">
          <ElDescList>
            <ElDesc srcRngStartln="496" srcRngStartPos="0" srcRngEndLn="497" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="496" ElType="." desc="memory_leak_0018dst = NULL;" rngLn="496">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="497" srcRngStartPos="0" srcRngEndLn="498" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="497" ElType="." desc="int i;" rngLn="497">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="499" srcRngStartPos="0" srcRngEndLn="500" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="499" ElType="." desc="while(1)" rngLn="499">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="501" ElType="." desc="memory_leak_0018dst = (char**) malloc(5*sizeof(char*));" rngLn="501">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="502" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="502">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="505" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="504" ElType=".C" desc="malloc(...)" rngLn="504">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="505" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="504" ElType="!" desc="memory_leak_0018dst[i]=(char*) malloc(15*sizeof(char));/*Tool should detect this line as error*/ /*ERROR:Memory Leakage */" rngLn="504">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="502" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="502">
              <Props>
                <Prop key="Tracked variables" val="memory_leak_0018dst[0]" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: memory_leak_0018dst[0]" kind="var" />
                <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="506" ElType="." desc="break;" rngLn="506">
              <Props />
              <Anns>
                <Ann msg="Exit the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_leak_0018dst[0]" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="517" ElType="!" desc="strcpy (memory_leak_0018dst[i],&quot;STRING&quot;);" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="515" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="519" srcRngStartPos="0" srcRngEndLn="520" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="519" ElType="." desc="while(1)" rngLn="519">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="521" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="521">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="523" ElType="." desc=";" rngLn="523">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="521" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="521">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="526" ElType="." desc="free(memory_leak_0018dst);" rngLn="526">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="527" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="527" ElType=".P" desc="memory_leak_0018dst = NULL;" rngLn="527">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst[0]" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_leak_0018dst[0]" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void memory_leak_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="538" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-9148794" NvActs="3" locStartln="538" locStartPos="0" locEndLn="628" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <ElDescList>
        <ElDesc srcRngStartln="538" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="538" ElType="" desc="[Line 538] Duplicated function in file 'memory_leak.c'" sourceRngHash="1872565256">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="638" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="547" ElType="" desc="[Line 547] Duplicated function in file 'memory_leak.c'" sourceRngHash="-2080022648">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="544" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-853300163" lang="cpp" locType="sr" config="1" hash="-9148794" locStartln="544" locStartPos="0" locEndLn="545" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" FirstElSrcRngStartln="537" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="538" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="537" ElType=".C" desc="void memory_leak_main ()" rngLn="537">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="539" srcRngStartPos="0" srcRngEndLn="540" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="539" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="539">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/memory_leak.c" srcRnghash="-9148794" ln="544" ElType=".P" desc="if (vflag == 2 || vflag ==888)" rngLn="544">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Function 'not_return_001_func_001' should have return at the end of each execution path" ln="18" sev="3" auth="kali" rule="MISRA2004-16_8" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="714740863" locStartln="18" locStartPos="4" locEndLn="18" locEndPos="5" locFile="/ITC-Benchmarks/01.w_Defects/not_return.c" />
    <StdViol msg="Function 'not_return_002_func_001' should have return at the end of each execution path" ln="37" sev="3" auth="kali" rule="MISRA2004-16_8" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="714740863" locStartln="37" locStartPos="4" locEndLn="37" locEndPos="5" locFile="/ITC-Benchmarks/01.w_Defects/not_return.c" />
    <StdViol msg="Function 'not_return_003_func_001' should have return at the end of each execution path" ln="63" sev="3" auth="kali" rule="MISRA2004-16_8" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="714740863" locStartln="63" locStartPos="4" locEndLn="63" locEndPos="5" locFile="/ITC-Benchmarks/01.w_Defects/not_return.c" />
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="23" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-79988354" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="23" locStartPos="0" locEndLn="24" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="22" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="23" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="22" ElType=".C" desc="int *p = NULL;" rngLn="22">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="23" ElType=".P" desc="*p = 1; /*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="34" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="916461122" lang="cpp" locType="sr" urgent="true" config="1" hash="1494835228" locStartln="34" locStartPos="0" locEndLn="35" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="32" ElType=".C" desc="int *p = NULL;" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="33" ElType="." desc="int ret;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="34" ElType=".P" desc="ret = *p;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="34">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pp, p&quot; may possibly be null" ln="47" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1926955588" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="47" locStartPos="0" locEndLn="48" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="45" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="46" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="44" ElType="." desc="int **pp;" rngLn="44">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="45" ElType=".C" desc="int *p = NULL;" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="46" ElType="!" desc="pp = &amp;p;" rngLn="46">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="47" ElType=".P" desc="**pp = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="47">
          <Props>
            <Prop key="Tracked variables" val="*pp, p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pp, p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="63" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2040514788" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="63" locStartPos="0" locEndLn="64" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="62" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="63" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="62" ElType=".C" desc="null_pointer_004_s_001 *p = NULL;" rngLn="62">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="63" ElType=".P" desc="p->a = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="63">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="94" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1286249692" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="94" locStartPos="0" locEndLn="95" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="93" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="94" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="93" ElType=".C" desc="null_pointer_005_uni_001 *p = NULL;" rngLn="93">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="94" ElType=".P" desc="p->s1.a = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="94">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="133" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1802409087" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="133" locStartPos="0" locEndLn="134" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="126" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="127" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="131" ElType="." desc="int *p;" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="132" ElType="!" desc="p = null_pointer_008_func_001();" rngLn="132">
          <ElDescList>
            <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="126" ElType=".C" desc="return NULL;" rngLn="126">
              <Props>
                <Prop key="Tracked variables" val="&lt;returned value of null_pointer_008_func_001()>" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: &lt;returned value of null_pointer_008_func_001()>" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="133" ElType=".P" desc="*p = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="133">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="142" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1233549410" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="142" locStartPos="0" locEndLn="143" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="147" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="148" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="147" ElType=".C" desc="null_pointer_009_func_001(NULL);" rngLn="147">
          <ElDescList>
            <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="142" ElType=".P" desc="*p = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="142">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="&lt;parameter #1 of null_pointer_009_func_001()>" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: &lt;parameter #1 of null_pointer_009_func_001()>" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p1&quot; may possibly be null" ln="159" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2001074939" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="159" locStartPos="0" locEndLn="160" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="156" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="157" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="156" ElType=".C" desc="int *p = NULL;" rngLn="156">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="157" ElType="." desc="int *p1;" rngLn="157">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="158" srcRngStartPos="0" srcRngEndLn="159" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="158" ElType="!" desc="p1 = p;" rngLn="158">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="159" srcRngStartPos="0" srcRngEndLn="160" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="159" ElType=".P" desc="*p1 = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="159">
          <Props>
            <Prop key="Tracked variables" val="p1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p2&quot; may possibly be null" ln="173" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-78712673" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="173" locStartPos="0" locEndLn="174" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="168" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="169" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="168" ElType=".C" desc="int *p = NULL;" rngLn="168">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="169" ElType="." desc="int *p1;" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="170" ElType="." desc="int *p2;" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="171" ElType="!" desc="p1 = p;" rngLn="171">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="172" ElType="!" desc="p2 = p1;" rngLn="172">
          <Props>
            <Prop key="Tracked variables" val="p1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="173" ElType=".P" desc="*p2 = 1;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="173">
          <Props>
            <Prop key="Tracked variables" val="p2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="180" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-79988449" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="180" locStartPos="0" locEndLn="181" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="179" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="180" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="179" ElType=".C" desc="int *p = NULL;" rngLn="179">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="180" ElType=".P" desc="p[3] = 1; /*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="180">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to false" ln="192" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="674439350" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="192" locStartPos="0" locEndLn="193" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="188" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="189" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="188" ElType=".C" desc="void null_pointer_013 ()" rngLn="188">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="190" ElType="." desc="int *p;" rngLn="190">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="191" ElType="!" desc="p = null_pointer_013_func_001();" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="185" ElType="!" desc="return (NULL);" rngLn="185">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="192" ElType=".P" desc="if (p != NULL)" rngLn="192">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="196" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2025624340" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="196" locStartPos="0" locEndLn="197" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="185" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="186" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="190" ElType="." desc="int *p;" rngLn="190">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="191" ElType="!" desc="p = null_pointer_013_func_001();" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="185" ElType=".C" desc="return (NULL);" rngLn="185">
              <Props>
                <Prop key="Tracked variables" val="&lt;returned value of null_pointer_013_func_001()>" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: &lt;returned value of null_pointer_013_func_001()>" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="192" ElType="." desc="if (p != NULL)" rngLn="192">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Condition evaluation: (p != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="196" srcRngStartPos="0" srcRngEndLn="197" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="196" ElType=".P" desc="*p = 2;/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="196">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="213" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="481134389" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="213" locStartPos="0" locEndLn="214" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="206" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="207" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="211" ElType="." desc="int *p;" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="212" ElType="!" desc="p = null_pointer_014_func_001();" rngLn="212">
          <ElDescList>
            <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="206" ElType=".C" desc="return (NULL);" rngLn="206">
              <Props>
                <Prop key="Tracked variables" val="&lt;returned value of null_pointer_014_func_001()>" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: &lt;returned value of null_pointer_014_func_001()>" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="213" ElType=".P" desc="*p = 1; /*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; is checked for null after being dereferenced" ln="214" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-367161518" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="214" locStartPos="0" locEndLn="215" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="213" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="214" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="213" ElType=".C" desc="*p = 1; /*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="p != null" />
          </Props>
          <Anns>
            <Ann msg="Point of dereferencing" kind="cause" />
            <Ann msg="Important values: p != null" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="214" ElType=".P" desc="if (p != NULL)" rngLn="214">
          <Props>
            <Prop key="Tracked variables" val="p != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: p != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to true" ln="214" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1539512482" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="214" locStartPos="0" locEndLn="215" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="209" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="210" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="209" ElType=".C" desc="void null_pointer_014 ()" rngLn="209">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="211" ElType="." desc="int *p;" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="212" ElType="!" desc="p = null_pointer_014_func_001();" rngLn="212">
          <ElDescList>
            <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="206" ElType="!" desc="return (NULL);" rngLn="206">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="213" ElType="." desc="*p = 1; /*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="213">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="214" ElType=".P" desc="if (p != NULL)" rngLn="214">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_015_gbl_ptr&quot; may possibly be null" ln="238" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1601791958" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="238" locStartPos="0" locEndLn="239" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="231" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="232" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="236" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="236">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="237" ElType="!" desc="null_pointer_015_func_001(strlen(str));" rngLn="237">
          <ElDescList>
            <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="229" ElType="." desc="null_pointer_015_gbl_ptr=NULL;" rngLn="229">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="230" ElType="." desc="if(a != INDEX)" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a != 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="231" ElType=".C" desc="malloc(...)" rngLn="231">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="231" ElType="!" desc="null_pointer_015_gbl_ptr= malloc(sizeof(char) * (len+1));" rngLn="231">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="238" ElType=".P" desc="strcpy(null_pointer_015_gbl_ptr,str);/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="238">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_015_gbl_ptr&quot; may possibly be null" ln="238" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1277195409" lang="cpp" locType="sr" urgent="true" config="1" hash="1494835228" locStartln="238" locStartPos="0" locEndLn="239" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="229" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="230" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="236" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="236">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="237" ElType="!" desc="null_pointer_015_func_001(strlen(str));" rngLn="237">
          <ElDescList>
            <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="229" ElType=".C" desc="null_pointer_015_gbl_ptr=NULL;" rngLn="229">
              <Props>
                <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="230" ElType="." desc="if(a != INDEX)" rngLn="230">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a != 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="238" ElType=".P" desc="strcpy(null_pointer_015_gbl_ptr,str);/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="238">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void null_pointer_016_func_002 ( ) { int i , j ;...'" ln="258" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1494835228" NvActs="3" locStartln="258" locStartPos="0" locEndLn="273" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="258" ElType="" desc="[Line 258] Duplicated function in file 'null_pointer.c'" sourceRngHash="-1869391378">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="294" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="279" ElType="" desc="[Line 279] Duplicated function in file 'null_pointer.c'" sourceRngHash="-1869391378">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;null_pointer_016_gbl_doubleptr&quot; may possibly be null" ln="264" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-718707280" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="264" locStartPos="0" locEndLn="265" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="260" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="261" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="259" ElType="." desc="int i,j;" rngLn="259">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="260" ElType=".C" desc="malloc(...)" rngLn="260">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="260" ElType="!" desc="null_pointer_016_gbl_doubleptr=(long**) malloc(10*sizeof(long*));" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="262" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="262">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="264" ElType=".P" desc="null_pointer_016_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="264">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;null_pointer_016_func_001(...) != 0&quot; always evaluates to false" ln="298" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1727980212" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="298" locStartPos="0" locEndLn="299" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="276" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="277" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="276" ElType=".C" desc="void null_pointer_016()" rngLn="276">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="278" ElType="." desc="int flag=0,i,j;" rngLn="278">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="279" ElType="." desc="null_pointer_016_gbl_doubleptr=NULL;" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="280" ElType="." desc="goto label;" rngLn="280">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="298" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="297" ElType="." desc="label:" rngLn="297">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="298" ElType="!" desc="null_pointer_016_func_001(...)" rngLn="298">
          <ElDescList>
            <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="250" ElType="." desc="int ret ;" rngLn="250">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="251" ElType="." desc="if (flag ==0)" rngLn="251">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="252" ElType="!" desc="ret = 0;" rngLn="252">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="255" ElType="!" desc="return ret;" rngLn="255">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="298" ElType=".P" desc="if(null_pointer_016_func_001(flag)!=ZERO)" rngLn="298">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_017dst&quot; may possibly be null" ln="321" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1319616219" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="321" locStartPos="0" locEndLn="322" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="318" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="319" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="313" srcRngStartPos="0" srcRngEndLn="314" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="313" ElType="." desc="null_pointer_017dst = NULL;" rngLn="313">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="314" ElType="." desc="int i;" rngLn="314">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="316" ElType="." desc="while(flag)" rngLn="316">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="318" ElType=".C" desc="malloc(...)" rngLn="318">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="318" ElType="!" desc="null_pointer_017dst = (char**) malloc(5*sizeof(char*));" rngLn="318">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="319" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="319">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="321" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="321" ElType=".P" desc="null_pointer_017dst[i]=(char*) malloc(15*sizeof(char));" rngLn="321">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_017dst&quot; may possibly be null" ln="334" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="406290624" lang="cpp" locType="sr" config="1" hash="1494835228" locStartln="334" locStartPos="0" locEndLn="335" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" FirstElSrcRngStartln="313" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="314" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="330" ElType="." desc="int i;" rngLn="330">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="331" ElType="!" desc="null_pointer_017_func_001(0);" rngLn="331">
          <ElDescList>
            <ElDesc srcRngStartln="313" srcRngStartPos="0" srcRngEndLn="314" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="313" ElType=".C" desc="null_pointer_017dst = NULL;" rngLn="313">
              <Props>
                <Prop key="Tracked variables" val="null_pointer_017dst" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="314" ElType="." desc="int i;" rngLn="314">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="316" ElType="." desc="while(flag)" rngLn="316">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag != 0) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="332" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="332">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="334" srcRngStartPos="0" srcRngEndLn="335" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="334" ElType=".P" desc="strcpy (null_pointer_017dst[i],&quot;STRING&quot;);/*Tool should detect this line as error*/ /*ERROR:NULL pointer dereference*/" rngLn="334">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void null_pointer_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="355" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1494835228" NvActs="3" locStartln="355" locStartPos="0" locEndLn="440" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/null_pointer.c" srcRnghash="1494835228" ln="355" ElType="" desc="[Line 355] Duplicated function in file 'null_pointer.c'" sourceRngHash="-2124247711">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="374" srcRngStartPos="0" srcRngEndLn="459" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="374" ElType="" desc="[Line 374] Duplicated function in file 'null_pointer.c'" sourceRngHash="-2124247711">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="21" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1882745569" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="21" locStartPos="0" locEndLn="22" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="18" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="19" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="18" srcRngStartPos="0" srcRngEndLn="19" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="18" ElType=".C" desc="void overrun_st_001 ()" rngLn="18">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="20" ElType="!" desc="char buf[5];" rngLn="20">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="21" ElType=".P" desc="buf[5] = 1; /*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="21">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="32" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1476384335" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="32" locStartPos="0" locEndLn="33" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="29" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="30" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="29" ElType=".C" desc="void overrun_st_002 ()" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="31" ElType="!" desc="short buf[5];" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="32" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="32">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="44" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-758708523" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="44" locStartPos="0" locEndLn="45" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="40" ElType=".C" desc="void overrun_st_003 ()" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="42" ElType="!" desc="int buf[5] = {1, 2, 3, 4, 5};" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="43" ElType="." desc="int ret;" rngLn="43">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="44" ElType=".P" desc="ret = buf[5];/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="55" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1361714783" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="55" locStartPos="0" locEndLn="56" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="52" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="53" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="52" ElType=".C" desc="void overrun_st_004 ()" rngLn="52">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="54" ElType="!" desc="int buf[5];" rngLn="54">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="55" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="55">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="66" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1577178703" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="66" locStartPos="0" locEndLn="67" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="63" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="64" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="63" ElType=".C" desc="void overrun_st_005 ()" rngLn="63">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="65" ElType="!" desc="long buf[5];" rngLn="65">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="66" srcRngStartPos="0" srcRngEndLn="67" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="66" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="66">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="77" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1571572365" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="77" locStartPos="0" locEndLn="78" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="74" ElType=".C" desc="void overrun_st_006 ()" rngLn="74">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="76" ElType="!" desc="float buf[5];" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="77" ElType=".P" desc="buf[5] = 1.0;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="77">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="88" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-86031351" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="88" locStartPos="0" locEndLn="89" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="85" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="86" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="85" ElType=".C" desc="void overrun_st_007 ()" rngLn="85">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="87" ElType="!" desc="double buf[5];" rngLn="87">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="88" ElType=".P" desc="buf[5] = 1.0;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="88">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="99" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="42181353" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="99" locStartPos="0" locEndLn="100" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="96" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="97" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="96" ElType=".C" desc="void overrun_st_008 ()" rngLn="96">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="98" ElType="!" desc="int buf[5][6];" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="99" ElType=".P" desc="buf[5][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="99">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="110" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="677770324" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="110" locStartPos="0" locEndLn="111" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="107" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="108" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="107" ElType=".C" desc="void overrun_st_009 ()" rngLn="107">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="109" ElType="!" desc="int buf[5][6][7];" rngLn="109">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="110" ElType=".P" desc="buf[5][5][6] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;pbuf[4]&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="126" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-2139405840" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="126" locStartPos="0" locEndLn="127" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="118" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="119" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="118" ElType=".C" desc="void overrun_st_010 ()" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="120" ElType="." desc="int buf1[6];" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="121" ElType="." desc="int buf2[6];" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="122" ElType="." desc="int buf3[6];" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="123" ElType="." desc="int buf4[6];" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="124" ElType="." desc="int buf5[5];" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="125" ElType="." desc="int *pbuf[5] = {buf1, buf2, buf3, buf4, buf5};" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="126" ElType=".P" desc="pbuf[4][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="126">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;sbuf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="142" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1614676507" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="142" locStartPos="0" locEndLn="143" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="139" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="140" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="139" ElType=".C" desc="void overrun_st_011 ()" rngLn="139">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="141" ElType="!" desc="overrun_st_011_s_001 sbuf[5];" rngLn="141">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="142" ElType=".P" desc="sbuf[5].a = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="142">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;overrun_st_012_s_gbl.buf&quot; out of bounds at index 5. Correct index(es): [-2...4]" ln="158" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-2119061316" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="158" locStartPos="0" locEndLn="159" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="155" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="156" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="155" ElType=".C" desc="void overrun_st_012 ()" rngLn="155">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="158" srcRngStartPos="0" srcRngEndLn="159" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="158" ElType=".P" desc="overrun_st_012_s_gbl.buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="158">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="169" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-47525545" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="169" locStartPos="0" locEndLn="170" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="165" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="166" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="165" ElType=".C" desc="void overrun_st_013 ()" rngLn="165">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="167" ElType="!" desc="int buf[5];" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="168" ElType="." desc="int index = 5;" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="169" ElType=".P" desc="buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="169">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="194" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1146701947" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="194" locStartPos="0" locEndLn="195" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="190" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="191" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="190" ElType=".C" desc="void overrun_st_015 ()" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="192" ElType="!" desc="int buf[5];" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="193" ElType="." desc="int index = 2;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="194" ElType=".P" desc="buf[(2 * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="194">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="206" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="242122548" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="206" locStartPos="0" locEndLn="207" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="202" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="203" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="202" ElType=".C" desc="void overrun_st_016 ()" rngLn="202">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="204" ElType="!" desc="int buf[5];" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="205" ElType="." desc="int index = 2;" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="206" ElType=".P" desc="buf[(index * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="206">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="222" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-135478035" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="222" locStartPos="0" locEndLn="223" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="219" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="220" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="219" ElType=".C" desc="void overrun_st_017 ()" rngLn="219">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="221" ElType="!" desc="int buf[5];" rngLn="221">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="222" ElType="." desc="overrun_st_017_func_001()" rngLn="222">
          <ElDescList>
            <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="216" ElType="." desc="return 5;" rngLn="216">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="222" ElType=".P" desc="buf[overrun_st_017_func_001()] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="222">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;overrun_st_018_buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="233" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1172772567" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="233" locStartPos="0" locEndLn="234" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="236" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="237" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="236" ElType=".C" desc="void overrun_st_018 ()" rngLn="236">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="238" ElType="!" desc="overrun_st_018_func_001(5);" rngLn="238">
          <ElDescList>
            <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="233" ElType=".P" desc="overrun_st_018_buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="233">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="250" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="289542759" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="250" locStartPos="0" locEndLn="251" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="245" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="246" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="245" ElType=".C" desc="void overrun_st_019 ()" rngLn="245">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="247" ElType="!" desc="int buf[5];" rngLn="247">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="248" ElType="." desc="int indexes[4] = {3, 4, 5, 6};" rngLn="248">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="249" ElType="." desc="int index = 2;" rngLn="249">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="250" ElType=".P" desc="buf[indexes[index]] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="250">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="264" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="769075353" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="264" locStartPos="0" locEndLn="265" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="258" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="259" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="258" ElType=".C" desc="void overrun_st_020 ()" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="261" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="260" ElType="!" desc="int buf[5];" rngLn="260">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="261" ElType="." desc="int index = 5;" rngLn="261">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="262" ElType="." desc="int index1;" rngLn="262">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="263" ElType="." desc="index1 = index;" rngLn="263">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="264" ElType=".P" desc="buf[index1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="264">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="280" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1439577982" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="280" locStartPos="0" locEndLn="281" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="272" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="273" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="272" ElType=".C" desc="void overrun_st_021 ()" rngLn="272">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="274" ElType="!" desc="int buf[5];" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="275" ElType="." desc="int index = 5;" rngLn="275">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="276" ElType="." desc="int index1;" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="277" ElType="." desc="int index2;" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="278" ElType="." desc="index1 = index;" rngLn="278">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="279" ElType="." desc="index2 = index1;" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="280" ElType=".P" desc="buf[index2] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="280">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="293" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="590657630" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="293" locStartPos="0" locEndLn="294" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="288" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="289" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="288" srcRngStartPos="0" srcRngEndLn="289" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="288" ElType=".C" desc="void overrun_st_022 ()" rngLn="288">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="290" srcRngStartPos="0" srcRngEndLn="291" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="290" ElType="!" desc="char buf[5];" rngLn="290">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="291" srcRngStartPos="0" srcRngEndLn="292" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="291" ElType="." desc="char *p;" rngLn="291">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="292" ElType="!" desc="p = buf;" rngLn="292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="293" srcRngStartPos="0" srcRngEndLn="294" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="293" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="293">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="306" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1723994958" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="306" locStartPos="0" locEndLn="307" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="301" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="302" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="301" srcRngStartPos="0" srcRngEndLn="302" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="301" ElType=".C" desc="void overrun_st_023 ()" rngLn="301">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="303" srcRngStartPos="0" srcRngEndLn="304" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="303" ElType="!" desc="short buf[5];" rngLn="303">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="304" srcRngStartPos="0" srcRngEndLn="305" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="304" ElType="." desc="short *p;" rngLn="304">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="305" srcRngStartPos="0" srcRngEndLn="306" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="305" ElType="!" desc="p = buf;" rngLn="305">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="306" srcRngStartPos="0" srcRngEndLn="307" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="306" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="306">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="320" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1693457772" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="320" locStartPos="0" locEndLn="321" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="314" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="315" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="314" ElType=".C" desc="void overrun_st_024 ()" rngLn="314">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="316" srcRngStartPos="0" srcRngEndLn="317" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="316" ElType="!" desc="int buf[5] = {1, 2, 3, 4, 5};" rngLn="316">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="317" ElType="." desc="int *p;" rngLn="317">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="318" ElType="." desc="int ret;" rngLn="318">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="319" ElType="!" desc="p = buf;" rngLn="319">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="320" srcRngStartPos="0" srcRngEndLn="321" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="320" ElType=".P" desc="ret = *(p + 5);/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="320">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="333" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1618921260" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="333" locStartPos="0" locEndLn="334" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="328" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="329" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="328" srcRngStartPos="0" srcRngEndLn="329" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="328" ElType=".C" desc="void overrun_st_025 ()" rngLn="328">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="330" ElType="!" desc="int buf[5];" rngLn="330">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="331" ElType="." desc="int *p;" rngLn="331">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="332" ElType="!" desc="p = buf;" rngLn="332">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="333" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="333">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="346" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-434656078" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="346" locStartPos="0" locEndLn="347" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="341" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="342" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="341" srcRngStartPos="0" srcRngEndLn="342" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="341" ElType=".C" desc="void overrun_st_026 ()" rngLn="341">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="343" ElType="!" desc="long buf[5];" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="344" ElType="." desc="long *p;" rngLn="344">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="345" srcRngStartPos="0" srcRngEndLn="346" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="345" ElType="!" desc="p = buf;" rngLn="345">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="346" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="346">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="359" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-873434116" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="359" locStartPos="0" locEndLn="360" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="354" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="355" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="354" srcRngStartPos="0" srcRngEndLn="355" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="354" ElType=".C" desc="void overrun_st_027 ()" rngLn="354">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="356" srcRngStartPos="0" srcRngEndLn="357" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="356" ElType="!" desc="float buf[5];" rngLn="356">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="357" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="357" ElType="." desc="float *p;" rngLn="357">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="358" srcRngStartPos="0" srcRngEndLn="359" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="358" ElType="!" desc="p = buf;" rngLn="358">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="359" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="359">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="372" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="36213426" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="372" locStartPos="0" locEndLn="373" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="367" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="368" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="367" ElType=".C" desc="void overrun_st_028 ()" rngLn="367">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="369" ElType="!" desc="double buf[5];" rngLn="369">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="370" srcRngStartPos="0" srcRngEndLn="371" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="370" ElType="." desc="double *p;" rngLn="370">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="371" ElType="!" desc="p = buf;" rngLn="371">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="372" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="372">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;*pp&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="387" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="2120131208" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="387" locStartPos="0" locEndLn="388" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="380" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="381" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="380" ElType=".C" desc="void overrun_st_029 ()" rngLn="380">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="382" srcRngStartPos="0" srcRngEndLn="383" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="382" ElType="." desc="int buf[5];" rngLn="382">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="383" ElType="." desc="int *p;" rngLn="383">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="384" ElType="." desc="int **pp;" rngLn="384">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="385" ElType="." desc="p = buf;" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="386" ElType="." desc="pp = &amp;p;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="387" ElType=".P" desc="*(*pp + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="387">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p2&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="402" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1539418989" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="402" locStartPos="0" locEndLn="403" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="395" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="396" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="395" ElType=".C" desc="void overrun_st_030 ()" rngLn="395">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="397" ElType="!" desc="int buf[5];" rngLn="397">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="398" ElType="." desc="int *p1;" rngLn="398">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="399" ElType="." desc="int *p2;" rngLn="399">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="400" ElType="!" desc="p1 = buf;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="401" ElType="!" desc="p2 = p1;" rngLn="401">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="402" ElType=".P" desc="p2[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="402">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="415" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-28480584" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="415" locStartPos="0" locEndLn="416" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="411" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="412" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="411" srcRngStartPos="0" srcRngEndLn="412" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="411" ElType=".C" desc="void overrun_st_031 ()" rngLn="411">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="413" srcRngStartPos="0" srcRngEndLn="414" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="413" ElType="." desc="int *p;" rngLn="413">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="414" ElType="!" desc="p = overrun_st_031_buf_gbl;" rngLn="414">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="415" ElType=".P" desc="p[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="415">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="428" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1630057444" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="428" locStartPos="0" locEndLn="429" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="422" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="423" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="422" ElType=".C" desc="void overrun_st_032 ()" rngLn="422">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="424" ElType="!" desc="int buf[5];" rngLn="424">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="425" ElType="." desc="int *p;" rngLn="425">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="426" srcRngStartPos="0" srcRngEndLn="427" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="426" ElType="." desc="int index = 5;" rngLn="426">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="427" srcRngStartPos="0" srcRngEndLn="428" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="427" ElType="!" desc="p = buf;" rngLn="427">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="428" srcRngStartPos="0" srcRngEndLn="429" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="428" ElType=".P" desc="*(p + index) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="428">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="457" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1201880744" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="457" locStartPos="0" locEndLn="458" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="451" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="452" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="451" ElType=".C" desc="void overrun_st_034 ()" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="453" srcRngStartPos="0" srcRngEndLn="454" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="453" ElType="!" desc="int buf[5];" rngLn="453">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="454" srcRngStartPos="0" srcRngEndLn="455" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="454" ElType="." desc="int *p;" rngLn="454">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="455" srcRngStartPos="0" srcRngEndLn="456" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="455" ElType="." desc="int index = 2;" rngLn="455">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="456" srcRngStartPos="0" srcRngEndLn="457" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="456" ElType="!" desc="p = buf;" rngLn="456">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="457" ElType=".P" desc="*(p + ((2 * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="457">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="471" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="773163177" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="471" locStartPos="0" locEndLn="472" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="465" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="466" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="465" srcRngStartPos="0" srcRngEndLn="466" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="465" ElType=".C" desc="void overrun_st_035 ()" rngLn="465">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="467" srcRngStartPos="0" srcRngEndLn="468" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="467" ElType="!" desc="int buf[5];" rngLn="467">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="468" srcRngStartPos="0" srcRngEndLn="469" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="468" ElType="." desc="int *p;" rngLn="468">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="469" ElType="." desc="int index = 2;" rngLn="469">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="470" srcRngStartPos="0" srcRngEndLn="471" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="470" ElType="!" desc="p = buf;" rngLn="470">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="471" ElType=".P" desc="*(p + ((index * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="471">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="489" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1982806760" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="489" locStartPos="0" locEndLn="490" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="484" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="485" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="484" ElType=".C" desc="void overrun_st_036 ()" rngLn="484">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="486" srcRngStartPos="0" srcRngEndLn="487" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="486" ElType="!" desc="int buf[5];" rngLn="486">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="487" ElType="." desc="int *p;" rngLn="487">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="488" srcRngStartPos="0" srcRngEndLn="489" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="488" ElType="!" desc="p = buf;" rngLn="488">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="489" ElType="." desc="overrun_st_036_func_001()" rngLn="489">
          <ElDescList>
            <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="481" ElType="." desc="return 5;" rngLn="481">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="489" ElType=".P" desc="*(p + overrun_st_036_func_001()) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="489">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="502" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="646554402" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="502" locStartPos="0" locEndLn="503" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="506" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="507" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="506" ElType=".C" desc="void overrun_st_037 ()" rngLn="506">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="508" ElType="!" desc="overrun_st_037_func_001(5);" rngLn="508">
          <ElDescList>
            <ElDesc srcRngStartln="499" srcRngStartPos="0" srcRngEndLn="500" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="499" ElType="!" desc="int buf[5];" rngLn="499">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="500" srcRngStartPos="0" srcRngEndLn="501" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="500" ElType="." desc="int *p;" rngLn="500">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="501" ElType="!" desc="p = buf;" rngLn="501">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="502" ElType=".P" desc="*(p + index) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="502">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="522" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-416700684" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="522" locStartPos="0" locEndLn="523" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="515" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="516" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="515" ElType=".C" desc="void overrun_st_038 ()" rngLn="515">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="517" ElType="!" desc="int buf[5];" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="518" ElType="." desc="int *p;" rngLn="518">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="519" srcRngStartPos="0" srcRngEndLn="520" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="519" ElType="." desc="int indexes[4] = {3, 4, 5, 6};" rngLn="519">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="520" ElType="." desc="int index = 2;" rngLn="520">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="521" ElType="!" desc="p = buf;" rngLn="521">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="522" ElType=".P" desc="*(p + indexes[index]) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="522">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="538" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1461584918" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="538" locStartPos="0" locEndLn="539" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="530" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="531" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="530" srcRngStartPos="0" srcRngEndLn="531" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="530" ElType=".C" desc="void overrun_st_039 ()" rngLn="530">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="532" ElType="!" desc="int buf[5];" rngLn="532">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="533" srcRngStartPos="0" srcRngEndLn="534" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="533" ElType="." desc="int *p;" rngLn="533">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="534" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="534" ElType="." desc="int index = 5;" rngLn="534">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="535" srcRngStartPos="0" srcRngEndLn="536" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="535" ElType="." desc="int index1;" rngLn="535">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="536" srcRngStartPos="0" srcRngEndLn="537" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="536" ElType="." desc="index1 = index;" rngLn="536">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="537" ElType="!" desc="p = buf;" rngLn="537">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="538" srcRngStartPos="0" srcRngEndLn="539" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="538" ElType=".P" desc="*(p + index1) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="538">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="556" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1533949047" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="556" locStartPos="0" locEndLn="557" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="546" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="547" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="546" ElType=".C" desc="void overrun_st_040 ()" rngLn="546">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="548" ElType="!" desc="int buf[5];" rngLn="548">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="549" srcRngStartPos="0" srcRngEndLn="550" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="549" ElType="." desc="int *p;" rngLn="549">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="550" ElType="." desc="int index = 5;" rngLn="550">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="551" ElType="." desc="int index1;" rngLn="551">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="552" ElType="." desc="int index2;" rngLn="552">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="553" ElType="." desc="index1 = index;" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="554" ElType="." desc="index2 = index1;" rngLn="554">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="555" ElType="!" desc="p = buf;" rngLn="555">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="556" ElType=".P" desc="*(p + index2) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="556">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="570" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-894589469" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="570" locStartPos="0" locEndLn="571" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="564" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="565" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="564" srcRngStartPos="0" srcRngEndLn="565" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="564" ElType=".C" desc="void overrun_st_041 ()" rngLn="564">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="566" ElType="!" desc="int buf[5];" rngLn="566">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="567" srcRngStartPos="0" srcRngEndLn="568" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="567" ElType="." desc="int i;" rngLn="567">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="568" srcRngStartPos="0" srcRngEndLn="569" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="568" ElType="." desc="for (i = 0; i &lt;= 5; i ++)" rngLn="568">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="570" srcRngStartPos="0" srcRngEndLn="571" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="570" ElType="." desc="buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="570">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="568" srcRngStartPos="0" srcRngEndLn="569" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="568" ElType="." desc="for (i = 0; i &lt;= 5; i ++)" rngLn="568">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="570" srcRngStartPos="0" srcRngEndLn="571" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="570" ElType=".P" desc="buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="570">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [1...5]. Correct index(es): [0...4]" ln="588" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="386222823" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="588" locStartPos="0" locEndLn="589" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="579" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="580" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="579" srcRngStartPos="0" srcRngEndLn="580" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="579" ElType=".C" desc="void overrun_st_042 ()" rngLn="579">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="581" srcRngStartPos="0" srcRngEndLn="582" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="581" ElType="!" desc="int buf[5][6];" rngLn="581">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="582" srcRngStartPos="0" srcRngEndLn="583" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="582" ElType="." desc="int i;" rngLn="582">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="583" srcRngStartPos="0" srcRngEndLn="584" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="583" ElType="." desc="int j;" rngLn="583">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="584" srcRngStartPos="0" srcRngEndLn="585" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="584" ElType="." desc="for (i = 0; i &lt;= 5; i ++)" rngLn="584">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="586" srcRngStartPos="0" srcRngEndLn="587" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="586" ElType="." desc="for (j = 0; j &lt; 6; j ++)" rngLn="586">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 6) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="589" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="588" ElType="." desc="buf[i][j] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="588">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="586" srcRngStartPos="0" srcRngEndLn="587" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="586" ElType="." desc="for (j = 0; j &lt; 6; j ++)" rngLn="586">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 6) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="589" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="588" ElType="." desc="buf[i][j] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="588">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="586" srcRngStartPos="0" srcRngEndLn="587" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="586" ElType="." desc="for (j = 0; j &lt; 6; j ++)" rngLn="586">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 6) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="584" srcRngStartPos="0" srcRngEndLn="585" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="584" ElType="." desc="for (i = 0; i &lt;= 5; i ++)" rngLn="584">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="586" srcRngStartPos="0" srcRngEndLn="587" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="586" ElType="." desc="for (j = 0; j &lt; 6; j ++)" rngLn="586">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 6) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="589" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="588" ElType=".P" desc="buf[i][j] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="588">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void overrun_st_043 ( ) { int buf1 [ 6 ] ; int buf2 [ 6 ] ;...'" ln="599" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="2109898842" NvActs="3" locStartln="599" locStartPos="0" locEndLn="616" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <ElDescList>
        <ElDesc srcRngStartln="599" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="599" ElType="" desc="[Line 599] Duplicated function in file 'overrun_st.c'" sourceRngHash="-1296806391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="592" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/overrun_st.c" srcRnghash="-632044352" ln="592" ElType="" desc="[Line 592] Duplicated function in file 'overrun_st.c'" sourceRngHash="-552789504">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="642" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-333134982" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="642" locStartPos="0" locEndLn="643" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="645" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="646" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="645" srcRngStartPos="0" srcRngEndLn="646" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="645" ElType=".C" desc="void overrun_st_045 ()" rngLn="645">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="647" srcRngStartPos="0" srcRngEndLn="648" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="647" ElType="!" desc="int buf[5];" rngLn="647">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="648" ElType="!" desc="overrun_st_045_func_001(buf);" rngLn="648">
          <ElDescList>
            <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="642" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="642">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="658" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1686575456" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="658" locStartPos="0" locEndLn="659" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="661" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="662" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="661" srcRngStartPos="0" srcRngEndLn="662" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="661" ElType=".C" desc="void overrun_st_046 ()" rngLn="661">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="663" srcRngStartPos="0" srcRngEndLn="664" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="663" ElType="!" desc="int buf[5];" rngLn="663">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="664" srcRngStartPos="0" srcRngEndLn="665" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="664" ElType="!" desc="overrun_st_046_func_001(buf);" rngLn="664">
          <ElDescList>
            <ElDesc srcRngStartln="658" srcRngStartPos="0" srcRngEndLn="659" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="658" ElType=".P" desc="*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="658">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="674" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-298457919" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="674" locStartPos="0" locEndLn="675" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="677" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="678" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="677" srcRngStartPos="0" srcRngEndLn="678" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="677" ElType=".C" desc="void overrun_st_047 ()" rngLn="677">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="679" srcRngStartPos="0" srcRngEndLn="680" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="679" ElType="!" desc="int buf[5];" rngLn="679">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="680" srcRngStartPos="0" srcRngEndLn="681" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="680" ElType="!" desc="overrun_st_047_func_001(buf);" rngLn="680">
          <ElDescList>
            <ElDesc srcRngStartln="674" srcRngStartPos="0" srcRngEndLn="675" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="674" ElType=".P" desc="p[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="674">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="689" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-964427441" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="689" locStartPos="0" locEndLn="690" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="692" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="693" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="692" srcRngStartPos="0" srcRngEndLn="693" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="692" ElType=".C" desc="void overrun_st_048 ()" rngLn="692">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="694" srcRngStartPos="0" srcRngEndLn="695" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="694" ElType="!" desc="int buf[5];" rngLn="694">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="695" srcRngStartPos="0" srcRngEndLn="696" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="695" ElType="!" desc="overrun_st_048_func_001(buf);" rngLn="695">
          <ElDescList>
            <ElDesc srcRngStartln="689" srcRngStartPos="0" srcRngEndLn="690" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="689" ElType=".P" desc="*(buf + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="689">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="706" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1039446699" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="706" locStartPos="0" locEndLn="707" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="703" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="704" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="703" srcRngStartPos="0" srcRngEndLn="704" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="703" ElType=".C" desc="void overrun_st_049 ()" rngLn="703">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="705" srcRngStartPos="0" srcRngEndLn="706" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="705" ElType="!" desc="int buf[] = {1, 2, 3, 4, 5};" rngLn="705">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="706" srcRngStartPos="0" srcRngEndLn="707" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="706" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="706">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="724" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1740543990" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="724" locStartPos="0" locEndLn="725" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="714" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="715" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="714" srcRngStartPos="0" srcRngEndLn="715" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="714" ElType=".C" desc="void overrun_st_050 ()" rngLn="714">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="716" srcRngStartPos="0" srcRngEndLn="717" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="716" ElType="!" desc="int buf[][6] =" rngLn="716">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="724" srcRngStartPos="0" srcRngEndLn="725" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="724" ElType=".P" desc="buf[5][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="724">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="749" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-1886349905" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="749" locStartPos="0" locEndLn="750" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="746" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="747" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="746" srcRngStartPos="0" srcRngEndLn="747" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="746" ElType=".C" desc="void overrun_st_052 ()" rngLn="746">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="748" srcRngStartPos="0" srcRngEndLn="749" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="748" ElType="!" desc="char buf[] = &quot;1234&quot;;" rngLn="748">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="749" srcRngStartPos="0" srcRngEndLn="750" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="749" ElType=".P" desc="buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="749">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 2. Correct index(es): [0...1]" ln="761" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="385757713" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="761" locStartPos="0" locEndLn="762" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="756" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="757" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="756" srcRngStartPos="0" srcRngEndLn="757" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="756" ElType=".C" desc="void overrun_st_053 ()" rngLn="756">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="758" srcRngStartPos="0" srcRngEndLn="759" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="758" ElType="!" desc="char buf[8];" rngLn="758">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="759" srcRngStartPos="0" srcRngEndLn="760" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="759" ElType="." desc="int *p;" rngLn="759">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="760" srcRngStartPos="0" srcRngEndLn="761" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="760" ElType="!" desc="p = (int*)buf;" rngLn="760">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="761" srcRngStartPos="0" srcRngEndLn="762" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="761" ElType=".P" desc="*(p + 2) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="761">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index 50. Correct index(es): [0...19]" ln="773" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1333568112" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="773" locStartPos="0" locEndLn="774" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" FirstElSrcRngStartln="769" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="770" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="769" srcRngStartPos="0" srcRngEndLn="770" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="769" ElType=".C" desc="void overrun_st_054 ()" rngLn="769">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="771" srcRngStartPos="0" srcRngEndLn="772" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="771" ElType="." desc="char *p;" rngLn="771">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="772" srcRngStartPos="0" srcRngEndLn="773" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="772" ElType="!" desc="p = (char*)overrun_st_054_buf_gbl;" rngLn="772">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="773" srcRngStartPos="0" srcRngEndLn="774" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="773" ElType=".P" desc="*(p + 50) = 1; /*Tool should detect this line as error*/ /*ERROR: buffer overrun */" rngLn="773">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 55 is out of acceptable range: 'lower than 30'" ln="782" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="2109898842" locStartln="782" locStartPos="0" locEndLn="783" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" />
    <DupViol msg="Duplicated function: 'void overrun_st_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="783" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="2109898842" NvActs="3" locStartln="783" locStartPos="0" locEndLn="1053" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c">
      <ElDescList>
        <ElDesc srcRngStartln="783" srcRngStartPos="0" srcRngEndLn="1053" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/overrun_st.c" srcRnghash="2109898842" ln="783" ElType="" desc="[Line 783] Duplicated function in file 'overrun_st.c'" sourceRngHash="682328362">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="775" srcRngStartPos="0" srcRngEndLn="1045" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/overrun_st.c" srcRnghash="-632044352" ln="775" ElType="" desc="[Line 775] Duplicated function in file 'overrun_st.c'" sourceRngHash="1624493760">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void pow_related_errors_005 ( ) { double arr [ ] = { 2.0 ,...'" ln="99" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="51916144" NvActs="3" locStartln="99" locStartPos="0" locEndLn="112" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c">
      <ElDescList>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="99" ElType="" desc="[Line 99] Duplicated function in file 'pow_related_errors.c'" sourceRngHash="-4608360">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="97" ElType="" desc="[Line 97] Duplicated function in file 'pow_related_errors.c'" sourceRngHash="1620257005">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;newarr&quot; may possibly be null" ln="154" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="552751178" lang="cpp" locType="sr" urgent="true" config="1" hash="51916144" locStartln="154" locStartPos="0" locEndLn="155" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" FirstElSrcRngStartln="151" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="152" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="148" ElType="." desc="double exponent=2;" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="149" ElType="." desc="double ans;" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="150" ElType="." desc="double ans1;" rngLn="150">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="151" ElType=".C" desc="malloc(...)" rngLn="151">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="151" ElType="!" desc="pow_related_errors_007_s* newarr = (pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="151">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="152" ElType="." desc="pow_related_errors_007_s* ptr_newarr =(pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="152">
          <Props>
            <Prop key="Tracked variables" val="newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: newarr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="154" ElType=".P" desc="newarr->arr[0]=10^3800;" rngLn="154">
          <Props>
            <Prop key="Tracked variables" val="newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: newarr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr_newarr&quot; may possibly be null" ln="155" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="312790487" lang="cpp" locType="sr" urgent="true" config="1" hash="51916144" locStartln="155" locStartPos="0" locEndLn="156" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" FirstElSrcRngStartln="152" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="153" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="148" ElType="." desc="double exponent=2;" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="149" ElType="." desc="double ans;" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="150" ElType="." desc="double ans1;" rngLn="150">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="151" ElType="." desc="pow_related_errors_007_s* newarr = (pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="151">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="152" ElType=".C" desc="malloc(...)" rngLn="152">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="152" ElType="!" desc="pow_related_errors_007_s* ptr_newarr =(pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="154" ElType="." desc="newarr->arr[0]=10^3800;" rngLn="154">
          <Props>
            <Prop key="Tracked variables" val="ptr_newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr_newarr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="155" ElType=".P" desc="ptr_newarr->arr[0]=10^3800;" rngLn="155">
          <Props>
            <Prop key="Tracked variables" val="ptr_newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr_newarr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 30 is out of acceptable range: 'lower than 30'" ln="499" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="51916144" locStartln="499" locStartPos="0" locEndLn="500" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" />
    <DupViol msg="Duplicated function: 'void pow_related_errors_main ( ) { if ( vflag == 1 || vflag...'" ln="500" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="51916144" NvActs="3" locStartln="500" locStartPos="0" locEndLn="646" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c">
      <ElDescList>
        <ElDesc srcRngStartln="500" srcRngStartPos="0" srcRngEndLn="646" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/pow_related_errors.c" srcRnghash="51916144" ln="500" ElType="" desc="[Line 500] Duplicated function in file 'pow_related_errors.c'" sourceRngHash="-794717660">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="639" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="493" ElType="" desc="[Line 493] Duplicated function in file 'pow_related_errors.c'" sourceRngHash="-794717660">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <StdViol msg="Loop does not contain terminate point" ln="71" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-937758087" locStartln="71" locStartPos="1" locEndLn="71" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" />
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="91" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2111991297" lang="cpp" locType="sr" config="1" hash="-937758087" locStartln="91" locStartPos="0" locEndLn="92" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" FirstElSrcRngStartln="90" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="91" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" srcRnghash="-937758087" ln="88" ElType="." desc="if(instance1==0)" rngLn="88">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (instance1 == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" srcRnghash="-937758087" ln="90" ElType=".C" desc="malloc(...)" rngLn="90">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" srcRnghash="-937758087" ln="90" ElType="!" desc="int* ptr=(int*) malloc(10*sizeof(int));" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" srcRnghash="-937758087" ln="91" ElType=".P" desc="memcpy(ptr,&quot;This is test&quot;, 0);" rngLn="91">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="101" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="-937758087" locStartln="101" locStartPos="1" locEndLn="101" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" />
    <DupViol msg="Duplicated function: 'void race_condition_main ( ) { if ( vflag == 1 || vflag ==...'" ln="416" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-937758087" NvActs="3" locStartln="416" locStartPos="0" locEndLn="461" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/race_condition.c">
      <ElDescList>
        <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="461" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/race_condition.c" srcRnghash="-937758087" ln="416" ElType="" desc="[Line 416] Duplicated function in file 'race_condition.c'" sourceRngHash="-1301528887">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="464" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" srcRnghash="1421194626" ln="464" ElType="" desc="[Line 464] Duplicated function in file 'race_condition.c'" sourceRngHash="-1301528887">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;a &lt; 10&quot; always evaluates to true" ln="45" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1144667520" lang="cpp" locType="sr" config="1" hash="1733627511" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" FirstElSrcRngStartln="38" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="39" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="38" ElType=".C" desc="void redundant_cond_002 ()" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="40" ElType="." desc="int a;" rngLn="40">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="41" ElType="." desc="int b = 0;" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="42" ElType="." desc="int ret;" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="44" ElType="!" desc="a = rand();" rngLn="44">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="45" ElType=".P" desc="if ((a &lt; 5) &amp;&amp; (a &lt; 10))/*Tool should detect this line as error*/ /*ERROR:Redundant condition*/" rngLn="45">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a &lt; 5) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a &lt; 10&quot; always evaluates to true" ln="83" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="370190174" lang="cpp" locType="sr" config="1" hash="1733627511" locStartln="83" locStartPos="0" locEndLn="84" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="76" ElType=".C" desc="void redundant_cond_004 ()" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="78" ElType="." desc="int a;" rngLn="78">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="79" ElType="." desc="int b = 0;" rngLn="79">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="80" ElType="." desc="int ret;" rngLn="80">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="82" ElType="!" desc="a = rand();" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="83" ElType=".P" desc="if (((0 &lt; a) &amp;&amp; (a &lt; 8)) &amp;&amp; ((5 &lt; a) &amp;&amp; (a &lt; 10)))/*Tool should detect this line as error*/ /*ERROR:Redundant condition*/" rngLn="83">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (0 &lt; a) (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: (a &lt; 8) (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: (5 &lt; a) (assuming true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;10 &lt; a&quot; always evaluates to false" ln="102" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1019977273" lang="cpp" locType="sr" config="1" hash="1733627511" locStartln="102" locStartPos="0" locEndLn="103" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" FirstElSrcRngStartln="95" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="96" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="95" ElType=".C" desc="void redundant_cond_005 ()" rngLn="95">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="97" srcRngStartPos="0" srcRngEndLn="98" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="97" ElType="." desc="int a;" rngLn="97">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="98" ElType="." desc="int b = 0;" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="99" ElType="." desc="int ret;" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="101" srcRngStartPos="0" srcRngEndLn="102" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="101" ElType="!" desc="a = rand();" rngLn="101">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="102" srcRngStartPos="0" srcRngEndLn="103" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="102" ElType=".P" desc="if ((5 &lt; a) || (10 &lt; a))/*Tool should detect this line as error*/ /*ERROR:Redundant condition*/" rngLn="102">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (5 &lt; a) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a &lt; 10&quot; always evaluates to true" ln="123" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1144667520" lang="cpp" locType="sr" config="1" hash="1733627511" locStartln="123" locStartPos="0" locEndLn="124" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" FirstElSrcRngStartln="114" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="115" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="114" ElType=".C" desc="void redundant_cond_006 ()" rngLn="114">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="116" ElType="." desc="int a;" rngLn="116">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="117" ElType="." desc="int b = 0;" rngLn="117">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="118" ElType="." desc="int ret;" rngLn="118">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="120" ElType="!" desc="a = rand();" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="121" ElType="." desc="if (a &lt; 5)" rngLn="121">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a &lt; 5) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="123" ElType=".P" desc="if (a &lt; 10)/*Tool should detect this line as error*/ /*ERROR:Redundant condition*/" rngLn="123">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void redundant_cond_main ( ) { if ( vflag == 1 || vflag ==...'" ln="293" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1733627511" NvActs="3" locStartln="293" locStartPos="0" locEndLn="363" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c">
      <ElDescList>
        <ElDesc srcRngStartln="293" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/redundant_cond.c" srcRnghash="1733627511" ln="293" ElType="" desc="[Line 293] Duplicated function in file 'redundant_cond.c'" sourceRngHash="-1855291036">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="362" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/redundant_cond.c" srcRnghash="641194399" ln="292" ElType="" desc="[Line 292] Duplicated function in file 'redundant_cond.c'" sourceRngHash="-148118486">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <StdViol msg="The function 'return_local_001_func_001' returns pointer to local object" ln="19" sev="3" auth="kali" rule="MISRA2004-17_6_a" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="146637640" locStartln="19" locStartPos="1" locEndLn="19" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/return_local.c" />
    <DupViol msg="Duplicated function: 'void sign_conv_main ( ) { if ( vflag == 1 || vflag == 888 ) {...'" ln="272" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1183046744" NvActs="3" locStartln="272" locStartPos="0" locEndLn="367" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/sign_conv.c">
      <ElDescList>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/sign_conv.c" srcRnghash="-1183046744" ln="272" ElType="" desc="[Line 272] Duplicated function in file 'sign_conv.c'" sourceRngHash="-1835009212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/sign_conv.c" srcRnghash="-1959952614" ln="272" ElType="" desc="[Line 272] Duplicated function in file 'sign_conv.c'" sourceRngHash="-1835009212">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Call to a blocking function inside a critical section: sleep" ln="50" ruleSAFMsg="Point where the blocking function is called" auth="kali" sev="1" rule="BD-TRS-TSHL" ruleSCSCMsg="Point where the critical section begins" tool="c++test" id="-1967425419" lang="cpp" locType="sr" config="1" hash="95050290" locStartln="50" locStartPos="0" locEndLn="51" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" FirstElSrcRngStartln="47" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="48" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="47" ElType=".C" desc="pthread_mutex_lock(sleep_lock_001_glb_mutex);" rngLn="47">
          <Props />
          <Anns>
            <Ann msg="Point where the critical section begins" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="48" ElType="." desc="sleep_lock_001_glb_data = (sleep_lock_001_glb_data % 100) + 1;" rngLn="48">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="50" ElType=".P" desc="sleep(3600);/*Tool should detect this line as error*/ /*Error:Long Sleep */" rngLn="50">
          <Props />
          <Anns>
            <Ann msg="Point where the blocking function is called" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="68" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="95050290" locStartln="68" locStartPos="1" locEndLn="68" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" />
    <FlowViol msg="Call to a blocking function inside a critical section: recv" ln="122" ruleSAFMsg="Point where the blocking function is called" auth="kali" sev="1" rule="BD-TRS-TSHL" ruleSCSCMsg="Point where the critical section begins" tool="c++test" id="-1690425315" lang="cpp" locType="sr" urgent="true" config="1" hash="95050290" locStartln="122" locStartPos="0" locEndLn="123" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" FirstElSrcRngStartln="117" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="118" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="117" ElType=".C" desc="pthread_mutex_lock(sleep_lock_002_glb_mutex);" rngLn="117">
          <Props />
          <Anns>
            <Ann msg="Point where the critical section begins" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="122" ElType=".P" desc="sleep_lock_002_glb_size =" rngLn="122">
          <Props />
          <Anns>
            <Ann msg="Point where the blocking function is called" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Call to a blocking function inside a critical section: sleep" ln="124" ruleSAFMsg="Point where the blocking function is called" auth="kali" sev="1" rule="BD-TRS-TSHL" ruleSCSCMsg="Point where the critical section begins" tool="c++test" id="550619923" lang="cpp" locType="sr" config="1" hash="95050290" locStartln="124" locStartPos="0" locEndLn="125" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" FirstElSrcRngStartln="117" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="118" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="117" ElType=".C" desc="pthread_mutex_lock(sleep_lock_002_glb_mutex);" rngLn="117">
          <Props />
          <Anns>
            <Ann msg="Point where the critical section begins" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="122" ElType="." desc="sleep_lock_002_glb_size =" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="124" ElType=".P" desc="sleep(3600);/*Tool should detect this line as error*/ /*Error:Long Sleep */" rngLn="124">
          <Props />
          <Anns>
            <Ann msg="Point where the blocking function is called" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="146" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="95050290" locStartln="146" locStartPos="1" locEndLn="146" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" />
    <FlowViol msg="Call to a blocking function inside a critical section: sleep" ln="173" ruleSAFMsg="Point where the blocking function is called" auth="kali" sev="1" rule="BD-TRS-TSHL" ruleSCSCMsg="Point where the critical section begins" tool="c++test" id="-1728762823" lang="cpp" locType="sr" urgent="true" config="1" hash="95050290" locStartln="173" locStartPos="0" locEndLn="174" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" FirstElSrcRngStartln="179" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="180" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="179" ElType=".C" desc="pthread_mutex_lock(sleep_lock_003_glb_mutex);" rngLn="179">
          <Props />
          <Anns>
            <Ann msg="Point where the critical section begins" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="180" ElType="." desc="sleep_lock_003_glb_data = (sleep_lock_003_glb_data % 100) + 1;" rngLn="180">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="182" ElType="!" desc="sleep_lock_003_func_001();" rngLn="182">
          <ElDescList>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" srcRnghash="95050290" ln="173" ElType=".P" desc="sleep(3600);/*Tool should detect this line as error*/ /*Error:Long Sleep */" rngLn="173">
              <Props />
              <Anns>
                <Ann msg="Point where the blocking function is called" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="200" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="95050290" locStartln="200" locStartPos="1" locEndLn="200" locEndPos="2" locFile="/ITC-Benchmarks/01.w_Defects/sleep_lock.c" />
    <DupViol msg="Duplicated function: 'void st_cross_thread_access_001 ( ) { # if ! defined (...'" ln="74" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="74" locStartPos="0" locEndLn="89" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="74" ElType="" desc="[Line 74] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="1187835758">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="75" ElType="" desc="[Line 75] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="1187835758">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * st_cross_thread_access_002_tsk_001 ( void * pram ) { #...'" ln="121" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="121" locStartPos="0" locEndLn="144" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="121" ElType="" desc="[Line 121] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-1400962703">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="122" ElType="" desc="[Line 122] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-1400962703">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;st_cross_thread_access_003_func_002(...) > 1&quot; always evaluates to true" ln="219" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1579049149" lang="cpp" locType="sr" config="1" hash="321203265" locStartln="219" locStartPos="0" locEndLn="220" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="215" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="216" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="215" ElType=".C" desc="void * st_cross_thread_access_003_tsk_001 (void *pram)" rngLn="215">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="217" ElType="." desc="float fptr = 50.2;" rngLn="217">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="219" ElType="!" desc="st_cross_thread_access_003_func_002(...)" rngLn="219">
          <ElDescList>
            <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="234" ElType="!" desc="int st_cross_thread_access_003_func_002 (int a )" rngLn="234">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="236" ElType="." desc="int ret = 0;" rngLn="236">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="237" ElType="." desc="if (a > 1)" rngLn="237">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="239" ElType="!" desc="ret = a++;" rngLn="239">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="241" ElType="!" desc="return ret;" rngLn="241">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="219" ElType=".P" desc="if(st_cross_thread_access_003_func_002(10) >1)" rngLn="219">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;st_cross_thread_access_003_func_002(...) != 0&quot; always evaluates to true" ln="248" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="591517317" lang="cpp" locType="sr" config="1" hash="321203265" locStartln="248" locStartPos="0" locEndLn="249" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="244" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="245" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="244" ElType=".C" desc="void* st_cross_thread_access_003_tsk_002 (void *pram)" rngLn="244">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="248" ElType="!" desc="st_cross_thread_access_003_func_002(...)" rngLn="248">
          <ElDescList>
            <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="234" ElType="!" desc="int st_cross_thread_access_003_func_002 (int a )" rngLn="234">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="236" ElType="." desc="int ret = 0;" rngLn="236">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="237" ElType="." desc="if (a > 1)" rngLn="237">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="239" ElType="!" desc="ret = a++;" rngLn="239">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="241" ElType="!" desc="return ret;" rngLn="241">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="248" ElType=".P" desc="if(st_cross_thread_access_003_func_002(10) !=0)" rngLn="248">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void st_cross_thread_access_003 ( ) { # if ! defined (...'" ln="260" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="260" locStartPos="0" locEndLn="271" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="260" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="260" ElType="" desc="[Line 260] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-1991584881">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="261" ElType="" desc="[Line 261] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-1991584881">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * st_cross_thread_access_004_tsk_001 ( void * input ) {...'" ln="296" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="296" locStartPos="0" locEndLn="321" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="296" srcRngStartPos="0" srcRngEndLn="321" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="296" ElType="" desc="[Line 296] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="241263804">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="322" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="297" ElType="" desc="[Line 297] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="241263804">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * st_cross_thread_access_005_tsk_001 ( void * pram ) { #...'" ln="377" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="377" locStartPos="0" locEndLn="400" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="377" ElType="" desc="[Line 377] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="904044625">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="378" ElType="" desc="[Line 378] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="904044625">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * st_cross_thread_access_006_tsk_001 ( void * input ) {...'" ln="461" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="461" locStartPos="0" locEndLn="483" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="483" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="461" ElType="" desc="[Line 461] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="72885432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="462" srcRngStartPos="0" srcRngEndLn="484" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="462" ElType="" desc="[Line 462] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="72885432">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void st_cross_thread_access_006 ( ) { int thread_set = 0 ; #...'" ln="511" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="511" locStartPos="0" locEndLn="529" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="529" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="511" ElType="" desc="[Line 511] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-334186964">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="529" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="511" ElType="" desc="[Line 511] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="-334186964">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="517" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="321203265" locStartln="517" locStartPos="0" locEndLn="518" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="510" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="511" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="510" ElType=".C" desc="void st_cross_thread_access_006 ()" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="512" ElType="!" desc="int thread_set = 0;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="514" ElType="." desc="pthread_t th1,th2;" rngLn="514">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="515" ElType="." desc="intptr_t t1 = 10;" rngLn="515">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="516" ElType="." desc="intptr_t t2 = 20;" rngLn="516">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="517" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="517">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void st_cross_thread_access_main ( ) { if ( vflag == 1 ||...'" ln="537" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="321203265" NvActs="3" locStartln="537" locStartPos="0" locEndLn="567" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_cross_thread_access.c" srcRnghash="321203265" ln="537" ElType="" desc="[Line 537] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="713991208">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="537" ElType="" desc="[Line 537] Duplicated function in file 'st_cross_thread_access.c'" sourceRngHash="713991208">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="117" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1907306665" lang="cpp" locType="sr" config="1" hash="-820120507" locStartln="117" locStartPos="0" locEndLn="118" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" FirstElSrcRngStartln="123" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="124" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="123" ElType=".C" desc="st_overflow_004_s_001 s;" rngLn="123">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="124" ElType="!" desc="st_overflow_004_func_001(s);" rngLn="124">
          <ElDescList>
            <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="115" ElType="." desc="char buf[131072]; /* 128 Kbytes *//*Tool should detect this line as error*/ /*ERROR:Stack overflow*/" rngLn="115">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="116" ElType="." desc="buf[0] = 1;" rngLn="116">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="117" ElType=".P" desc="st_overflow_004_func_002(s);" rngLn="117">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="143" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="819433282" lang="cpp" locType="sr" config="1" hash="-820120507" locStartln="143" locStartPos="0" locEndLn="144" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" FirstElSrcRngStartln="154" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="155" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="153" ElType="." desc="char buf[4096]; /* 4 Kbytes */" rngLn="153">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="154" ElType=".C" desc="st_overflow_005_s_001 s;" rngLn="154">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="155" ElType="!" desc="st_overflow_005_func_001(s, 10);" rngLn="155">
          <ElDescList>
            <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="141" ElType="." desc="if (cnt > 0)" rngLn="141">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Condition evaluation: (cnt > 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="143" ElType=".P" desc="st_overflow_005_func_001(s, cnt - 1); /* 1 Kbytes */" rngLn="143">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="189" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-548747768" lang="cpp" locType="sr" config="1" hash="-820120507" locStartln="189" locStartPos="0" locEndLn="190" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" FirstElSrcRngStartln="186" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="187" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="186" ElType=".C" desc="st_overflow_006_s_001 s;" rngLn="186">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="187" ElType="." desc="void (*func)(st_overflow_006_s_001);" rngLn="187">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="188" ElType="." desc="func = st_overflow_006_func_001;" rngLn="188">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="189" ElType=".P" desc="func(s);" rngLn="189">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="214" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1869620051" lang="cpp" locType="sr" config="1" hash="-820120507" locStartln="214" locStartPos="0" locEndLn="215" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" FirstElSrcRngStartln="228" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="229" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="228" ElType=".C" desc="st_overflow_007_s_001 s; /* 6 Kbytes */" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="229" ElType="." desc="int flag = 10;" rngLn="229">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="230" ElType="." desc="if (flag)" rngLn="230">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="232" ElType="!" desc="st_overflow_007_func_001(s); /* 6 Kbytes */" rngLn="232">
          <ElDescList>
            <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="211" ElType="." desc="char buf[262144]; /* 256 Kbytes */" rngLn="211">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="212" ElType="." desc="s.buf[0] = 1;" rngLn="212">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="213" ElType="." desc="buf[0] = 1;" rngLn="213">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="214" ElType=".P" desc="st_overflow_007_func_002(s);" rngLn="214">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="230" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2140741479" lang="cpp" locType="sr" config="1" hash="-820120507" locStartln="230" locStartPos="0" locEndLn="231" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" FirstElSrcRngStartln="226" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="227" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="226" srcRngStartPos="0" srcRngEndLn="227" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="226" ElType=".C" desc="void st_overflow_007 ()" rngLn="226">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="228" ElType="." desc="st_overflow_007_s_001 s; /* 6 Kbytes */" rngLn="228">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="229" ElType="!" desc="int flag = 10;" rngLn="229">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="230" ElType=".P" desc="if (flag)" rngLn="230">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void st_overflow_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="247" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-820120507" NvActs="3" locStartln="247" locStartPos="0" locEndLn="282" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c">
      <ElDescList>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_overflow.c" srcRnghash="-820120507" ln="247" ElType="" desc="[Line 247] Duplicated function in file 'st_overflow.c'" sourceRngHash="-1103208442">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="249" ElType="" desc="[Line 249] Duplicated function in file 'st_overflow.c'" sourceRngHash="-1103208442">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;s1&quot; is used prior to initialization" ln="131" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="563821056" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="120" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="121" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="120" ElType=".C" desc="st_underrun_004_s_001 s1;" rngLn="120">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="121" ElType="." desc="st_underrun_004_func_002(s);" rngLn="121">
          <ElDescList>
            <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="114" ElType="." desc="char buf[10] = &quot;STRING&quot;;" rngLn="114">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="115" ElType="." desc="strcpy(s->buf,buf);" rngLn="115">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="122" ElType="." desc="int len = strlen(s->buf) - 1;" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="125" ElType="." desc="s->buf[len] = 'B';" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="126" ElType="." desc="s1.buf[len] = s->buf[len];" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="127" ElType="." desc="len--;" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="130" ElType="." desc="}while (s->buf[len] != 'Z');/*Tool should detect this line as error*/ /* Stack Under RUN error */" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (s->buf[len] != 90) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="131" ElType=".P" desc="return s1;" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s1" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;s.buf&quot; out of bounds at index &lt;= -1. Correct index(es): [0...9]" ln="160" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1651935392" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="160" locStartPos="0" locEndLn="161" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="148" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="149" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="148" ElType=".C" desc="void st_underrun_005_func_001 (st_underrun_005_s_001 s, int cnt)" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="150" ElType="." desc="while (s.buf[cnt] != 'Z' )" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (s.buf[cnt] != 90) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="152" ElType="." desc="cnt--;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="153" ElType="." desc="if(cnt>0)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (cnt > 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="160" ElType="." desc="s.buf[cnt] = 'C';" rngLn="160">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="150" ElType="." desc="while (s.buf[cnt] != 'Z' )" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (s.buf[cnt] != 90) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="152" ElType="." desc="cnt--;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="153" ElType="." desc="if(cnt>0)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (cnt > 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="160" ElType=".P" desc="s.buf[cnt] = 'C';" rngLn="160">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Overflow when writing to buffer &quot;s.buf&quot; (char[10], 10 bytes large). Number of bytes written = 12" ln="204" ruleSAFMsg="Point where the buffer overflow occurs" auth="kali" sev="1" rule="BD-PB-OVERFWR" ruleSCSCMsg="Point where number of elements to write is defined" tool="c++test" id="585674697" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="204" locStartPos="0" locEndLn="205" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="204" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="205" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="203" ElType="." desc="st_underrun_006_s_001 s;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="204" ElType="CP" desc="strcpy(s.buf,&quot;STRING !!!!&quot;);" rngLn="204">
          <Props />
          <Anns>
            <Ann msg="Point where number of elements to write is defined" kind="cause" />
            <Ann msg="Point where the buffer overflow occurs" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="207" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1624216505" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="207" locStartPos="0" locEndLn="208" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="203" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="204" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="203" ElType=".C" desc="st_underrun_006_s_001 s;" rngLn="203">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="204" ElType="." desc="strcpy(s.buf,&quot;STRING !!!!&quot;);" rngLn="204">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="205" ElType="." desc="void (*func)(st_underrun_006_s_001);" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="206" ElType="." desc="func = st_underrun_006_func_001;" rngLn="206">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="207" ElType=".P" desc="func(s);" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;s->buf&quot;" ln="225" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-OVERFNZT" ruleSCSCMsg="Start of the path" tool="c++test" id="2098845145" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="225" locStartPos="0" locEndLn="226" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="240" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="241" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="240" ElType=".C" desc="void st_underrun_007 ()" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="242" ElType="." desc="int flag = 0;" rngLn="242">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="243" ElType="." desc="st_underrun_007_s_001 s;" rngLn="243">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="244" ElType="." desc="s.buf[0] = 1;" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="245" ElType="." desc="if (flag >1 )" rngLn="245">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag > 1) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="251" ElType="!" desc="st_underrun_007_func_001(&amp;s);" rngLn="251">
          <ElDescList>
            <ElDesc srcRngStartln="225" srcRngStartPos="0" srcRngEndLn="226" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="225" ElType=".P" desc="strlen(...)" rngLn="225">
              <Props />
              <Anns>
                <Ann msg="Not zero-terminated string: s->buf" kind="comment" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 1&quot; always evaluates to false" ln="245" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-949494229" lang="cpp" locType="sr" config="1" hash="-700153601" locStartln="245" locStartPos="0" locEndLn="246" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" FirstElSrcRngStartln="240" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="241" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="240" ElType=".C" desc="void st_underrun_007 ()" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="242" ElType="!" desc="int flag = 0;" rngLn="242">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="243" ElType="." desc="st_underrun_007_s_001 s;" rngLn="243">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="244" ElType="." desc="s.buf[0] = 1;" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="245" ElType=".P" desc="if (flag >1 )" rngLn="245">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void st_underrun_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="262" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-700153601" NvActs="3" locStartln="262" locStartPos="0" locEndLn="297" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c">
      <ElDescList>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="297" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/st_underrun.c" srcRnghash="-700153601" ln="262" ElType="" desc="[Line 262] Duplicated function in file 'st_underrun.c'" sourceRngHash="1033513181">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="307" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="272" ElType="" desc="[Line 272] Duplicated function in file 'st_underrun.c'" sourceRngHash="1033513181">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="21" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-995613438" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="21" locStartPos="0" locEndLn="22" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="17" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="18" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="17" srcRngStartPos="0" srcRngEndLn="18" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="17" ElType=".C" desc="void underrun_st_001 ()" rngLn="17">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="19" ElType="!" desc="int buf[5] = {1, 2, 3, 4, 5};" rngLn="19">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="20" ElType="." desc="int ret;" rngLn="20">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="21" ElType=".P" desc="ret = buf[-1];/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="21">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="31" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="1195720072" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="31" locStartPos="0" locEndLn="32" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="28" ElType=".C" desc="void underrun_st_002 ()" rngLn="28">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="30" ElType="!" desc="int buf[5];" rngLn="30">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="31" ElType=".P" desc="buf[-1] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="31">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="42" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-344298701" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="42" locStartPos="0" locEndLn="43" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="38" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="39" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="38" ElType=".C" desc="void underrun_st_003 ()" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="40" ElType="!" desc="int buf[5];" rngLn="40">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="41" ElType="." desc="int index = -1;" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="42" ElType=".P" desc="buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="42">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="55" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="808460563" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="55" locStartPos="0" locEndLn="56" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="49" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="50" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="49" ElType=".C" desc="void underrun_st_004 ()" rngLn="49">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="51" ElType="!" desc="int buf[5] = {1, 2, 3, 4, 5};" rngLn="51">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="52" ElType="." desc="int *p;" rngLn="52">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="53" ElType="." desc="int ret;" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="54" ElType="!" desc="p = buf;" rngLn="54">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="55" ElType=".P" desc="ret = *(p - 1);/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="55">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="67" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-884931413" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="67" locStartPos="0" locEndLn="68" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="62" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="63" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="62" ElType=".C" desc="void underrun_st_005 ()" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="64" ElType="!" desc="int buf[5];" rngLn="64">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="65" ElType="." desc="int *p;" rngLn="65">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="66" srcRngStartPos="0" srcRngEndLn="67" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="66" ElType="!" desc="p = buf;" rngLn="66">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="67" ElType=".P" desc="*(p - 1) = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="67">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;p&quot; out of bounds at index -1. Correct index(es): [0...4]" ln="80" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-115133443" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="80" locStartPos="0" locEndLn="81" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="74" ElType=".C" desc="void underrun_st_006 ()" rngLn="74">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="76" ElType="!" desc="int buf[5];" rngLn="76">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="77" ElType="." desc="int *p;" rngLn="77">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="78" ElType="." desc="int index = 1;" rngLn="78">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="79" ElType="!" desc="p = buf;" rngLn="79">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="80" ElType=".P" desc="*(p - index) = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="93" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="51269158" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="93" locStartPos="0" locEndLn="94" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="87" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="88" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="87" ElType=".C" desc="void underrun_st_007 ()" rngLn="87">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="89" ElType="!" desc="int buf[5];" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="90" ElType="." desc="int i;" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="91" ElType="." desc="for (i = 4; i >= -1; i --)" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="93" ElType="." desc="buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="91" ElType="." desc="for (i = 4; i >= -1; i --)" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="93" ElType=".P" desc="buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="93">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;underrun_st_009_gbl_buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="124" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-725921289" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="124" locStartPos="0" locEndLn="125" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="119" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="120" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="119" ElType=".C" desc="void underrun_st_009 ()" rngLn="119">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="121" ElType="." desc="int i;" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="122" ElType="." desc="for (i = 4; i >= -1; i --)" rngLn="122">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="124" ElType="." desc="underrun_st_009_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="122" ElType="." desc="for (i = 4; i >= -1; i --)" rngLn="122">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="124" ElType=".P" desc="underrun_st_009_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="124">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;underrun_st_011_gbl_buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="155" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="957275891" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="155" locStartPos="0" locEndLn="156" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="150" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="151" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="150" ElType=".C" desc="void underrun_st_011 ()" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="152" ElType="." desc="int i=4;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="153" ElType="." desc="while(i >= -1)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="155" ElType="." desc="underrun_st_011_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="155">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="156" ElType="." desc="i--;" rngLn="156">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="153" ElType="." desc="while(i >= -1)" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="155" ElType=".P" desc="underrun_st_011_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="155">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;var == 0&quot; always evaluates to true" ln="189" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1936453118" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="189" locStartPos="0" locEndLn="190" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="183" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="184" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="183" ElType=".C" desc="void underrun_st_013 ()" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="185" ElType="." desc="int i=4;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="186" ElType="!" desc="int var=0;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="187" ElType="." desc="while(i >= -1)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="189" ElType=".P" desc="if(var==0)" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;underrun_st_013_gbl_buf&quot; out of bounds at index [-1...3]. Correct index(es): [0...4]" ln="190" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-949367755" lang="cpp" locType="sr" config="1" hash="-664901597" locStartln="190" locStartPos="0" locEndLn="191" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" FirstElSrcRngStartln="183" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="184" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="183" ElType=".C" desc="void underrun_st_013 ()" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="185" ElType="." desc="int i=4;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="186" ElType="." desc="int var=0;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="187" ElType="." desc="while(i >= -1)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="189" ElType="." desc="if(var==0)" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (var == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="190" ElType="." desc="underrun_st_013_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="190">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="191" ElType="." desc="i--;" rngLn="191">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="187" ElType="." desc="while(i >= -1)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i >= -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="189" ElType="." desc="if(var==0)" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (var == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="190" ElType=".P" desc="underrun_st_013_gbl_buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR:Data Underrun*/" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Out of bounds access point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void underrun_st_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="201" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-664901597" NvActs="3" locStartln="201" locStartPos="0" locEndLn="266" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c">
      <ElDescList>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/underrun_st.c" srcRnghash="-664901597" ln="201" ElType="" desc="[Line 201] Duplicated function in file 'underrun_st.c'" sourceRngHash="1158549715">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="207" ElType="" desc="[Line 207] Duplicated function in file 'underrun_st.c'" sourceRngHash="1158549715">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;*ret, a&quot; is used prior to initialization" ln="27" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1277118794" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="27" locStartPos="0" locEndLn="28" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="24" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="25" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="24" ElType=".C" desc="unsigned long a;" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="25" ElType="." desc="unsigned long *ret;" rngLn="25">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="26" ElType="!" desc="ret = &amp;a;" rngLn="26">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="27" ElType=".P" desc="printf(&quot;%ld &quot;,*ret);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="27">
          <Props>
            <Prop key="Tracked variables" val="*ret, a" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: *ret, a" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str2&quot; is used prior to initialization" ln="54" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1907341703" lang="cpp" locType="sr" urgent="true" config="1" hash="-1937864467" locStartln="54" locStartPos="0" locEndLn="55" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="51" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="52" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="50" ElType="." desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="50">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="51" ElType=".C" desc="char *str2 ;" rngLn="51">
          <Props>
            <Prop key="Tracked variables" val="str2" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: str2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="52" ElType="." desc="if (str1!=NULL)" rngLn="52">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (str1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="54" ElType=".P" desc="strcpy(str1, str2);" rngLn="54">
          <Props>
            <Prop key="Tracked variables" val="str2" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: str2" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*ptr, p2&quot; may possibly be null" ln="74" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="382758635" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="74" locStartPos="0" locEndLn="75" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="68" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="69" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="66" srcRngStartPos="0" srcRngEndLn="67" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="66" ElType="." desc="short **ptr = NULL;" rngLn="66">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="67" ElType="." desc="short *p1 = (short *) calloc(10,sizeof(short));" rngLn="67">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="68" srcRngStartPos="0" srcRngEndLn="69" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="68" ElType=".C" desc="short *p2 = NULL;" rngLn="68">
          <Props>
            <Prop key="Tracked variables" val="p2" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="69" ElType="." desc="if(p1 !=NULL)" rngLn="69">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (p1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="73" ElType="!" desc="ptr = &amp;p2;" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="74" ElType=".P" desc="printf(&quot;%d \n&quot;,**ptr);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="*ptr, p2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *ptr, p2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_memory_access_005 ( ) { int i , j , k ; int arr [...'" ln="83" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1937864467" NvActs="3" locStartln="83" locStartPos="0" locEndLn="99" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="83" ElType="" desc="[Line 83] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="-131647872">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="85" ElType="" desc="[Line 85] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="334932062">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;src&quot; is used prior to initialization" ln="107" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="135521434" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="107" locStartPos="0" locEndLn="108" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="126" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="127" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType="." desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="126" ElType=".C" desc="char *str2 ;" rngLn="126">
          <Props>
            <Prop key="Tracked variables" val="str2" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: str2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="127" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="107" ElType=".P" desc="if(src == NULL)" rngLn="107">
              <Props>
                <Prop key="Tracked variables" val="src" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: src" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dst&quot; may possibly be null" ln="116" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1714115372" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="116" locStartPos="0" locEndLn="117" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType=".C" desc="calloc(...)" rngLn="125">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType="!" desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="126" ElType="." desc="char *str2 ;" rngLn="126">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="127" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="107" ElType="." desc="if(src == NULL)" rngLn="107">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Condition evaluation: (src == 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="114" ElType="." desc="while(*src != '\0')" rngLn="114">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (*src != 0) (assuming true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="116" ElType=".P" desc="*dst = *src;" rngLn="116">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dst&quot; may possibly be null" ln="120" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-376865098" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="120" locStartPos="0" locEndLn="121" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType=".C" desc="calloc(...)" rngLn="125">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType="!" desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="126" ElType="." desc="char *str2 ;" rngLn="126">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="127" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="107" ElType="." desc="if(src == NULL)" rngLn="107">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Condition evaluation: (src == 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="114" ElType="." desc="while(*src != '\0')" rngLn="114">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (*src != 0) (assuming false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="120" ElType=".P" desc="*dst = '\0';" rngLn="120">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str1" ln="129" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1852769521" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="129" locStartPos="0" locEndLn="130" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType=".C" desc="calloc(...)" rngLn="125">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="125" ElType="!" desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="126" ElType="." desc="char *str2 ;" rngLn="126">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="127" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="127">
          <ElDescList>
            <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="107" ElType="." desc="if(src == NULL)" rngLn="107">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: dst" kind="var" />
                <Ann msg="Condition evaluation: (src == 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="114" ElType="." desc="while(*src != '\0')" rngLn="114">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (*src != 0) (assuming false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="120" ElType="!" desc="*dst = '\0';" rngLn="120">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="128" ElType="." desc="printf(&quot;%s\n&quot;, str1);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="129" ElType=".P" desc="}" rngLn="129">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="200" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1504800440" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="200" locStartPos="0" locEndLn="201" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="192" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="193" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="198" ElType="." desc="uninit_memory_access_008_s_001 *s = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="199" ElType="!" desc="s = uninit_memory_access_008_func_001();" rngLn="199">
          <ElDescList>
            <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="192" ElType=".C" desc="malloc(...)" rngLn="192">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="192" ElType="!" desc="uninit_memory_access_008_s_001 *ret = (uninit_memory_access_008_s_001 *) malloc (5*sizeof(uninit_memory_access_008_s_001));" rngLn="192">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="193" ElType="!" desc="return ret;" rngLn="193">
              <Props>
                <Prop key="Tracked variables" val="ret" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: ret" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="200" ElType=".P" desc="s->b = s->a;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="200">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: s" ln="201" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="203684300" lang="cpp" locType="sr" urgent="true" config="1" hash="-1937864467" locStartln="201" locStartPos="0" locEndLn="202" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="192" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="193" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="198" ElType="." desc="uninit_memory_access_008_s_001 *s = NULL;" rngLn="198">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="199" ElType="!" desc="s = uninit_memory_access_008_func_001();" rngLn="199">
          <ElDescList>
            <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="192" ElType=".C" desc="malloc(...)" rngLn="192">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="192" ElType="!" desc="uninit_memory_access_008_s_001 *ret = (uninit_memory_access_008_s_001 *) malloc (5*sizeof(uninit_memory_access_008_s_001));" rngLn="192">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="193" ElType="!" desc="return ret;" rngLn="193">
              <Props>
                <Prop key="Tracked variables" val="ret" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: ret" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="200" ElType="." desc="s->b = s->a;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="200">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="201" ElType=".P" desc="}" rngLn="201">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: s" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_memory_access_009_doubleptr_gbl&quot; may possibly be null" ln="224" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2027346874" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="224" locStartPos="0" locEndLn="225" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="220" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="221" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="219" ElType="." desc="int i,j;" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="220" ElType=".C" desc="malloc(...)" rngLn="220">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="220" ElType="!" desc="uninit_memory_access_009_doubleptr_gbl=(long**) malloc(10*sizeof(long*));" rngLn="220">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="222" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="222">
          <Props>
            <Prop key="Tracked variables" val="uninit_memory_access_009_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_memory_access_009_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="224" srcRngStartPos="0" srcRngEndLn="225" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="224" ElType=".P" desc="uninit_memory_access_009_doubleptr_gbl[i]=(long*) malloc(10*sizeof(long));" rngLn="224">
          <Props>
            <Prop key="Tracked variables" val="uninit_memory_access_009_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_memory_access_009_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_memory_access_009 ( ) { int flag = 0 , i , j ; if...'" ln="236" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1937864467" NvActs="3" locStartln="236" locStartPos="0" locEndLn="257" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="257" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="236" ElType="" desc="[Line 236] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="1856194892">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="248" ElType="" desc="[Line 248] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="-1979241932">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;uninit_memory_access_009_func_001(...) == 0&quot; always evaluates to true" ln="239" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1629586335" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="239" locStartPos="0" locEndLn="240" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="235" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="236" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="235" ElType=".C" desc="void uninit_memory_access_009()" rngLn="235">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="237" ElType="." desc="int flag=0,i,j;" rngLn="237">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="239" ElType="!" desc="uninit_memory_access_009_func_001(...)" rngLn="239">
          <ElDescList>
            <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="209" ElType="." desc="int ret;" rngLn="209">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="210" ElType="." desc="if (flag ==0)" rngLn="210">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="211" ElType="!" desc="ret = 0;" rngLn="211">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="214" ElType="!" desc="return ret;" rngLn="214">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="239" ElType=".P" desc="if(uninit_memory_access_009_func_001(flag)==0)" rngLn="239">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERR&quot; always evaluates to false" ln="285" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1331566765" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="285" locStartPos="0" locEndLn="286" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="275" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="276" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="275" ElType=".C" desc="void uninit_memory_access_010_func_001(unsigned devno)" rngLn="275">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="277" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl = (uninit_memory_access_010_s_001 *) malloc (5*sizeof(uninit_memory_access_010_s_001));" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="278" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl!=NULL)" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_memory_access_010_s_001_arr_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="280" ElType="!" desc="uninit_memory_access_010_s_001_arr_gbl->csr = READY;" rngLn="280">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="281" ElType="." desc="if(devno &lt; NDEVS)" rngLn="281">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (devno &lt; 4) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="284" srcRngStartPos="0" srcRngEndLn="285" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="284" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl->data = READY;" rngLn="284">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="285" srcRngStartPos="0" srcRngEndLn="286" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="285" ElType=".P" desc="if(uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERROR)" rngLn="285">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(int)uninit_memory_access_010_s_001_arr_gbl->csr &amp; 3 == 0&quot; always evaluates to false" ln="289" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1392463679" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="289" locStartPos="0" locEndLn="290" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="275" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="276" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="275" ElType=".C" desc="void uninit_memory_access_010_func_001(unsigned devno)" rngLn="275">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="277" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl = (uninit_memory_access_010_s_001 *) malloc (5*sizeof(uninit_memory_access_010_s_001));" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="278" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl!=NULL)" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_memory_access_010_s_001_arr_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="280" ElType="!" desc="uninit_memory_access_010_s_001_arr_gbl->csr = READY;" rngLn="280">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="281" ElType="." desc="if(devno &lt; NDEVS)" rngLn="281">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (devno &lt; 4) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="284" srcRngStartPos="0" srcRngEndLn="285" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="284" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl->data = READY;" rngLn="284">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="285" srcRngStartPos="0" srcRngEndLn="286" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="285" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERROR)" rngLn="285">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: ((int)uninit_memory_access_010_s_001_arr_gbl->csr &amp; 1 != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="289" ElType=".P" desc="}while( (uninit_memory_access_010_s_001_arr_gbl->csr &amp; (READY | ERROR)) == 0);" rngLn="289">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;msg&quot; is used prior to initialization" ln="310" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-589661341" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="310" locStartPos="0" locEndLn="311" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="318" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="319" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="318" ElType=".C" desc="char *str ;" rngLn="318">
          <Props>
            <Prop key="Tracked variables" val="str" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: str" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="319" ElType="!" desc="uninit_memory_access_011_func_001(str);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="319">
          <ElDescList>
            <ElDesc srcRngStartln="310" srcRngStartPos="0" srcRngEndLn="311" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="310" ElType=".P" desc="const char *error_log = msg;" rngLn="310">
              <Props>
                <Prop key="Tracked variables" val="msg" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: msg" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s1&quot; may possibly be null" ln="363" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-235593712" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="363" locStartPos="0" locEndLn="364" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="362" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="363" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="359" ElType="." desc="int i;" rngLn="359">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="361" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="360" ElType="." desc="uninit_memory_access_013_s_001 *s1, s;" rngLn="360">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="362" ElType=".C" desc="calloc(...)" rngLn="362">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="362" srcRngStartPos="0" srcRngEndLn="363" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="362" ElType="!" desc="s1 = (uninit_memory_access_013_s_001*)calloc(1,sizeof(uninit_memory_access_013_s_001));" rngLn="362">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="363" srcRngStartPos="0" srcRngEndLn="364" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="363" ElType=".P" desc="s1->int_a = 10;" rngLn="363">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="392" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-876626127" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="392" locStartPos="0" locEndLn="393" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="391" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="392" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="385" ElType="." desc="int flag = rand();" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="386" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="387" ElType="." desc="switch (flag)" rngLn="387">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="391" ElType=".C" desc="calloc(...)" rngLn="391">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="391" ElType="!" desc="u = (uninit_memory_access_014_u_001 *)calloc(1,sizeof(uninit_memory_access_014_u_001));" rngLn="391">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="392" ElType=".P" desc="u->a = 40;" rngLn="392">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="398" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-877119828" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="398" locStartPos="0" locEndLn="399" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="397" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="398" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="385" ElType="." desc="int flag = rand();" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="386" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="387" ElType="." desc="switch (flag)" rngLn="387">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 2&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="397" ElType=".C" desc="calloc(...)" rngLn="397">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="397" ElType="!" desc="u = (uninit_memory_access_014_u_001 *)calloc(2,sizeof(uninit_memory_access_014_u_001));" rngLn="397">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="398" ElType=".P" desc="u->a = 20;" rngLn="398">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="404" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-877089070" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="404" locStartPos="0" locEndLn="405" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="403" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="404" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="385" ElType="." desc="int flag = rand();" rngLn="385">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="386" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="386">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="387" ElType="." desc="switch (flag)" rngLn="387">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (assuming &quot;case 3&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="403" ElType=".C" desc="calloc(...)" rngLn="403">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="403" ElType="!" desc="u = (uninit_memory_access_014_u_001 *)calloc(3,sizeof(uninit_memory_access_014_u_001));" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="404" ElType=".P" desc="u->a = 30;" rngLn="404">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to true" ln="417" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="205218980" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="417" locStartPos="0" locEndLn="418" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="412" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="413" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="412" ElType=".C" desc="void uninit_memory_access_014 ()" rngLn="412">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="414" ElType="." desc="int ret;" rngLn="414">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="415" ElType="." desc="uninit_memory_access_014_u_001 *p;" rngLn="415">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="416" ElType="!" desc="p = uninit_memory_access_014_func_001 ();" rngLn="416">
          <ElDescList>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="385" ElType="." desc="int flag = rand();" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="386" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="386">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="387" ElType="." desc="switch (flag)" rngLn="387">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (assuming &quot;case default&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="408" ElType="!" desc="return (uninit_memory_access_014_u_001 *)(-1);" rngLn="408">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="417" ElType=".P" desc="if(p != NULL)" rngLn="417">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;p&quot; is defined by an integer constant" ln="420" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="88829798" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="420" locStartPos="0" locEndLn="421" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="408" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="409" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="414" ElType="." desc="int ret;" rngLn="414">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="415" ElType="." desc="uninit_memory_access_014_u_001 *p;" rngLn="415">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="416" ElType="!" desc="p = uninit_memory_access_014_func_001 ();" rngLn="416">
          <ElDescList>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="385" ElType="." desc="int flag = rand();" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="386" srcRngStartPos="0" srcRngEndLn="387" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="386" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="386">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="387" srcRngStartPos="0" srcRngEndLn="388" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="387" ElType="." desc="switch (flag)" rngLn="387">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (assuming &quot;case default&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="408" ElType=".C" desc="return (uninit_memory_access_014_u_001 *)(-1);" rngLn="408">
              <Props>
                <Prop key="Tracked variables" val="&lt;returned value of uninit_memory_access_014_func_001()>" />
              </Props>
              <Anns>
                <Ann msg="Point where the resource is defined" kind="cause" />
                <Ann msg="Invalid resource: &lt;returned value of uninit_memory_access_014_func_001()>" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="417" ElType="." desc="if(p != NULL)" rngLn="417">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: p" kind="var" />
            <Ann msg="Condition evaluation: (p != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="419" srcRngStartPos="0" srcRngEndLn="420" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="419" ElType="." desc="ret = p->b;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Memory Access*/" rngLn="419">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="420" srcRngStartPos="0" srcRngEndLn="421" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="420" ElType=".P" desc="free(p);" rngLn="420">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: p" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;arr[]&quot; is used prior to initialization" ln="435" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1422263042" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="435" locStartPos="0" locEndLn="436" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="432" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="433" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="431" ElType="." desc="int (*p)[4];" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="432" ElType=".C" desc="int arr[4][4];" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="arr[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: arr[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="433" ElType="." desc="int i,j;" rngLn="433">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="434" ElType="." desc="p= (int (*)[]) malloc (sizeof arr);" rngLn="434">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="435" ElType=".P" desc="memcpy(p, arr, sizeof(arr));" rngLn="435">
          <Props>
            <Prop key="Tracked variables" val="arr[]" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: arr[]" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="435" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="398957768" lang="cpp" locType="sr" config="1" hash="-1937864467" locStartln="435" locStartPos="0" locEndLn="436" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" FirstElSrcRngStartln="434" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="435" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="431" ElType="." desc="int (*p)[4];" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="432" ElType="." desc="int arr[4][4];" rngLn="432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="433" ElType="." desc="int i,j;" rngLn="433">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="434" ElType=".C" desc="malloc(...)" rngLn="434">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="434" ElType="!" desc="p= (int (*)[]) malloc (sizeof arr);" rngLn="434">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="435" ElType=".P" desc="memcpy(p, arr, sizeof(arr));" rngLn="435">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_memory_access_main ( ) { if ( vflag == 1 || vflag...'" ln="461" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1937864467" NvActs="3" locStartln="461" locStartPos="0" locEndLn="536" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c">
      <ElDescList>
        <ElDesc srcRngStartln="461" srcRngStartPos="0" srcRngEndLn="536" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_memory_access.c" srcRnghash="-1937864467" ln="461" ElType="" desc="[Line 461] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="1649445158">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="482" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="482" ElType="" desc="[Line 482] Duplicated function in file 'uninit_memory_access.c'" sourceRngHash="1649445158">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;p&quot; is used prior to initialization" ln="30" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-2096129050" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="30" locStartPos="0" locEndLn="31" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="28" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="29" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="27" ElType="." desc="int a = 5;" rngLn="27">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="28" ElType=".C" desc="int *p ;" rngLn="28">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="29" ElType="." desc="int ret;" rngLn="29">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="30" ElType=".P" desc="ret = *p; /*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="30">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: p" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; is used prior to initialization" ln="41" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1041802468" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="41" locStartPos="0" locEndLn="42" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="40" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="41" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="39" ElType="." desc="int a;" rngLn="39">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="40" ElType=".C" desc="int *p ;" rngLn="40">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="41" ElType=".P" desc="*p = 1; /*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="41">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: p" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pp, p&quot; is used prior to initialization" ln="55" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1132934215" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="55" locStartPos="0" locEndLn="56" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="51" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="52" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="50" ElType="." desc="int **pp;" rngLn="50">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="51" ElType=".C" desc="int *p;" rngLn="51">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="52" ElType="." desc="int a = 0;" rngLn="52">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="54" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="53" ElType="." desc="int ret;" rngLn="53">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="54" ElType="!" desc="pp = &amp;p;" rngLn="54">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="55" srcRngStartPos="0" srcRngEndLn="56" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="55" ElType=".P" desc="ret = **pp; /*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="55">
          <Props>
            <Prop key="Tracked variables" val="*pp, p" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: *pp, p" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pp&quot; is used prior to initialization" ln="104" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1287282054" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="104" locStartPos="0" locEndLn="105" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="110" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="111" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="109" ElType="." desc="int a;" rngLn="109">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="110" ElType=".C" desc="int *p;" rngLn="110">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: p" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="111" ElType="!" desc="uninit_pointer_006_func_001(&amp;p);" rngLn="111">
          <ElDescList>
            <ElDesc srcRngStartln="104" srcRngStartPos="0" srcRngEndLn="105" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="104" ElType=".P" desc="**pp = 1;/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="104">
              <Props>
                <Prop key="Tracked variables" val="*pp" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: *pp" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf2&quot; is used prior to initialization" ln="131" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1523837051" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="121" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="122" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="120" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="121" ElType=".C" desc="char *buf2;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="122" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="123" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="124" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="125" ElType="." desc="if (!buf1 || !buf3 || !buf4 || !buf5) return;" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf3 || !buf4 || !buf5 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="126" ElType="!" desc="char **pbuf[5] = {&amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="127" ElType="." desc="int i,j=4;" rngLn="127">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf2" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: *pbuf[0], buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="129" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="129">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="131" ElType=".P" desc="*((*pbuf[i])+j)='a';/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf2" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: *pbuf[0], buf2" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf1" ln="137" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-614151784" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="120" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="121" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="120" ElType=".C" desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="120">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="121" ElType="." desc="char *buf2;" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="122" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="123" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="124" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="125" ElType="." desc="if (!buf1 || !buf3 || !buf4 || !buf5) return;" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="137" ElType=".P" desc="}" rngLn="137">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf3" ln="137" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-614151770" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="122" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="123" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="120" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="121" ElType="." desc="char *buf2;" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="122" ElType=".C" desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="122">
          <Props>
            <Prop key="Tracked variables" val="buf3" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf3" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="123" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="124" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="125" ElType="." desc="if (!buf1 || !buf3 || !buf4 || !buf5) return;" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="137" ElType=".P" desc="}" rngLn="137">
          <Props>
            <Prop key="Tracked variables" val="buf3" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf3" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf4" ln="137" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-614151769" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="123" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="124" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="120" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="121" ElType="." desc="char *buf2;" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="122" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="123" ElType=".C" desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="123">
          <Props>
            <Prop key="Tracked variables" val="buf4" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf4" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="124" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="125" ElType="." desc="if (!buf1 || !buf3 || !buf4 || !buf5) return;" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="137" ElType=".P" desc="}" rngLn="137">
          <Props>
            <Prop key="Tracked variables" val="buf4" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf4" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf5" ln="137" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1674222702" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="137" locStartPos="0" locEndLn="138" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="124" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="125" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="120" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="120">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="121" ElType="." desc="char *buf2;" rngLn="121">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="122" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="122">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="123" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="124" ElType=".C" desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="124">
          <Props>
            <Prop key="Tracked variables" val="buf5" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf5" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="125" ElType="." desc="if (!buf1 || !buf3 || !buf4 || !buf5) return;" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="137" ElType=".P" desc="}" rngLn="137">
          <Props>
            <Prop key="Tracked variables" val="buf5" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf5" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_009_func_001(...) == 0&quot; always evaluates to false" ln="181" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-397617962" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="181" locStartPos="0" locEndLn="182" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="176" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="177" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="176" ElType=".C" desc="void uninit_pointer_009()" rngLn="176">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="178" ElType="." desc="char *buf,buf1[25];" rngLn="178">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="179" ElType="!" desc="int flag=10;" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType="!" desc="uninit_pointer_009_func_001(...)" rngLn="181">
          <ElDescList>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="166" ElType="!" desc="int uninit_pointer_009_func_001(int flag)" rngLn="166">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="172" ElType="!" desc="ret=flag+1;" rngLn="172">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="173" ElType="!" desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType=".P" desc="if(uninit_pointer_009_func_001(flag)==0)" rngLn="181">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_009_func_001(...) > 0&quot; always evaluates to true" ln="185" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-480124413" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="185" locStartPos="0" locEndLn="186" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="176" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="177" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="176" ElType=".C" desc="void uninit_pointer_009()" rngLn="176">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="178" ElType="." desc="char *buf,buf1[25];" rngLn="178">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="179" ElType="!" desc="int flag=10;" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType="." desc="uninit_pointer_009_func_001(...)" rngLn="181">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="172" ElType="." desc="ret=flag+1;" rngLn="172">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="173" ElType="." desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType="." desc="if(uninit_pointer_009_func_001(flag)==0)" rngLn="181">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_009_func_001(...) == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="185" ElType="!" desc="uninit_pointer_009_func_001(...)" rngLn="185">
          <ElDescList>
            <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="166" ElType="!" desc="int uninit_pointer_009_func_001(int flag)" rngLn="166">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="172" ElType="!" desc="ret=flag+1;" rngLn="172">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="173" ElType="!" desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="185" ElType=".P" desc="if(uninit_pointer_009_func_001(flag)>0)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; is used prior to initialization" ln="187" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="17564328" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="178" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="179" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="178" ElType=".C" desc="char *buf,buf1[25];" rngLn="178">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="179" ElType="." desc="int flag=10;" rngLn="179">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType="." desc="uninit_pointer_009_func_001(...)" rngLn="181">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="172" ElType="." desc="ret=flag+1;" rngLn="172">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="173" ElType="." desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="181" ElType="." desc="if(uninit_pointer_009_func_001(flag)==0)" rngLn="181">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_009_func_001(...) == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="185" ElType="." desc="uninit_pointer_009_func_001(...)" rngLn="185">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="172" ElType="." desc="ret=flag+1;" rngLn="172">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="173" ElType="." desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="185" ElType="." desc="if(uninit_pointer_009_func_001(flag)>0)" rngLn="185">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_009_func_001(...) > 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="187" ElType=".P" desc="strcpy(buf1,buf);/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="187">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: buf" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*((void **)cptr), *((void **)vptr)&quot; is used prior to initialization" ln="200" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1670967136" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="200" locStartPos="0" locEndLn="201" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="204" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="205" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="204" ElType=".C" desc="void *buf1;" rngLn="204">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="205" ElType="!" desc="uninit_pointer_010_func_001(&amp;buf1);" rngLn="205">
          <ElDescList>
            <ElDesc srcRngStartln="198" srcRngStartPos="0" srcRngEndLn="199" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="198" ElType="!" desc="char * * cptr = (char * *)vptr;" rngLn="198">
              <Props>
                <Prop key="Tracked variables" val="*((void **)vptr)" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: *((void **)vptr)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="199" ElType="." desc="char * buf ;" rngLn="199">
              <Props>
                <Prop key="Tracked variables" val="*((void **)cptr), *((void **)vptr)" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: *((void **)cptr), *((void **)vptr)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="200" srcRngStartPos="0" srcRngEndLn="201" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="200" ElType=".P" desc="buf = (*cptr);/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="200">
              <Props>
                <Prop key="Tracked variables" val="*((void **)cptr), *((void **)vptr)" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: *((void **)cptr), *((void **)vptr)" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: ptr" ln="236" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1718108707" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="236" locStartPos="0" locEndLn="237" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="215" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="216" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="214" ElType="." desc="unsigned int * ptr,a=0;" rngLn="214">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="215" ElType=".C" desc="malloc(...)" rngLn="215">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="215" ElType="!" desc="ptr = (unsigned int *)malloc(10*sizeof(unsigned int *));" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="216" ElType="." desc="int i;" rngLn="216">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="217" ElType="." desc="if (ptr!=NULL)" rngLn="217">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="219" ElType="." desc="while(1)" rngLn="219">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="221" ElType="." desc="for(i=0; i&lt;10/2; i++)" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="223" srcRngStartPos="0" srcRngEndLn="224" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="223" ElType="." desc="ptr[i] = i;" rngLn="223">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="221" ElType="." desc="for(i=0; i&lt;10/2; i++)" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="225" srcRngStartPos="0" srcRngEndLn="226" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="225" ElType="." desc="break;" rngLn="225">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="227" ElType="." desc="while(1)" rngLn="227">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="229" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="229">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="231" ElType="." desc="a += ptr[i];/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="231">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="229" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="229">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="233" ElType="." desc="break;" rngLn="233">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="236" ElType=".P" desc="}" rngLn="236">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_pointer_013 ( ) { int * * ptr = ( int * * )...'" ln="263" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1122287817" NvActs="3" locStartln="263" locStartPos="0" locEndLn="284" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="263" ElType="" desc="[Line 263] Duplicated function in file 'uninit_pointer.c'" sourceRngHash="-188876797">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="296" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="275" ElType="" desc="[Line 275] Duplicated function in file 'uninit_pointer.c'" sourceRngHash="-326228115">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="268" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1517952848" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="268" locStartPos="0" locEndLn="269" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="264" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="265" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="264" ElType=".C" desc="malloc(...)" rngLn="264">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="264" ElType="!" desc="int **ptr = (int**) malloc(5*sizeof(int*));" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="265" ElType="." desc="int i,j;" rngLn="265">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="267" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="267">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="268" ElType=".P" desc="ptr[i]=(int*) malloc(5*sizeof(int));" rngLn="268">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; is used prior to initialization" ln="352" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="155258180" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="352" locStartPos="0" locEndLn="353" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="357" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="358" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="357" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="357" ElType=".C" desc="int *ptr;" rngLn="357">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="358" srcRngStartPos="0" srcRngEndLn="359" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="358" ElType="!" desc="uninit_pointer_015_func_001(ptr);/*Tool should detect this line as error*/ /*ERROR:Uninitialized pointer*/" rngLn="358">
          <ElDescList>
            <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="351" ElType="." desc="values val = ONE;" rngLn="351">
              <Props>
                <Prop key="Tracked variables" val="ptr" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="352" srcRngStartPos="0" srcRngEndLn="353" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="352" ElType=".P" desc="*ptr = val;" rngLn="352">
              <Props>
                <Prop key="Tracked variables" val="ptr" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: ptr" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_016_func_001(...) == 0&quot; always evaluates to true" ln="378" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-889836590" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="378" locStartPos="0" locEndLn="379" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="375" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="376" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="375" srcRngStartPos="0" srcRngEndLn="376" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="375" ElType=".C" desc="void uninit_pointer_016_func_002()" rngLn="375">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="377" ElType="." desc="int i;" rngLn="377">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType="!" desc="uninit_pointer_016_func_001(...)" rngLn="378">
          <ElDescList>
            <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="367" ElType="." desc="int ret =0;" rngLn="367">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="368" ElType="." desc="if (flag ==0)" rngLn="368">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="369" ElType="!" desc="ret = 0;" rngLn="369">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="372" ElType="!" desc="return ret;" rngLn="372">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType=".P" desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="378">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_pointer_016_gbl_doubleptr&quot; may possibly be null" ln="383" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-253753148" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="383" locStartPos="0" locEndLn="384" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="380" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="381" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="377" ElType="." desc="int i;" rngLn="377">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType="." desc="uninit_pointer_016_func_001(...)" rngLn="378">
          <ElDescList>
            <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="367" ElType="." desc="int ret =0;" rngLn="367">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="368" ElType="." desc="if (flag ==0)" rngLn="368">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="369" ElType="." desc="ret = 0;" rngLn="369">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="372" ElType="." desc="return ret;" rngLn="372">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType="." desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="378">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="380" ElType=".C" desc="malloc(...)" rngLn="380">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="380" ElType="!" desc="uninit_pointer_016_gbl_doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="380">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="381" srcRngStartPos="0" srcRngEndLn="382" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="381" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="381">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="383" ElType=".P" desc="uninit_pointer_016_gbl_doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="383">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_pointer_016_gbl_doubleptr[0]&quot; may possibly be null" ln="385" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1018261301" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="385" locStartPos="0" locEndLn="386" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="383" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="384" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="377" ElType="." desc="int i;" rngLn="377">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType="." desc="uninit_pointer_016_func_001(...)" rngLn="378">
          <ElDescList>
            <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="367" ElType="." desc="int ret =0;" rngLn="367">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="368" ElType="." desc="if (flag ==0)" rngLn="368">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="369" ElType="." desc="ret = 0;" rngLn="369">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="372" ElType="." desc="return ret;" rngLn="372">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="378" srcRngStartPos="0" srcRngEndLn="379" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="378" ElType="." desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="378">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="380" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="380" ElType="." desc="uninit_pointer_016_gbl_doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="380">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="381" srcRngStartPos="0" srcRngEndLn="382" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="381" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="381">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="383" ElType=".C" desc="malloc(...)" rngLn="383">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="383" ElType="!" desc="uninit_pointer_016_gbl_doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="383">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="384" ElType="." desc="if(i&lt;5)" rngLn="384">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr[0]" kind="var" />
            <Ann msg="Condition evaluation: (i &lt; 5) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="385" ElType=".P" desc="strcpy(uninit_pointer_016_gbl_doubleptr[i],&quot;STRING00&quot;);" rngLn="385">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_016_func_001(...) == 0&quot; always evaluates to true" ln="394" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="157506644" lang="cpp" locType="sr" config="1" hash="-1122287817" locStartln="394" locStartPos="0" locEndLn="395" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" FirstElSrcRngStartln="390" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="391" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="390" srcRngStartPos="0" srcRngEndLn="391" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="390" ElType=".C" desc="void uninit_pointer_016()" rngLn="390">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="392" srcRngStartPos="0" srcRngEndLn="393" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="392" ElType="." desc="int flag=0,i;" rngLn="392">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="393" ElType="." desc="char *s=(char*) malloc(10*sizeof(char));" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="394" ElType="!" desc="uninit_pointer_016_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="367" ElType="." desc="int ret =0;" rngLn="367">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="368" srcRngStartPos="0" srcRngEndLn="369" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="368" ElType="." desc="if (flag ==0)" rngLn="368">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="369" ElType="!" desc="ret = 0;" rngLn="369">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="372" srcRngStartPos="0" srcRngEndLn="373" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="372" ElType="!" desc="return ret;" rngLn="372">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="394" ElType=".P" desc="if(uninit_pointer_016_func_001(flag)==0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_pointer_main ( ) { if ( vflag == 1 || vflag ==...'" ln="420" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1122287817" NvActs="3" locStartln="420" locStartPos="0" locEndLn="500" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="420" srcRngStartPos="0" srcRngEndLn="500" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_pointer.c" srcRnghash="-1122287817" ln="420" ElType="" desc="[Line 420] Duplicated function in file 'uninit_pointer.c'" sourceRngHash="-1763896070">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="439" ElType="" desc="[Line 439] Duplicated function in file 'uninit_pointer.c'" sourceRngHash="1926345770">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;buf[3]&quot; is used prior to initialization" ln="34" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-377323924" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="34" locStartPos="0" locEndLn="35" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="32" ElType=".C" desc="int buf[5];" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="buf[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: buf[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="33" ElType="!" desc="int ret;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="34" ElType=".P" desc="ret = buf[3];/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="34">
          <Props>
            <Prop key="Tracked variables" val="buf[3]" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: buf[3]" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf[1][1]&quot; is used prior to initialization" ln="45" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-685705853" lang="cpp" locType="sr" urgent="true" config="1" hash="1343415680" locStartln="45" locStartPos="0" locEndLn="46" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="43" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="44" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="43" srcRngStartPos="0" srcRngEndLn="44" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="43" ElType=".C" desc="int buf[5][6];" rngLn="43">
          <Props>
            <Prop key="Tracked variables" val="buf[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: buf[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="44" ElType="!" desc="int ret;" rngLn="44">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="45" ElType=".P" desc="ret = buf[1][1];/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="buf[1][1]" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: buf[1][1]" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ret&quot; is used prior to initialization" ln="75" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="2133439990" lang="cpp" locType="sr" urgent="true" config="1" hash="1343415680" locStartln="75" locStartPos="0" locEndLn="76" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="72" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="73" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="72" ElType=".C" desc="int ret;" rngLn="72">
          <Props>
            <Prop key="Tracked variables" val="ret" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: ret" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="73" ElType="." desc="if (0)" rngLn="73">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: 0 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="75" ElType=".P" desc="return ret;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="ret" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: ret" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;a&quot; is used prior to initialization" ln="92" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1926131692" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="92" locStartPos="0" locEndLn="93" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="90" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="91" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="90" ElType=".C" desc="long a;" rngLn="90">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="91" ElType="." desc="int flag =0;" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="92" ElType=".P" desc="(flag==10)? (a = 1):(flag =a);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="92">
          <Props>
            <Prop key="Tracked variables" val="a" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: a" kind="var" />
            <Ann msg="Condition evaluation: (flag == 10) (false)" kind="condEval" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to false" ln="92" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1951095207" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="92" locStartPos="0" locEndLn="93" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="88" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="89" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="88" ElType=".C" desc="void uninit_var_006 ()" rngLn="88">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="90" ElType="." desc="long a;" rngLn="90">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="91" ElType="!" desc="int flag =0;" rngLn="91">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="92" ElType=".P" desc="(flag==10)? (a = 1):(flag =a);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="92">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s.uninit&quot; is used prior to initialization" ln="111" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="514975862" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="111" locStartPos="0" locEndLn="112" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="107" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="108" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="107" ElType=".C" desc="uninit_var_007_s_001 s;" rngLn="107">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="108" ElType="." desc="int ret;" rngLn="108">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="109" ElType="." desc="s.a = 1;" rngLn="109">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="110" ElType="!" desc="s.b = 1;" rngLn="110">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="111" ElType=".P" desc="ret = s.uninit;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="111">
          <Props>
            <Prop key="Tracked variables" val="s.uninit" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s.uninit" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;data&quot; is used prior to initialization" ln="131" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1226245105" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="128" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="129" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="127" ElType="." desc="int flag = 1;" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="128" ElType=".C" desc="int data;" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="data" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: data" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="129" ElType="." desc="uninit_var_008_func_001(...)" rngLn="129">
          <ElDescList>
            <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="121" ElType="." desc="ret -= a;" rngLn="121">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="122" ElType="." desc="return ret;" rngLn="122">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="129" ElType="." desc="while(uninit_var_008_func_001(flag)>0)" rngLn="129">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (uninit_var_008_func_001(...) > 0) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="131" ElType=".P" desc="data +=flag;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="data" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: data" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ret[]&quot; is used prior to initialization" ln="142" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-712320366" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="142" locStartPos="0" locEndLn="143" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="141" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="142" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="141" ElType=".C" desc="char ret[25];" rngLn="141">
          <Props>
            <Prop key="Tracked variables" val="ret[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: ret[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="142" ElType=".P" desc="strcpy(buf,ret);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="142">
          <Props>
            <Prop key="Tracked variables" val="ret[]" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: ret[]" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;ret&quot; is uninitialized" ln="142" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-OVERFNZT" ruleSCSCMsg="Start of the path" tool="c++test" id="-1659566065" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="142" locStartPos="0" locEndLn="143" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="139" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="140" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="139" ElType=".C" desc="void uninit_var_009_func_001 (char buf[])" rngLn="139">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="141" ElType="." desc="char ret[25];" rngLn="141">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="142" ElType=".P" desc="strcpy(buf,ret);/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="142">
          <Props />
          <Anns>
            <Ann msg="Not zero-terminated string: ret" kind="comment" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ret[0][0]&quot; is used prior to initialization" ln="161" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1823301801" lang="cpp" locType="sr" urgent="true" config="1" hash="1343415680" locStartln="161" locStartPos="0" locEndLn="162" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="157" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="158" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="157" ElType=".C" desc="int ret[5][6];" rngLn="157">
          <Props>
            <Prop key="Tracked variables" val="ret[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: ret[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="158" srcRngStartPos="0" srcRngEndLn="159" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="158" ElType="." desc="int i,j;" rngLn="158">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="159" srcRngStartPos="0" srcRngEndLn="160" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="159" ElType="." desc="for (i=0;i&lt;5;i++)" rngLn="159">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="160" ElType="!" desc="for (j=0;j&lt;6;j++)" rngLn="160">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 6) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="161" ElType=".P" desc="buf[i][j] = ret[i][j];}/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="161">
          <Props>
            <Prop key="Tracked variables" val="ret[0][0]" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: ret[0][0]" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;arr1[0]&quot; is used prior to initialization" ln="177" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1539073859" lang="cpp" locType="sr" config="1" hash="1343415680" locStartln="177" locStartPos="0" locEndLn="178" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="184" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="185" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="184" ElType=".C" desc="int arr[5];" rngLn="184">
          <Props>
            <Prop key="Tracked variables" val="arr[]" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: arr[]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="185" ElType="." desc="int p ;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="186" ElType="!" desc="p= uninit_var_011_func_001(arr,(sizeof(arr)/sizeof(int)));" rngLn="186">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="176" ElType="!" desc="int ret=0;" rngLn="176">
              <Props>
                <Prop key="Tracked variables" val="arr1[]" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: arr1[]" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="177" ElType=".P" desc="if(arr1[0] > 0)" rngLn="177">
              <Props>
                <Prop key="Tracked variables" val="arr1[0]" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: arr1[0]" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;val&quot; is used prior to initialization" ln="243" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1698876227" lang="cpp" locType="sr" urgent="true" config="1" hash="1343415680" locStartln="243" locStartPos="0" locEndLn="244" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" FirstElSrcRngStartln="242" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="243" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="242" ElType=".C" desc="values val ;/*Tool should detect this line as error*/ /*ERROR:Uninitialized Variable*/" rngLn="242">
          <Props>
            <Prop key="Tracked variables" val="val" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: val" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="243" ElType=".P" desc="return val;" rngLn="243">
          <Props>
            <Prop key="Tracked variables" val="val" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: val" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void uninit_var_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="306" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1343415680" NvActs="3" locStartln="306" locStartPos="0" locEndLn="381" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c">
      <ElDescList>
        <ElDesc srcRngStartln="306" srcRngStartPos="0" srcRngEndLn="381" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/uninit_var.c" srcRnghash="1343415680" ln="306" ElType="" desc="[Line 306] Duplicated function in file 'uninit_var.c'" sourceRngHash="-2040710263">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="329" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="329" ElType="" desc="[Line 329] Duplicated function in file 'uninit_var.c'" sourceRngHash="-2040710263">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_001 ( ) { # if ! defined (...'" ln="53" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="53" locStartPos="0" locEndLn="65" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="53" ElType="" desc="[Line 53] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="1859142952">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="53" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="53" ElType="" desc="[Line 53] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="1859142952">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_002 ( ) { # if ! defined (...'" ln="117" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="117" locStartPos="0" locEndLn="128" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="117" ElType="" desc="[Line 117] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-2079139428">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="117" ElType="" desc="[Line 117] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-2079139428">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_003_func_001 ( void * pram ) { # if...'" ln="158" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="158" locStartPos="0" locEndLn="177" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="158" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="158" ElType="" desc="[Line 158] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-339201223">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="158" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="158" ElType="" desc="[Line 158] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="930634833">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;unlock_without_lock_003_func_002(...) > 1&quot; always evaluates to false" ln="161" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1604480996" lang="cpp" locType="sr" config="1" hash="-1185861119" locStartln="161" locStartPos="0" locEndLn="162" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" FirstElSrcRngStartln="157" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="158" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="157" ElType=".C" desc="void unlock_without_lock_003_func_001 (void *pram)" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="161" ElType="!" desc="unlock_without_lock_003_func_002(...)" rngLn="161">
          <ElDescList>
            <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="181" ElType="." desc="int ret = 0;" rngLn="181">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="182" ElType="." desc="if (a > 1) {" rngLn="182">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="185" ElType="!" desc="ret = 0;" rngLn="185">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="187" ElType="!" desc="return ret;" rngLn="187">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="161" ElType=".P" desc="if(unlock_without_lock_003_func_002(0) >1)" rngLn="161">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;unlock_without_lock_003_func_002(...) > 1&quot; always evaluates to true" ln="194" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-656434174" lang="cpp" locType="sr" config="1" hash="-1185861119" locStartln="194" locStartPos="0" locEndLn="195" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" FirstElSrcRngStartln="190" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="191" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="190" ElType=".C" desc="void* unlock_without_lock_003_tsk_001 (void *pram)" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="194" ElType="!" desc="unlock_without_lock_003_func_002(...)" rngLn="194">
          <ElDescList>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="179" ElType="!" desc="int unlock_without_lock_003_func_002 (int a )" rngLn="179">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="181" ElType="." desc="int ret = 0;" rngLn="181">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="182" ElType="." desc="if (a > 1) {" rngLn="182">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="183" ElType="!" desc="ret = a++;" rngLn="183">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="187" ElType="!" desc="return ret;" rngLn="187">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="194" ElType=".P" desc="if(unlock_without_lock_003_func_002(10) >1)" rngLn="194">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_003 ( ) { # if ! defined (...'" ln="209" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="209" locStartPos="0" locEndLn="220" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="209" ElType="" desc="[Line 209] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="181095436">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="205" ElType="" desc="[Line 205] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="181095436">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_006 ( ) { int thread_set = 0 ; # if...'" ln="405" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="405" locStartPos="0" locEndLn="423" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="405" ElType="" desc="[Line 405] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-1034894674">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="399" ElType="" desc="[Line 399] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-1034894674">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="411" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="-1185861119" locStartln="411" locStartPos="0" locEndLn="412" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" FirstElSrcRngStartln="404" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="405" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="404" ElType=".C" desc="void unlock_without_lock_006 ()" rngLn="404">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="406" ElType="!" desc="int thread_set = 0;" rngLn="406">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="408" ElType="." desc="pthread_t th1,th2;" rngLn="408">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="409" ElType="." desc="intptr_t t1 = 10;" rngLn="409">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="410" srcRngStartPos="0" srcRngEndLn="411" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="410" ElType="." desc="intptr_t t2 = 20;" rngLn="410">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="411" srcRngStartPos="0" srcRngEndLn="412" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="411" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="411">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void * unlock_without_lock_007_tsk_001 ( void * input ) { #...'" ln="433" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="433" locStartPos="0" locEndLn="454" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="454" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="433" ElType="" desc="[Line 433] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="-518008210">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="427" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="427" ElType="" desc="[Line 427] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="1687729344">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void * unlock_without_lock_008_tsk_001 ( void * input ) { #...'" ln="504" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="504" locStartPos="0" locEndLn="525" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="525" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="504" ElType="" desc="[Line 504] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="1609896792">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="499" srcRngStartPos="0" srcRngEndLn="520" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="499" ElType="" desc="[Line 499] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="1609896792">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unlock_without_lock_main ( ) { if ( vflag == 1 || vflag...'" ln="574" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1185861119" NvActs="3" locStartln="574" locStartPos="0" locEndLn="614" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c">
      <ElDescList>
        <ElDesc srcRngStartln="574" srcRngStartPos="0" srcRngEndLn="614" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unlock_without_lock.c" srcRnghash="-1185861119" ln="574" ElType="" desc="[Line 574] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="937848746">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="569" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="569" ElType="" desc="[Line 569] Duplicated function in file 'unlock_without_lock.c'" sourceRngHash="937848746">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void unused_var_main ( ) { if ( vflag == 1 || vflag == 888 )...'" ln="161" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1699433038" NvActs="3" locStartln="161" locStartPos="0" locEndLn="196" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/unused_var.c">
      <ElDescList>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/unused_var.c" srcRnghash="1699433038" ln="161" ElType="" desc="[Line 161] Duplicated function in file 'unused_var.c'" sourceRngHash="1148020678">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unused_var.c" srcRnghash="-981428431" ln="167" ElType="" desc="[Line 167] Duplicated function in file 'unused_var.c'" sourceRngHash="1148020678">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;st&quot; is used prior to initialization" ln="251" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-1909556045" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="251" locStartPos="0" locEndLn="252" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="248" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="249" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="248" ElType=".C" desc="wrong_arguments_func_pointer_010_s_001 st;" rngLn="248">
          <Props>
            <Prop key="Tracked variables" val="st" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: st" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="249" ElType="." desc="void (*fptr)(wrong_arguments_func_pointer_010_s_001);" rngLn="249">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="250" ElType="." desc="fptr = (void (*)(wrong_arguments_func_pointer_010_s_001))wrong_arguments_func_pointer_010_func_001;/*Tool should detect this line as error*//*ERROR:Wrong arguments passed to a function pointer*/" rngLn="250">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="251" ElType=".P" desc="fptr(st);" rngLn="251">
          <Props>
            <Prop key="Tracked variables" val="st" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: st" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;temp&quot; is used prior to initialization" ln="337" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-489822176" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="337" locStartPos="0" locEndLn="338" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="330" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="331" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="330" ElType=".C" desc="int temp;" rngLn="330">
          <Props>
            <Prop key="Tracked variables" val="temp" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: temp" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="331" ElType="." desc="int i=0;" rngLn="331">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="332" ElType="." desc="memset(st1, 0, sizeof(*st1));" rngLn="332">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="333" ElType="." desc="for (i = 0; i &lt; MAX; i++)" rngLn="333">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="335" srcRngStartPos="0" srcRngEndLn="336" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="335" ElType="." desc="st.arr[i] = i;" rngLn="335">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="336" ElType="." desc="st1->arr[i] = st.arr[i]+i;" rngLn="336">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="337" ElType=".P" desc="temp += st.arr[i];" rngLn="337">
          <Props>
            <Prop key="Tracked variables" val="temp" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: temp" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;wrong_arguments_func_pointer_014_func_001(...) == 0&quot; always evaluates to true" ln="418" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1803187116" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="418" locStartPos="0" locEndLn="419" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="414" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="415" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="414" ElType=".C" desc="void wrong_arguments_func_pointer_014 ()" rngLn="414">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="416" srcRngStartPos="0" srcRngEndLn="417" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="416" ElType="." desc="float f;" rngLn="416">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="417" ElType="." desc="f=0.7;" rngLn="417">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="418" srcRngStartPos="0" srcRngEndLn="419" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="418" ElType="!" desc="wrong_arguments_func_pointer_014_func_001(...)" rngLn="418">
          <ElDescList>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="396" ElType="." desc="int ret =0;" rngLn="396">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="397" ElType="." desc="if (flag ==0)" rngLn="397">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="398" ElType="!" desc="ret = 0;" rngLn="398">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="401" ElType="!" desc="return ret;" rngLn="401">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="418" srcRngStartPos="0" srcRngEndLn="419" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="418" ElType=".P" desc="if(wrong_arguments_func_pointer_014_func_001(0) == 0)" rngLn="418">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;wrong_arguments_func_pointer_015_dst1_gbl&quot; may possibly be null" ln="451" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1942161134" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="451" locStartPos="0" locEndLn="452" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="448" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="449" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="447" ElType="." desc="int i;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="448" srcRngStartPos="0" srcRngEndLn="449" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="448" ElType=".C" desc="malloc(...)" rngLn="448">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="448" srcRngStartPos="0" srcRngEndLn="449" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="448" ElType="!" desc="wrong_arguments_func_pointer_015_dst1_gbl = (char**) malloc(5*sizeof(char*));" rngLn="448">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="449" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="449">
          <Props>
            <Prop key="Tracked variables" val="wrong_arguments_func_pointer_015_dst1_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: wrong_arguments_func_pointer_015_dst1_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="451" ElType=".P" desc="wrong_arguments_func_pointer_015_dst1_gbl[i]=(char*) malloc(15*sizeof(char));" rngLn="451">
          <Props>
            <Prop key="Tracked variables" val="wrong_arguments_func_pointer_015_dst1_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: wrong_arguments_func_pointer_015_dst1_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="518" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="518" locStartPos="0" locEndLn="519" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="507" ElType=".C" desc="int wrong_arguments_func_pointer_017_func_002 (int flag,float flag2)" rngLn="507">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="509" ElType="." desc="int ret = 0;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="510" ElType="!" desc="if (flag == 1)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="512" ElType="." desc="goto my_label;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="517" ElType="." desc="my_label:" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="518" ElType=".P" desc="if (flag == 1)" rngLn="518">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="526" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1293428094" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="526" locStartPos="0" locEndLn="527" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="507" ElType=".C" desc="int wrong_arguments_func_pointer_017_func_002 (int flag,float flag2)" rngLn="507">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="509" ElType="." desc="int ret = 0;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="510" ElType="!" desc="if (flag == 1)" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="512" ElType="." desc="goto my_label;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="517" ElType="." desc="my_label:" rngLn="517">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="518" ElType="." desc="if (flag == 1)" rngLn="518">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="520" ElType="." desc="wrong_arguments_func_pointer_017_func_gbl = (int (*)(float,int))wrong_arguments_func_pointer_017_func_001;" rngLn="520">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="521" ElType="." desc="goto my_label2;" rngLn="521">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="525" srcRngStartPos="0" srcRngEndLn="526" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="525" ElType="." desc="my_label2:" rngLn="525">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="526" ElType=".P" desc="if (flag == 1)" rngLn="526">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;st1&quot; may possibly be null" ln="593" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1279689651" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="593" locStartPos="0" locEndLn="594" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="592" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="593" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="590" srcRngStartPos="0" srcRngEndLn="591" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="590" ElType="." desc="wrong_arguments_func_pointer_018_s_001 st,*st1;" rngLn="590">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="591" srcRngStartPos="0" srcRngEndLn="592" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="591" ElType="." desc="st.a = 10;" rngLn="591">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="592" srcRngStartPos="0" srcRngEndLn="593" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="592" ElType=".C" desc="malloc(...)" rngLn="592">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="592" srcRngStartPos="0" srcRngEndLn="593" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="592" ElType="!" desc="st1 = (wrong_arguments_func_pointer_018_s_001 *)malloc(1*sizeof(wrong_arguments_func_pointer_018_s_001));" rngLn="592">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="593" srcRngStartPos="0" srcRngEndLn="594" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="593" ElType=".P" desc="memset(st1, 0, sizeof(*st1));" rngLn="593">
          <Props>
            <Prop key="Tracked variables" val="st1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: st1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void wrong_arguments_func_pointer_main ( ) { if ( vflag == 1...'" ln="609" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="1895400914" NvActs="3" locStartln="609" locStartPos="0" locEndLn="699" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="609" srcRngStartPos="0" srcRngEndLn="699" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="609" ElType="" desc="[Line 609] Duplicated function in file 'wrong_arguments_func_pointer.c'" sourceRngHash="-901411574">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="604" srcRngStartPos="0" srcRngEndLn="694" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="604" ElType="" desc="[Line 604] Duplicated function in file 'wrong_arguments_func_pointer.c'" sourceRngHash="-976868424">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="615" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-853300163" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="615" locStartPos="0" locEndLn="616" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="608" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="609" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="608" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="608" ElType=".C" desc="void wrong_arguments_func_pointer_main ()" rngLn="608">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="610" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="610">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="615" ElType=".P" desc="if (vflag == 2 || vflag ==888)" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="620" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1171444689" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="620" locStartPos="0" locEndLn="621" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="608" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="609" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="608" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="608" ElType=".C" desc="void wrong_arguments_func_pointer_main ()" rngLn="608">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="610" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="610">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="615" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="620" srcRngStartPos="0" srcRngEndLn="621" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="620" ElType=".P" desc="if (vflag == 3 || vflag ==888)" rngLn="620">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="625" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-292818412" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="625" locStartPos="0" locEndLn="626" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="608" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="609" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="608" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="608" ElType=".C" desc="void wrong_arguments_func_pointer_main ()" rngLn="608">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="610" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="610">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="615" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="620" srcRngStartPos="0" srcRngEndLn="621" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="620" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="620">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="625" ElType=".P" desc="if (vflag == 4 || vflag ==888)" rngLn="625">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="630" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2126796110" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="630" locStartPos="0" locEndLn="631" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="608" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="609" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="608" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="608" ElType=".C" desc="void wrong_arguments_func_pointer_main ()" rngLn="608">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="610" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="610">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="615" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="620" srcRngStartPos="0" srcRngEndLn="621" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="620" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="620">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="625" ElType="." desc="if (vflag == 4 || vflag ==888)" rngLn="625">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 4 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="630" srcRngStartPos="0" srcRngEndLn="631" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="630" ElType=".P" desc="if (vflag == 5 || vflag ==888)" rngLn="630">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 5) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;vflag == 888&quot; always evaluates to false" ln="635" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1530892423" lang="cpp" locType="sr" config="1" hash="1895400914" locStartln="635" locStartPos="0" locEndLn="636" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="608" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="609" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="608" srcRngStartPos="0" srcRngEndLn="609" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="608" ElType=".C" desc="void wrong_arguments_func_pointer_main ()" rngLn="608">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="610" ElType="." desc="if (vflag == 1 || vflag ==888)" rngLn="610">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 1) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 1 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="615" ElType="." desc="if (vflag == 2 || vflag ==888)" rngLn="615">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 2) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 2 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="620" srcRngStartPos="0" srcRngEndLn="621" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="620" ElType="." desc="if (vflag == 3 || vflag ==888)" rngLn="620">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 3) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 3 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="625" ElType="." desc="if (vflag == 4 || vflag ==888)" rngLn="625">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 4) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 4 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="630" srcRngStartPos="0" srcRngEndLn="631" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="630" ElType="." desc="if (vflag == 5 || vflag ==888)" rngLn="630">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 5) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (vflag == 888) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: vflag == 5 || vflag ==888 (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="635" srcRngStartPos="0" srcRngEndLn="636" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/wrong_arguments_func_pointer.c" srcRnghash="1895400914" ln="635" ElType=".P" desc="if (vflag == 6 || vflag ==888)" rngLn="635">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (vflag == 6) (assuming false)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by zero constant" ln="23" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="77931071" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="23" locStartPos="0" locEndLn="24" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="23" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="24" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="23" ElType="CP" desc="ret = dividend / 0;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by zero constant" ln="34" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="77931069" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="34" locStartPos="0" locEndLn="35" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="34" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="35" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="34" ElType="CP" desc="dividend /= 0;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by zero constant" ln="47" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="77931071" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="47" locStartPos="0" locEndLn="48" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="47" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="48" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="47" ElType="CP" desc="ret = dividend % 0;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="47">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisors[2]&quot; which may possibly be zero" ln="78" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="1034219055" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="78" locStartPos="0" locEndLn="79" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="284" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="285" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="284" srcRngStartPos="0" srcRngEndLn="285" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="284" ElType=".C" desc="zero_division_005();" rngLn="284">
          <ElDescList>
            <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="75" ElType="." desc="int dividend = 1000;" rngLn="75">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="76" ElType="." desc="int divisors[5] = {2, 1, 0, 3, 4};" rngLn="76">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="77" ElType="." desc="int ret;" rngLn="77">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="78" srcRngStartPos="0" srcRngEndLn="79" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="78" ElType=".P" desc="ret = dividend / divisors[2];/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="78">
              <Props />
              <Anns>
                <Ann msg="Point of division by zero" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;zero_division_007_s_gbl.divisor&quot; which may possibly be zero" ln="118" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="-1153769168" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="117" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="118" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="117" ElType=".C" desc="zero_division_007_func_001();" rngLn="117">
          <ElDescList>
            <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="110" ElType="!" desc="zero_division_007_s_gbl.divisor = 0;" rngLn="110">
              <Props />
              <Anns>
                <Ann msg="Variable assignment: zero_division_007_s_gbl.divisor = 0" kind="valEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="118" ElType=".P" desc="ret = dividend / zero_division_007_s_gbl.divisor;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="118">
          <Props />
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by zero constant" ln="129" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="77931071" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="129" locStartPos="0" locEndLn="130" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="129" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="130" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="129" ElType="CP" desc="ret = dividend / 0.0;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="129">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisor&quot; which may possibly be zero" ln="141" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="1881935790" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="141" locStartPos="0" locEndLn="142" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="139" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="140" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="139" ElType=".C" desc="int divisor = 0;" rngLn="139">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Variable assignment: divisor = 0" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="140" ElType="." desc="int ret;" rngLn="140">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="141" ElType=".P" desc="ret = dividend / divisor;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="141">
          <Props />
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;2 * divisor - 4&quot; which may possibly be zero" ln="166" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="1184732280" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="166" locStartPos="0" locEndLn="167" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="164" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="165" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="164" ElType=".C" desc="int divisor = 2;" rngLn="164">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Variable assignment: divisor = 2" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="165" ElType="." desc="int ret;" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="166" ElType=".P" desc="ret = dividend / (2 * divisor - 4);/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="166">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: tmp$0 = (2 * divisor) -> tmp$0 = 4" kind="valEval" />
            <Ann msg="Variable assignment: tmp$1 = (tmp$0 - 4) -> tmp$1 = 0" kind="valEval" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisor * divisor - 4&quot; which may possibly be zero" ln="178" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="-1860687511" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="178" locStartPos="0" locEndLn="179" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="176" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="177" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="176" ElType=".C" desc="int divisor = 2;" rngLn="176">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Variable assignment: divisor = 2" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="177" ElType="." desc="int ret;" rngLn="177">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="178" ElType=".P" desc="ret = dividend / (divisor * divisor - 4);/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: tmp$0 = (divisor * divisor) -> tmp$0 = 4" kind="valEval" />
            <Ann msg="Variable assignment: tmp$1 = (tmp$0 - 4) -> tmp$1 = 0" kind="valEval" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;zero_division_013_func_001()&quot; which may possibly be zero" ln="195" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="-1787710262" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="195" locStartPos="0" locEndLn="196" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="195" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="196" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="195" ElType=".C" desc="zero_division_013_func_001()" rngLn="195">
          <ElDescList>
            <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="188" ElType="!" desc="return 0;" rngLn="188">
              <Props />
              <Anns>
                <Ann msg="Returning value: 0" kind="valEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="195" ElType=".P" desc="ret = dividend / zero_division_013_func_001();/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: tmp$0 = zero_division_013_func_001() -> tmp$0 = 0" kind="valEval" />
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisor&quot; which may possibly be zero" ln="206" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="-1980129803" lang="cpp" locType="sr" urgent="true" config="1" hash="-1047403005" locStartln="206" locStartPos="0" locEndLn="207" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="211" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="212" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="211" ElType=".C" desc="zero_division_014_func_001(0);" rngLn="211">
          <ElDescList>
            <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="202" ElType="!" desc="void zero_division_014_func_001 (int divisor)" rngLn="202">
              <Props />
              <Anns>
                <Ann msg="Parameter value: divisor = 0" kind="valEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="204" srcRngStartPos="0" srcRngEndLn="205" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="204" ElType="." desc="int dividend = 1000;" rngLn="204">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="205" ElType="." desc="int ret;" rngLn="205">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="206" ElType=".P" desc="ret = dividend / divisor;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="206">
              <Props />
              <Anns>
                <Ann msg="Point of division by zero" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisor1&quot; which may possibly be zero" ln="225" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="1342525058" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="225" locStartPos="0" locEndLn="226" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="221" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="222" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="221" ElType=".C" desc="int divisor = 0;" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
            <Ann msg="Variable assignment: divisor = 0" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="222" ElType="." desc="int divisor1;" rngLn="222">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="223" srcRngStartPos="0" srcRngEndLn="224" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="223" ElType="." desc="int ret;" rngLn="223">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="224" srcRngStartPos="0" srcRngEndLn="225" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="224" ElType="!" desc="divisor1 = divisor;" rngLn="224">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: divisor1 = divisor -> divisor1 = 0" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="225" srcRngStartPos="0" srcRngEndLn="226" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="225" ElType=".P" desc="ret = dividend / divisor1;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="225">
          <Props />
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;zero_division_016_gbl_divisor&quot; may possibly be null" ln="236" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="946492102" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="236" locStartPos="0" locEndLn="237" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="235" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="236" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="235" ElType=".C" desc="malloc(...)" rngLn="235">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="235" ElType="!" desc="zero_division_016_gbl_divisor = malloc(1*sizeof(int));" rngLn="235">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="236" ElType=".P" desc="*zero_division_016_gbl_divisor= -1;" rngLn="236">
          <Props>
            <Prop key="Tracked variables" val="zero_division_016_gbl_divisor" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: zero_division_016_gbl_divisor" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Division by &quot;divisor2&quot; which may possibly be zero" ln="252" ruleSAFMsg="Point of division by zero" auth="kali" sev="1" rule="BD-PB-ZERO" ruleSCSCMsg="Start of the path" tool="c++test" id="1796490715" lang="cpp" locType="sr" config="1" hash="-1047403005" locStartln="252" locStartPos="0" locEndLn="253" locEndPos="0" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" FirstElSrcRngStartln="248" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="249" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="248" ElType=".C" desc="zero_division_016_func_001 ();" rngLn="248">
          <ElDescList>
            <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="235" ElType="." desc="zero_division_016_gbl_divisor = malloc(1*sizeof(int));" rngLn="235">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="236" ElType="." desc="*zero_division_016_gbl_divisor= -1;" rngLn="236">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="249" ElType="." desc="zero_division_016_func_002 ();" rngLn="249">
          <ElDescList>
            <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="240" ElType="." desc="(*zero_division_016_gbl_divisor)++;" rngLn="240">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="250" ElType="!" desc="divisor1 = *zero_division_016_gbl_divisor;" rngLn="250">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: divisor1 = *zero_division_016_gbl_divisor -> divisor1 = 0" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="251" ElType="!" desc="divisor2 = divisor1;" rngLn="251">
          <Props />
          <Anns>
            <Ann msg="Variable assignment: divisor2 = divisor1 -> divisor2 = 0" kind="valEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="252" ElType=".P" desc="ret = dividend / divisor2;/*Tool should detect this line as error*/ /* ERROR:division by zero */" rngLn="252">
          <Props />
          <Anns>
            <Ann msg="Point of division by zero" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'void zero_division_main ( ) { if ( vflag == 1 || vflag == 888...'" ln="261" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="-1047403005" NvActs="3" locStartln="261" locStartPos="0" locEndLn="341" locEndPos="1" locFile="/ITC-Benchmarks/01.w_Defects/zero_division.c">
      <ElDescList>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/01.w_Defects/zero_division.c" srcRnghash="-1047403005" ln="261" ElType="" desc="[Line 261] Duplicated function in file 'zero_division.c'" sourceRngHash="-854638708">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="342" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c" srcRnghash="498516290" ln="262" ElType="" desc="[Line 262] Duplicated function in file 'zero_division.c'" sourceRngHash="-854638708">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <DupViol msg="Duplicated function: 'void dynamic_buffer_overrun_008 ( ) { int * * buf = ( int * *...'" ln="140" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="474256298" NvActs="3" locStartln="140" locStartPos="0" locEndLn="156" locEndPos="1" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <ElDescList>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="140" ElType="" desc="[Line 140] Duplicated function in file 'buffer_overrun_dynamic.c'" sourceRngHash="-764094324">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="141" ElType="" desc="[Line 141] Duplicated function in file 'buffer_underrun_dynamic.c'" sourceRngHash="803333710">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="145" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="287116564" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="145" locStartPos="0" locEndLn="146" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="141" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="142" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="141" ElType=".C" desc="calloc(...)" rngLn="141">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="141" srcRngStartPos="0" srcRngEndLn="142" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="141" ElType="!" desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="141">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="142" ElType="." desc="int i,j;" rngLn="142">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="144" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="144" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="144">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="145" ElType=".P" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="145">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="173" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="537054116" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="173" locStartPos="0" locEndLn="174" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="164" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="165" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="164" ElType=".C" desc="calloc(...)" rngLn="164">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="164" ElType="!" desc="int *buf1=(int*)calloc(5,sizeof(int));" rngLn="164">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="165" ElType="." desc="int *buf2=(int*)calloc(5,sizeof(int));" rngLn="165">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="166" ElType="." desc="int *buf3=(int*)calloc(5,sizeof(int));" rngLn="166">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="167" ElType="." desc="int *buf4=(int*)calloc(5,sizeof(int));" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="168" ElType="." desc="int *buf5=(int*)calloc(5,sizeof(int));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="169" ElType="!" desc="int **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="170" ElType="." desc="int i,j=4;" rngLn="170">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="171" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="171">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="173" ElType=".P" desc="*((*pbuf[i])+j)=5; /*Tool should not detect this line as error*/ /*No ERROR:Buffer overrun*/" rngLn="173">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="434" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="11838668" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="434" locStartPos="0" locEndLn="435" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="439" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="440" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="439" ElType=".C" desc="calloc(...)" rngLn="439">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="439" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="439">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="441" ElType="!" desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="441">
          <ElDescList>
            <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="434" ElType=".P" desc="*(buf+4) = 1;/*Tool should not detect this line as error*/ /*No ERROR:Buffer overrun*/" rngLn="434">
              <Props>
                <Prop key="Tracked variables" val="buf" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: buf" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; is checked for null after being dereferenced" ln="442" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="910323187" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="442" locStartPos="0" locEndLn="443" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="434" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="435" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="441" ElType="!" desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="441">
          <ElDescList>
            <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="434" ElType=".C" desc="*(buf+4) = 1;/*Tool should not detect this line as error*/ /*No ERROR:Buffer overrun*/" rngLn="434">
              <Props>
                <Prop key="Tracked variables" val="buf != null" />
              </Props>
              <Anns>
                <Ann msg="Point of dereferencing" kind="cause" />
                <Ann msg="Important values: buf != null" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="442" ElType=".P" desc="if(buf!=NULL)" rngLn="442">
          <Props>
            <Prop key="Tracked variables" val="buf != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: buf != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;buf != 0&quot; always evaluates to true" ln="442" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1346758817" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="442" locStartPos="0" locEndLn="443" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="437" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="438" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="437" ElType=".C" desc="void dynamic_buffer_overrun_024 ()" rngLn="437">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="439" ElType="!" desc="calloc(...)" rngLn="439">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="439" ElType="!" desc="int *buf=(int*) calloc(5,sizeof(int));" rngLn="439">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="441" ElType="." desc="dynamic_buffer_overrun_024_func_001(buf);" rngLn="441">
          <ElDescList>
            <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="434" ElType="." desc="*(buf+4) = 1;/*Tool should not detect this line as error*/ /*No ERROR:Buffer overrun*/" rngLn="434">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="442" ElType=".P" desc="if(buf!=NULL)" rngLn="442">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf1&quot; may possibly be null" ln="511" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1711640148" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="511" locStartPos="0" locEndLn="512" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="506" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="507" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="506" ElType=".C" desc="calloc(...)" rngLn="506">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="506" ElType="!" desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="506">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="507" ElType="." desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="507">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="508" ElType="." desc="int i;" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="509" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="511" ElType=".P" desc="*(buf1+i)=i;" rngLn="511">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf2&quot; may possibly be null" ln="513" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1562790955" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="513" locStartPos="0" locEndLn="514" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="506" ElType="." desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="506">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="507" ElType=".C" desc="calloc(...)" rngLn="507">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="507" ElType="!" desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="508" ElType="." desc="int i;" rngLn="508">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="509" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="511" ElType="." desc="*(buf1+i)=i;" rngLn="511">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="509" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="513" ElType=".P" desc="*(buf2+*(buf1+2))=1;/*Tool should not detect this line as error*/ /*No ERROR:Buffer overrun*/" rngLn="513">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="550" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="713477784" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="550" locStartPos="0" locEndLn="551" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" FirstElSrcRngStartln="546" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="547" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="545" ElType="." desc="int i,j;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="546" ElType=".C" desc="malloc(...)" rngLn="546">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="546" ElType="!" desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="548" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="548">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" srcRnghash="474256298" ln="550" ElType=".P" desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="550">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 33 is out of acceptable range: 'lower than 30'" ln="617" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="474256298" locStartln="617" locStartPos="0" locEndLn="618" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_overrun_dynamic.c" />
    <FlowViol msg="&quot;buf&quot; may possibly be null" ln="146" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="287116564" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="142" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="143" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="142" ElType=".C" desc="calloc(...)" rngLn="142">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="142" ElType="!" desc="int **buf = (int**) calloc(5,sizeof(int*));" rngLn="142">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="143" ElType="." desc="int i,j;" rngLn="143">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="145" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="146" ElType=".P" desc="buf[i]=(int*) calloc(5,sizeof(int));" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="174" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="537054116" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="174" locStartPos="0" locEndLn="175" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="165" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="166" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="165" ElType=".C" desc="calloc(...)" rngLn="165">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="165" ElType="!" desc="int *buf1=(int*)calloc(5,sizeof(int));" rngLn="165">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="166" srcRngStartPos="0" srcRngEndLn="167" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="166" ElType="." desc="int *buf2=(int*)calloc(5,sizeof(int));" rngLn="166">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="167" ElType="." desc="int *buf3=(int*)calloc(5,sizeof(int));" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="168" ElType="." desc="int *buf4=(int*)calloc(5,sizeof(int));" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="169" ElType="." desc="int *buf5=(int*)calloc(5,sizeof(int));" rngLn="169">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="170" ElType="!" desc="int **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="171" ElType="." desc="int i,j=4;" rngLn="171">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="172" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="172">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="174" ElType=".P" desc="*((*pbuf[i])+j)=5; /*Tool should not detect this line as error*/ /*No ERROR:Buffer Underrun*/" rngLn="174">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf1&quot; may possibly be null" ln="513" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1711640148" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="513" locStartPos="0" locEndLn="514" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="507" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="508" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="507" ElType=".C" desc="calloc(...)" rngLn="507">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="507" ElType="!" desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="508" ElType="." desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="508">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="511" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="511">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="513" ElType=".P" desc="*(buf1+i)=i;" rngLn="513">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf2&quot; may possibly be null" ln="515" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-796666173" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="515" locStartPos="0" locEndLn="516" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="508" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="509" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="507" srcRngStartPos="0" srcRngEndLn="508" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="507" ElType="." desc="int *buf1=(int*) calloc(5,sizeof(int));" rngLn="507">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="508" ElType=".C" desc="calloc(...)" rngLn="508">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="508" ElType="!" desc="int *buf2=(int*) calloc(3,sizeof(int));" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="509" ElType="." desc="int i;" rngLn="509">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="511" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="511">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="513" ElType="." desc="*(buf1+i)=i;" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="511" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="511">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="515" ElType=".P" desc="*(buf2-*(buf1+0))=1;/*Tool should not detect this line as error*/ /*No ERROR:Buffer Underrun*/" rngLn="515">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="548" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="170058712" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="548" locStartPos="0" locEndLn="549" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="544" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="545" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="543" ElType="." desc="int i,j;" rngLn="543">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="544" ElType=".C" desc="malloc(...)" rngLn="544">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="544" ElType="!" desc="char ** doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="544">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="546" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="546">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="548" ElType=".P" desc="doubleptr[i]=calloc(10,sizeof(char));" rngLn="548">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;doubleptr&quot; may possibly be null" ln="670" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-734612191" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="670" locStartPos="0" locEndLn="671" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="667" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="668" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="666" ElType="." desc="int i,loc1=0,loc2=0;" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="667" ElType=".C" desc="malloc(...)" rngLn="667">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="667" ElType="!" desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="667">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="670" ElType=".P" desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="670">
          <Props>
            <Prop key="Tracked variables" val="doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;loc1 == 0&quot; always evaluates to true" ln="672" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-2077549683" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="672" locStartPos="0" locEndLn="673" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="664" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="665" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="664" srcRngStartPos="0" srcRngEndLn="665" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="664" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="664">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="666" ElType="!" desc="int i,loc1=0,loc2=0;" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="667" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="667">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="670" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="670" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="672" ElType=".P" desc="if (loc1==0)" rngLn="672">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;loc2 == 0&quot; always evaluates to true" ln="677" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="691298564" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="677" locStartPos="0" locEndLn="678" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" FirstElSrcRngStartln="664" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="665" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="664" srcRngStartPos="0" srcRngEndLn="665" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="664" ElType=".C" desc="void dynamic_buffer_underrun_035()" rngLn="664">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="666" srcRngStartPos="0" srcRngEndLn="667" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="666" ElType="!" desc="int i,loc1=0,loc2=0;" rngLn="666">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="667" ElType="." desc="char** doubleptr=(char**) malloc(10* sizeof(char*));" rngLn="667">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="670" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="670" ElType="." desc="doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="669" srcRngStartPos="0" srcRngEndLn="670" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="669" ElType="." desc="for (i=0;i&lt;10;i++)" rngLn="669">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="672" srcRngStartPos="0" srcRngEndLn="673" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="672" ElType="." desc="if (loc1==0)" rngLn="672">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (loc1 == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="673" srcRngStartPos="0" srcRngEndLn="674" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="673" ElType="." desc="loc1++;" rngLn="673">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="675" srcRngStartPos="0" srcRngEndLn="676" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="675" ElType="." desc="doubleptr[loc1][loc2]='T';" rngLn="675">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="677" srcRngStartPos="0" srcRngEndLn="678" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" srcRnghash="1540331107" ln="677" ElType=".P" desc="if(loc2==0)" rngLn="677">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 40 is out of acceptable range: 'lower than 30'" ln="790" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="1540331107" locStartln="790" locStartPos="0" locEndLn="791" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/buffer_underrun_dynamic.c" />
    <FlowViol msg="Condition &quot;cmp_funcadr_001_func_001() == 0&quot; always evaluates to false" ln="26" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1954227812" lang="cpp" locType="sr" config="1" hash="-2092991881" locStartln="26" locStartPos="0" locEndLn="27" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" FirstElSrcRngStartln="23" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="24" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="23" ElType=".C" desc="void cmp_funcadr_001 ()" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="25" ElType="." desc="int ret = 0;" rngLn="25">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="26" ElType="!" desc="cmp_funcadr_001_func_001()" rngLn="26">
          <ElDescList>
            <ElDesc srcRngStartln="20" srcRngStartPos="0" srcRngEndLn="21" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="20" ElType="!" desc="return &amp;cmp_funcadr_001_glb_a;" rngLn="20">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="26" ElType=".P" desc="if (cmp_funcadr_001_func_001() == NULL) /*Tool should not detect this line as error*/ /*No ERROR:compare function address with NULL*/" rngLn="26">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;cmp_funcadr_002_func_001() == 10&quot; always evaluates to true" ln="47" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1960765528" lang="cpp" locType="sr" config="1" hash="-2092991881" locStartln="47" locStartPos="0" locEndLn="48" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" FirstElSrcRngStartln="44" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="45" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="44" ElType=".C" desc="void cmp_funcadr_002 ()" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="46" ElType="." desc="int ret = 0;" rngLn="46">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="47" ElType="!" desc="cmp_funcadr_002_func_001()" rngLn="47">
          <ElDescList>
            <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="41" ElType="!" desc="return 10;" rngLn="41">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/cmp_funcadr.c" srcRnghash="-2092991881" ln="47" ElType=".P" desc="if (cmp_funcadr_002_func_001() == 10) /*Tool should not detect this line as error*/ /*No ERROR:compare function address with NULL*/" rngLn="47">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="37" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-852666513" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="37" locStartPos="0" locEndLn="38" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="32" ElType=".C" desc="void dead_code_002 ()" rngLn="32">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="34" ElType="!" desc="int flag = 1;" rngLn="34">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="35" ElType="." desc="int a = 0;" rngLn="35">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="36" ElType="." desc="int ret;" rngLn="36">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="37" ElType=".P" desc="if (flag)" rngLn="37">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;dead_code_003_func_001()&quot; always evaluates to true" ln="58" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1073278722" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="58" locStartPos="0" locEndLn="59" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="54" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="55" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="54" ElType=".C" desc="void dead_code_003 ()" rngLn="54">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="56" ElType="." desc="int a = 0;" rngLn="56">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="57" srcRngStartPos="0" srcRngEndLn="58" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="57" ElType="." desc="int ret;" rngLn="57">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="58" ElType="!" desc="dead_code_003_func_001()" rngLn="58">
          <ElDescList>
            <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="51" ElType="!" desc="return 1;" rngLn="51">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="58" srcRngStartPos="0" srcRngEndLn="59" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="58" ElType=".P" desc="if (dead_code_003_func_001())" rngLn="58">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="96" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1300689893" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="96" locStartPos="0" locEndLn="97" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="91" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="92" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="91" srcRngStartPos="0" srcRngEndLn="92" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="91" ElType=".C" desc="void dead_code_005 ()" rngLn="91">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="93" ElType="!" desc="int flag = 1;" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="94" ElType="." desc="int a = 0;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="95" ElType="." desc="int ret;" rngLn="95">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="96" ElType=".P" desc="if (flag > 0)" rngLn="96">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 0&quot; always evaluates to true" ln="113" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1937422424" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="113" locStartPos="0" locEndLn="114" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="108" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="109" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="108" srcRngStartPos="0" srcRngEndLn="109" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="108" ElType=".C" desc="void dead_code_006 ()" rngLn="108">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="110" ElType="!" desc="int flag = 0;" rngLn="110">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="111" ElType="." desc="int a = 0;" rngLn="111">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="112" ElType="." desc="int ret;" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="113" ElType=".P" desc="if (flag == 0)" rngLn="113">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt;= 1&quot; always evaluates to true" ln="130" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1047612194" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="130" locStartPos="0" locEndLn="131" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="125" ElType=".C" desc="void dead_code_007 ()" rngLn="125">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="127" ElType="." desc="int a = 0;" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="128" ElType="." desc="int i;" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="129" ElType="." desc="int ret;" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="130" ElType=".P" desc="for (i = 0; i&lt;=1; i ++)" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="165" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-852666513" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="165" locStartPos="0" locEndLn="166" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="160" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="161" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="160" ElType=".C" desc="void dead_code_009 ()" rngLn="160">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="162" srcRngStartPos="0" srcRngEndLn="163" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="162" ElType="!" desc="int flag = 1;" rngLn="162">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="163" srcRngStartPos="0" srcRngEndLn="164" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="163" ElType="." desc="int a = 0;" rngLn="163">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="164" srcRngStartPos="0" srcRngEndLn="165" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="164" ElType="." desc="int ret;" rngLn="164">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="165" ElType=".P" desc="while (flag)" rngLn="165">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;dead_code_010_func_001()&quot; always evaluates to true" ln="187" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="268475182" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="183" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="184" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="183" ElType=".C" desc="void dead_code_010 ()" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="185" ElType="." desc="int a = 0;" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="186" ElType="." desc="int ret;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="187" ElType="!" desc="dead_code_010_func_001()" rngLn="187">
          <ElDescList>
            <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="180" ElType="!" desc="return 1;" rngLn="180">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="187" ElType=".P" desc="while (dead_code_010_func_001())" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="227" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1300689893" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="227" locStartPos="0" locEndLn="228" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="222" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="223" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="222" ElType=".C" desc="void dead_code_012 ()" rngLn="222">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="224" srcRngStartPos="0" srcRngEndLn="225" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="224" ElType="!" desc="int flag = 1;" rngLn="224">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="225" srcRngStartPos="0" srcRngEndLn="226" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="225" ElType="." desc="int a = 0;" rngLn="225">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="226" srcRngStartPos="0" srcRngEndLn="227" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="226" ElType="." desc="int ret;" rngLn="226">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="227" ElType=".P" desc="while (flag > 0) /*Tool should not detect this line as error*/ /*No ERROR:Dead Code*/" rngLn="227">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 0&quot; always evaluates to true" ln="245" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1937422424" lang="cpp" locType="sr" config="1" hash="2059440211" locStartln="245" locStartPos="0" locEndLn="246" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" FirstElSrcRngStartln="240" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="241" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="240" ElType=".C" desc="void dead_code_013 ()" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="242" ElType="!" desc="int flag = 0;" rngLn="242">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="243" ElType="." desc="int a = 0;" rngLn="243">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="244" ElType="." desc="int ret;" rngLn="244">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/dead_code.c" srcRnghash="2059440211" ln="245" ElType=".P" desc="while (flag == 0)" rngLn="245">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;foo&quot; may possibly be null" ln="26" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-887229689" lang="cpp" locType="sr" config="1" hash="1239802089" locStartln="26" locStartPos="0" locEndLn="27" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" FirstElSrcRngStartln="23" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="24" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="21" ElType="." desc="char* foo;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="22" srcRngStartPos="0" srcRngEndLn="23" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="22" ElType="." desc="int counter;" rngLn="22">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="23" ElType=".C" desc="calloc(...)" rngLn="23">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="23" ElType="!" desc="foo=calloc(11,sizeof(char));" rngLn="23">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="24" srcRngStartPos="0" srcRngEndLn="25" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="24" ElType="." desc="for(counter=0;counter&lt;10;counter++)" rngLn="24">
          <Props>
            <Prop key="Tracked variables" val="foo" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: foo" kind="var" />
            <Ann msg="Loop condition evaluation: (counter &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="26" srcRngStartPos="0" srcRngEndLn="27" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/deletion_of_data_structure_sentinel.c" srcRnghash="1239802089" ln="26" ElType=".P" desc="foo[counter]='a'; /*Tool should not detect this line as error*/ /*No ERROR:Deletion of a data structure sentinel*/" rngLn="26">
          <Props>
            <Prop key="Tracked variables" val="foo" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: foo" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="37" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="37" locStartPos="0" locEndLn="38" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="32" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="33" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="32" ElType=".C" desc="malloc(...)" rngLn="32">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="32" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="33" ElType="." desc="int i;" rngLn="33">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="35" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="37" ElType=".P" desc="ptr[i]='a';" rngLn="37">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i == 10&quot; always evaluates to false" ln="38" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1814132384" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="38" locStartPos="0" locEndLn="39" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="30" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="31" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="30" srcRngStartPos="0" srcRngEndLn="31" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="30" ElType=".C" desc="void double_free_002()" rngLn="30">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="32" ElType="." desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="33" ElType="." desc="int i;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="35" ElType="!" desc="for(i=0;i&lt;10;i++)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="37" ElType="." desc="ptr[i]='a';" rngLn="37">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="38" ElType=".P" desc="if(i==10)" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="56" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="56" locStartPos="0" locEndLn="57" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="51" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="52" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="51" ElType=".C" desc="malloc(...)" rngLn="51">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="51" srcRngStartPos="0" srcRngEndLn="52" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="51" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="51">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="52" srcRngStartPos="0" srcRngEndLn="53" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="52" ElType="." desc="int i;" rngLn="52">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="54" srcRngStartPos="0" srcRngEndLn="55" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="54" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="54">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="56" srcRngStartPos="0" srcRngEndLn="57" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="56" ElType=".P" desc="*(ptr+i)='a';" rngLn="56">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="74" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1911547377" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="74" locStartPos="0" locEndLn="75" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="70" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="71" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="70" ElType=".C" desc="malloc(...)" rngLn="70">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="70" ElType="!" desc="char* ptr= (char*) malloc(10*sizeof(char));" rngLn="70">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="72" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="71" ElType="." desc="int i;" rngLn="71">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="72" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="72">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="74" ElType=".P" desc="*(ptr+i)='a';" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag &lt; 0&quot; always evaluates to false" ln="117" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="63531660" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="117" locStartPos="0" locEndLn="118" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="112" ElType=".C" desc="void double_free_007()" rngLn="112">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="114" srcRngStartPos="0" srcRngEndLn="115" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="114" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="114">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="115" ElType="!" desc="int flag=0;" rngLn="115">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="117" ElType=".P" desc="if(flag&lt;0)" rngLn="117">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to false" ln="151" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-256744428" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="151" locStartPos="0" locEndLn="152" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="146" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="147" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="146" ElType=".C" desc="void double_free_009()" rngLn="146">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="148" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="149" ElType="!" desc="int flag=0;" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="151" ElType=".P" desc="while(flag==1)" rngLn="151">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of freed resource &quot;ptr&quot;" ln="172" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-RES-FREE" ruleSCSCMsg="Point where resource is freed" tool="c++test" id="-217746518" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="172" locStartPos="0" locEndLn="173" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="172" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="173" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props>
        <Prop key="Tracked variables" val="Freed resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="167" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="168" ElType="." desc="int flag=1;" rngLn="168">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="170" ElType="." desc="while(flag)" rngLn="170">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="172" ElType=".C" desc="free(ptr); /*Tool should not detect this line as error*/ /*No ERROR:Double free*/" rngLn="172">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where resource is freed" kind="cause" />
            <Ann msg="Freed resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="173" ElType="." desc="flag--;" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="170" ElType="." desc="while(flag)" rngLn="170">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (flag != 0) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="172" ElType=".P" desc="free(ptr); /*Tool should not detect this line as error*/ /*No ERROR:Double free*/" rngLn="172">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Freed resource: ptr" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="190" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1623283852" lang="cpp" locType="sr" config="1" hash="-281693713" locStartln="190" locStartPos="0" locEndLn="191" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" FirstElSrcRngStartln="183" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="184" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="183" ElType=".C" desc="void double_free_011()" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="185" ElType="." desc="char* ptr= (char*) malloc(sizeof(char));" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="186" ElType="!" desc="int flag=1,a=0,b=1;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="188" ElType="." desc="while(a&lt;b)" rngLn="188">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/double_free.c" srcRnghash="-281693713" ln="190" ElType=".P" desc="if(flag ==1)" rngLn="190">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="51" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="51" locStartPos="1" locEndLn="51" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="104" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="104" locStartPos="1" locEndLn="104" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="152" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="152" locStartPos="1" locEndLn="152" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="199" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="199" locStartPos="1" locEndLn="199" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="248" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="248" locStartPos="1" locEndLn="248" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <StdViol msg="Loop does not contain terminate point" ln="290" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="24909657" locStartln="290" locStartPos="1" locEndLn="290" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/double_release.c" />
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="82" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-106387793" lang="cpp" locType="sr" config="1" hash="1442650935" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" FirstElSrcRngStartln="77" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="78" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="77" srcRngStartPos="0" srcRngEndLn="78" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="77" ElType=".C" desc="void endless_loop_004 ()" rngLn="77">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="79" ElType="." desc="int ret;" rngLn="79">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="80" ElType="." desc="int a = 0;" rngLn="80">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="81" srcRngStartPos="0" srcRngEndLn="82" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="81" ElType="!" desc="int flag = 1;" rngLn="81">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="82" ElType=".P" desc="while (flag)" rngLn="82">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;endless_loop_005_func_001()&quot; always evaluates to true" ln="107" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1953440919" lang="cpp" locType="sr" config="1" hash="1442650935" locStartln="107" locStartPos="0" locEndLn="108" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" FirstElSrcRngStartln="103" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="104" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="103" srcRngStartPos="0" srcRngEndLn="104" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="103" ElType=".C" desc="void endless_loop_005 ()" rngLn="103">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="105" srcRngStartPos="0" srcRngEndLn="106" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="105" ElType="." desc="int ret;" rngLn="105">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="106" srcRngStartPos="0" srcRngEndLn="107" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="106" ElType="." desc="int a = 0;" rngLn="106">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="107" ElType="!" desc="endless_loop_005_func_001()" rngLn="107">
          <ElDescList>
            <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="100" ElType="!" desc="return 1;" rngLn="100">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="107" srcRngStartPos="0" srcRngEndLn="108" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="107" ElType=".P" desc="while (endless_loop_005_func_001())" rngLn="107">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="153" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-2030183333" lang="cpp" locType="sr" config="1" hash="1442650935" locStartln="153" locStartPos="0" locEndLn="154" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" FirstElSrcRngStartln="148" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="149" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="148" ElType=".C" desc="void endless_loop_007 ()" rngLn="148">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="150" ElType="." desc="int ret;" rngLn="150">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="151" ElType="." desc="int a = 0;" rngLn="151">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="152" ElType="!" desc="int flag = 1;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/endless_loop.c" srcRnghash="1442650935" ln="153" ElType=".P" desc="while (flag > 0) /*Tool should not detect this line as error*/ /*No ERROR:Unintentional end less loop*/" rngLn="153">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 1&quot; always evaluates to false" ln="35" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1728701520" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="35" locStartPos="0" locEndLn="36" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="31" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="32" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="31" ElType=".C" desc="void free_nondynamic_allocated_memory_002()" rngLn="31">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="33" srcRngStartPos="0" srcRngEndLn="34" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="33" ElType="." desc="char* ptr=&quot;a&quot;;;" rngLn="33">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="34" ElType="!" desc="int flag=1;" rngLn="34">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="35" srcRngStartPos="0" srcRngEndLn="36" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="35" ElType=".P" desc="if(flag>1)" rngLn="35">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-952104547" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="72" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="73" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="72" ElType=".C" desc="calloc(...)" rngLn="72">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="72" ElType="!" desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="73" ElType="." desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="74" ElType="!" desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="76" ElType="." desc="if(buf2 != NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[1], buf2&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-511085929" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="73" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="74" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="72" ElType="." desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="73" ElType=".C" desc="calloc(...)" rngLn="73">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="73" ElType="!" desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="74" ElType="!" desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="76" ElType="." desc="if(buf2 != NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="82" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[1], buf2&quot; may possibly be null" ln="82" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-519481383" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="82" locStartPos="0" locEndLn="83" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="72" ElType="." desc="char *buf1=(char*)calloc(5,sizeof(char));" rngLn="72">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="73" ElType="." desc="char *buf2=(char*)calloc(5,sizeof(char));" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="74" ElType="." desc="char **pbuf[2] = {&amp;buf1, &amp;buf2};" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="75" ElType="." desc="int i,j=1;" rngLn="75">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="76" ElType=".C" desc="if(buf2 != NULL)" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="82" ElType="." desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="80" ElType="." desc="for(i=0;i&lt;2;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 2) (assuming true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="82" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="82">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[1], buf2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[1], buf2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a &lt; b&quot; always evaluates to false" ln="127" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1371926453" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="127" locStartPos="0" locEndLn="128" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="123" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="124" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="123" ElType=".C" desc="void free_nondynamic_allocated_memory_008()" rngLn="123">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="125" ElType="." desc="char* ptr=&quot;b&quot;;" rngLn="125">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="126" ElType="!" desc="int a=2,b=0;" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="127" ElType=".P" desc="while(a&lt;b)" rngLn="127">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a > b&quot; always evaluates to false" ln="140" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1406872856" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="140" locStartPos="0" locEndLn="141" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="136" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="137" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="136" ElType=".C" desc="void free_nondynamic_allocated_memory_009()" rngLn="136">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="138" srcRngStartPos="0" srcRngEndLn="139" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="138" ElType="." desc="char* ptr=&quot;c&quot;;" rngLn="138">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="139" srcRngStartPos="0" srcRngEndLn="140" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="139" ElType="!" desc="int a=0,b=2;" rngLn="139">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="140" ElType=".P" desc="while(a>b)" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 0&quot; always evaluates to false" ln="168" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="610228824" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="168" locStartPos="0" locEndLn="169" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="165" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="166" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="165" srcRngStartPos="0" srcRngEndLn="166" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="165" ElType=".C" desc="void free_nondynamic_allocated_memory_011()" rngLn="165">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="167" srcRngStartPos="0" srcRngEndLn="168" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="167" ElType="." desc="int i;" rngLn="167">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="168" ElType=".P" desc="for(i=0;i&lt;0;i++)" rngLn="168">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 5&quot; always evaluates to false" ln="187" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-19721283" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="180" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="181" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="180" ElType=".C" desc="void free_nondynamic_allocated_memory_012()" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="182" ElType="." desc="char* ptr=&quot;a&quot;;" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="183" ElType="!" desc="int a=0,b=2;" rngLn="183">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="184" ElType="." desc="while(a&lt;b)" rngLn="184">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="186" ElType="!" desc="a++;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="187" ElType=".P" desc="if(a==5)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Invalid resource freeing: &quot;ptr&quot; represents a string literal" ln="188" ruleSAFMsg="Point of freeing" auth="kali" sev="1" rule="BD-RES-INVFREE" ruleSCSCMsg="Point where the resource is defined" tool="c++test" id="966119922" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="188" locStartPos="0" locEndLn="189" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="182" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="183" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Invalid resource" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="182" ElType=".C" desc="char* ptr=&quot;a&quot;;" rngLn="182">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Point where the resource is defined" kind="cause" />
            <Ann msg="Invalid resource: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="183" ElType="." desc="int a=0,b=2;" rngLn="183">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="184" ElType="." desc="while(a&lt;b)" rngLn="184">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (a &lt; b) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="186" ElType="." desc="a++;" rngLn="186">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="187" ElType="." desc="if(a==5)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 5) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="188" ElType=".P" desc="free(ptr); /*Tool should not detect this line as error*/ /*No ERROR:Free memory not allocated dynamically*/" rngLn="188">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Invalid resource: ptr" kind="var" />
            <Ann msg="Point of freeing" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;new_struct&quot; may possibly be null" ln="209" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1801457904" lang="cpp" locType="sr" config="1" hash="-457069028" locStartln="209" locStartPos="0" locEndLn="210" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" FirstElSrcRngStartln="207" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="208" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="207" ElType=".C" desc="malloc(...)" rngLn="207">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="207" ElType="!" desc="free_nondynamic_allocated_memory_struct_013* new_struct=malloc(sizeof(free_nondynamic_allocated_memory_struct_013));" rngLn="207">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_nondynamically_allocated_memory.c" srcRnghash="-457069028" ln="209" ElType=".P" desc="new_struct->next = malloc(sizeof(free_nondynamic_allocated_memory_struct_013));" rngLn="209">
          <Props>
            <Prop key="Tracked variables" val="new_struct" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: new_struct" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a > 0&quot; always evaluates to true" ln="39" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1226722158" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="39" locStartPos="0" locEndLn="40" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="36" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="37" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="36" ElType=".C" desc="void free_null_pointer_002 ()" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="38" ElType="!" desc="int a=20;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="39" ElType=".P" desc="if(a>0)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fptr&quot; may possibly be null" ln="84" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1800232626" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="84" locStartPos="0" locEndLn="85" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="79" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="80" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="79" ElType=".C" desc="malloc(...)" rngLn="79">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="79" srcRngStartPos="0" srcRngEndLn="80" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="79" ElType="!" desc="float **fptr = (float**) malloc(5*sizeof(float*));" rngLn="79">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="80" ElType="." desc="int i=0,j=0;" rngLn="80">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="84" srcRngStartPos="0" srcRngEndLn="85" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="84" ElType=".P" desc="fptr[i]=(float*) malloc(5*sizeof(float));" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_005_gbl_ptr&quot; may possibly be null" ln="119" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="495579461" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="119" locStartPos="0" locEndLn="120" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="110" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="111" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="117" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="117">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="118" ElType="!" desc="free_null_pointer_005_func_001(strlen(str));" rngLn="118">
          <ElDescList>
            <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="110" ElType=".C" desc="free_null_pointer_005_gbl_ptr=NULL;" rngLn="110">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="111" ElType="." desc="if(a == INDEX)" rngLn="111">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="119" ElType=".P" desc="strcpy(free_null_pointer_005_gbl_ptr,str);" rngLn="119">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_005_gbl_ptr&quot; may possibly be null" ln="119" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="612316362" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="119" locStartPos="0" locEndLn="120" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="112" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="113" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="117" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="117">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="118" ElType="!" desc="free_null_pointer_005_func_001(strlen(str));" rngLn="118">
          <ElDescList>
            <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="110" ElType="." desc="free_null_pointer_005_gbl_ptr=NULL;" rngLn="110">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="111" ElType="." desc="if(a == INDEX)" rngLn="111">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="112" ElType=".C" desc="malloc(...)" rngLn="112">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="112" ElType="!" desc="free_null_pointer_005_gbl_ptr= malloc(sizeof(char) * (len+1));" rngLn="112">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="119" ElType=".P" desc="strcpy(free_null_pointer_005_gbl_ptr,str);" rngLn="119">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_005_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_005_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_006_func_001(...) == 0&quot; always evaluates to true" ln="150" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1880943962" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="150" locStartPos="0" locEndLn="151" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="144" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="145" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="144" srcRngStartPos="0" srcRngEndLn="145" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="144" ElType=".C" desc="void free_null_pointer_006 ()" rngLn="144">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="146" ElType="." desc="int flag=0,i;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="147" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="147">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="148" ElType="." desc="free_null_pointer_006_s_001* s=(free_null_pointer_006_s_001*) calloc(5,sizeof(free_null_pointer_006_s_001)) ;" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="150" ElType="!" desc="free_null_pointer_006_func_001(...)" rngLn="150">
          <ElDescList>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="130" ElType="." desc="int ret;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="131" ElType="." desc="if (flag ==0)" rngLn="131">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="132" ElType="!" desc="ret = 0;" rngLn="132">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="135" srcRngStartPos="0" srcRngEndLn="136" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="135" ElType="!" desc="return ret;" rngLn="135">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="150" ElType=".P" desc="if(free_null_pointer_006_func_001(flag)==0)" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="154" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="214236931" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="154" locStartPos="0" locEndLn="155" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="148" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="149" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="146" ElType="." desc="int flag=0,i;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="147" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="147">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="148" ElType=".C" desc="calloc(...)" rngLn="148">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="148" ElType="!" desc="free_null_pointer_006_s_001* s=(free_null_pointer_006_s_001*) calloc(5,sizeof(free_null_pointer_006_s_001)) ;" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="150" ElType="." desc="free_null_pointer_006_func_001(...)" rngLn="150">
          <ElDescList>
            <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="130" ElType="." desc="int ret;" rngLn="130">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="131" ElType="." desc="if (flag ==0)" rngLn="131">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="132" ElType="." desc="ret = 0;" rngLn="132">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="135" srcRngStartPos="0" srcRngEndLn="136" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="135" ElType="." desc="return ret;" rngLn="135">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="150" ElType="." desc="if(free_null_pointer_006_func_001(flag)==0)" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="152" ElType="." desc="for(i= 0; i&lt;5 ;i++)" rngLn="152">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="154" ElType=".P" desc="(s+i)->buf = (char*)malloc(25* sizeof(char));" rngLn="154">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_007_gbl_doubleptr&quot; may possibly be null" ln="187" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-123341258" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="187" locStartPos="0" locEndLn="188" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="183" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="184" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="182" ElType="." desc="int i,j;" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="183" ElType=".C" desc="malloc(...)" rngLn="183">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="183" ElType="!" desc="free_null_pointer_007_gbl_doubleptr=(long**) malloc(10*sizeof(long*));" rngLn="183">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="185" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="185">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_007_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_007_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="187" ElType=".P" desc="free_null_pointer_007_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="187">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_007_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_007_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_007_func_001(...) == 0&quot; always evaluates to true" ln="221" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="375239175" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="221" locStartPos="0" locEndLn="222" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="199" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="200" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="199" srcRngStartPos="0" srcRngEndLn="200" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="199" ElType=".C" desc="void free_null_pointer_007()" rngLn="199">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="201" srcRngStartPos="0" srcRngEndLn="202" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="201" ElType="." desc="int flag=0,i,j;" rngLn="201">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="202" srcRngStartPos="0" srcRngEndLn="203" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="202" ElType="." desc="free_null_pointer_007_gbl_doubleptr=NULL;" rngLn="202">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="203" ElType="." desc="goto label;" rngLn="203">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="220" ElType="." desc="label:" rngLn="220">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="221" ElType="!" desc="free_null_pointer_007_func_001(...)" rngLn="221">
          <ElDescList>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="173" ElType="." desc="int ret ;" rngLn="173">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="174" ElType="." desc="if (flag ==0)" rngLn="174">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="175" ElType="!" desc="ret = 0;" rngLn="175">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="178" ElType="!" desc="return ret;" rngLn="178">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="221" ElType=".P" desc="if(free_null_pointer_007_func_001(flag)==ZERO)" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="249" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1228557131" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="249" locStartPos="0" locEndLn="250" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="239" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="240" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="246" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="246">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="247" ElType="." desc="char *str1=NULL;" rngLn="247">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="248" ElType="!" desc="free_null_pointer_008_func_001(strlen(str),&amp;str1);" rngLn="248">
          <ElDescList>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="236" ElType="." desc="char * p = NULL;" rngLn="236">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="237" ElType="." desc="if(min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer)" rngLn="237">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (min &lt;= 0) (assuming true)" kind="condEval" />
                <Ann msg="Condition evaluation: (max &lt;= 5) (assuming true)" kind="condEval" />
                <Ann msg="Condition evaluation: min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="239" ElType=".C" desc="malloc(...)" rngLn="239">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="239" ElType="!" desc="p = malloc(sizeof(char) * (len+1));" rngLn="239">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="240" ElType="!" desc="*stringPtr = p;" rngLn="240">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="249" ElType=".P" desc="strcpy(str1,str);" rngLn="249">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="249" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-244210689" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="249" locStartPos="0" locEndLn="250" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="247" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="248" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="246" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="246">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="247" ElType=".C" desc="char *str1=NULL;" rngLn="247">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="248" ElType="!" desc="free_null_pointer_008_func_001(strlen(str),&amp;str1);" rngLn="248">
          <ElDescList>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="236" ElType="." desc="char * p = NULL;" rngLn="236">
              <Props>
                <Prop key="Tracked variables" val="*stringPtr" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: *stringPtr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="237" ElType="!" desc="if(min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer)" rngLn="237">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (min &lt;= 0) (assuming false)" kind="condEval" />
                <Ann msg="Condition evaluation: min &lt;= min_buffer &amp;&amp; max &lt;= max_buffer (false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="249" ElType=".P" desc="strcpy(str1,str);" rngLn="249">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_009dst&quot; may possibly be null" ln="271" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="732918211" lang="cpp" locType="sr" urgent="true" config="1" hash="-567114097" locStartln="271" locStartPos="0" locEndLn="272" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="268" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="269" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="263" ElType="." desc="free_null_pointer_009dst = NULL;" rngLn="263">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="264" ElType="." desc="int i;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="266" ElType="." desc="while(1)" rngLn="266">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="268" ElType=".C" desc="malloc(...)" rngLn="268">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="268" ElType="!" desc="free_null_pointer_009dst = (char**) malloc(5*sizeof(char*));" rngLn="268">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="269" srcRngStartPos="0" srcRngEndLn="270" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="269" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="269">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_009dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_009dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="271" ElType=".P" desc="free_null_pointer_009dst[i]=(char*) malloc(15*sizeof(char));" rngLn="271">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_009dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_009dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_010_gbl_dst&quot; may possibly be null" ln="314" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="245277066" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="314" locStartPos="0" locEndLn="315" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="311" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="312" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="307" ElType="." desc="int i;" rngLn="307">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="309" ElType="." desc="while(SET_MEM)" rngLn="309">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="311" srcRngStartPos="0" srcRngEndLn="312" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="311" ElType=".C" desc="malloc(...)" rngLn="311">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="311" srcRngStartPos="0" srcRngEndLn="312" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="311" ElType="!" desc="free_null_pointer_010_gbl_dst = (char**) malloc(5*sizeof(char*));" rngLn="311">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="312" srcRngStartPos="0" srcRngEndLn="313" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="312" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="312">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_010_gbl_dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_010_gbl_dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="314" ElType=".P" desc="free_null_pointer_010_gbl_dst[i]=(char*) malloc(15*sizeof(char));" rngLn="314">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_010_gbl_dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_010_gbl_dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="371" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1752382869" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="371" locStartPos="0" locEndLn="372" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="370" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="371" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="364" srcRngStartPos="0" srcRngEndLn="365" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="364" ElType="." desc="int flag = rand();" rngLn="364">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="365" srcRngStartPos="0" srcRngEndLn="366" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="365" ElType="." desc="flag = 1;" rngLn="365">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="366" srcRngStartPos="0" srcRngEndLn="367" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="366" ElType="." desc="switch (flag)" rngLn="366">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="370" srcRngStartPos="0" srcRngEndLn="371" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="370" ElType=".C" desc="calloc(...)" rngLn="370">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="370" srcRngStartPos="0" srcRngEndLn="371" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="370" ElType="!" desc="u = (free_null_pointer_011_u_001 *)calloc(1,sizeof(free_null_pointer_011_u_001));" rngLn="370">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="371" srcRngStartPos="0" srcRngEndLn="372" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="371" ElType=".P" desc="u->a = 40;" rngLn="371">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(...) == 0&quot; always evaluates to true" ln="449" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1346286165" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="449" locStartPos="0" locEndLn="450" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="444" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="445" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="444" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="444">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="446" ElType="." desc="double *ptr =NULL, a;" rngLn="446">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="447" ElType="." desc="int flag=10;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="!" desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="437" ElType="." desc="int ret;" rngLn="437">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="438" ElType="." desc="if (flag ==0)" rngLn="438">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="439" ElType="!" desc="ret = 0;" rngLn="439">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="442" ElType="!" desc="return ret;" rngLn="442">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType=".P" desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA&quot; always evaluates to true" ln="449" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-431946543" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="449" locStartPos="0" locEndLn="450" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="444" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="445" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="444" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="444">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="446" ElType="." desc="double *ptr =NULL, a;" rngLn="446">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="447" ElType="." desc="int flag=10;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="437" ElType="." desc="int ret;" rngLn="437">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="438" ElType="." desc="if (flag ==0)" rngLn="438">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="439" ElType="." desc="ret = 0;" rngLn="439">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="442" ElType="." desc="return ret;" rngLn="442">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType=".P" desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="451" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-446083343" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="451" locStartPos="0" locEndLn="452" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="444" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="445" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="444" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="444">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="446" ElType="." desc="double *ptr =NULL, a;" rngLn="446">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="447" ElType="!" desc="int flag=10;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="437" ElType="." desc="int ret;" rngLn="437">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="438" ElType="." desc="if (flag ==0)" rngLn="438">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="439" ElType="." desc="ret = 0;" rngLn="439">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="442" ElType="." desc="return ret;" rngLn="442">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="451" ElType=".P" desc="(flag == 10)? (ptr= (double*) malloc(10*sizeof(double))) : ( ptr= NULL);" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="452" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1496274252" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="452" locStartPos="0" locEndLn="453" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="451" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="452" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="446" ElType="." desc="double *ptr =NULL, a;" rngLn="446">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="447" ElType="." desc="int flag=10;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="437" ElType="." desc="int ret;" rngLn="437">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="438" ElType="." desc="if (flag ==0)" rngLn="438">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="439" ElType="." desc="ret = 0;" rngLn="439">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="442" ElType="." desc="return ret;" rngLn="442">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="451" ElType=".C" desc="malloc(...)" rngLn="451">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="451" ElType="!" desc="(flag == 10)? (ptr= (double*) malloc(10*sizeof(double))) : ( ptr= NULL);" rngLn="451">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="453" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="452" ElType=".P" desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="452">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="452" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="510822954" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="452" locStartPos="0" locEndLn="453" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="444" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="445" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="444" ElType=".C" desc="void free_null_pointer_012 ()" rngLn="444">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="446" ElType="." desc="double *ptr =NULL, a;" rngLn="446">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="447" ElType="!" desc="int flag=10;" rngLn="447">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="free_null_pointer_012_func_001(...)" rngLn="449">
          <ElDescList>
            <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="437" ElType="." desc="int ret;" rngLn="437">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="438" ElType="." desc="if (flag ==0)" rngLn="438">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="439" ElType="." desc="ret = 0;" rngLn="439">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="442" ElType="." desc="return ret;" rngLn="442">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="449" ElType="." desc="if (free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MAX ==1)" rngLn="449">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (free_null_pointer_012_func_001(...) == 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Condition evaluation: free_null_pointer_012_func_001(0) == ZERO &amp;&amp; MA (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="451" ElType="." desc="(flag == 10)? (ptr= (double*) malloc(10*sizeof(double))) : ( ptr= NULL);" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="453" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="452" ElType=".P" desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="452">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;fptr&quot; may possibly be null" ln="489" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-259770605" lang="cpp" locType="sr" urgent="true" config="1" hash="-567114097" locStartln="489" locStartPos="0" locEndLn="490" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="487" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="488" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="477" srcRngStartPos="0" srcRngEndLn="478" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="477" ElType="." desc="double * fptr;" rngLn="477">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="478" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="479" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="479">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="480" srcRngStartPos="0" srcRngEndLn="481" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="480" ElType="." desc="fptr = NULL;" rngLn="480">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="481" ElType="." desc="int i=0;" rngLn="481">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="484" ElType="." desc="double * fptr = *fp1;" rngLn="484">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="485" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="485" ElType="." desc="if(i>=0 &amp;&amp; i&lt;=1)" rngLn="485">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i >= 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (i &lt;= 1) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: i>=0 &amp;&amp; i&lt;=1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="487" ElType=".C" desc="calloc(...)" rngLn="487">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="487" ElType="!" desc="fptr = (double *)calloc(10, sizeof(double));" rngLn="487">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="489" ElType=".P" desc="*(fptr+3) = 50.5;" rngLn="489">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: fptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: *fp1, *fp2, fptr" ln="490" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="695111597" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="490" locStartPos="0" locEndLn="491" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="487" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="488" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="477" srcRngStartPos="0" srcRngEndLn="478" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="477" ElType="." desc="double * fptr;" rngLn="477">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="478" srcRngStartPos="0" srcRngEndLn="479" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="478" ElType="." desc="double **fp1 = &amp;fptr;" rngLn="478">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="479" srcRngStartPos="0" srcRngEndLn="480" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="479" ElType="." desc="double **fp2 = &amp;fptr;" rngLn="479">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="480" srcRngStartPos="0" srcRngEndLn="481" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="480" ElType="." desc="fptr = NULL;" rngLn="480">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="481" srcRngStartPos="0" srcRngEndLn="482" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="481" ElType="." desc="int i=0;" rngLn="481">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="484" ElType="." desc="double * fptr = *fp1;" rngLn="484">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="485" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="485" ElType="." desc="if(i>=0 &amp;&amp; i&lt;=1)" rngLn="485">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (i >= 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (i &lt;= 1) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: i>=0 &amp;&amp; i&lt;=1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="487" ElType=".C" desc="calloc(...)" rngLn="487">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="487" ElType="!" desc="fptr = (double *)calloc(10, sizeof(double));" rngLn="487">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="489" ElType="." desc="*(fptr+3) = 50.5;" rngLn="489">
          <Props>
            <Prop key="Tracked variables" val="fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="490" srcRngStartPos="0" srcRngEndLn="491" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="490" ElType="!" desc="*fp1 = fptr;" rngLn="490">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="491" ElType="!" desc="i++;" rngLn="491">
          <Props>
            <Prop key="Tracked variables" val="fptr, *fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: fptr, *fp1, *fp2, fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="492" srcRngStartPos="0" srcRngEndLn="493" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="492" ElType="." desc="}while(i>=0 &amp;&amp; i&lt;=1);" rngLn="492">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i >= 0) (true)" kind="condEval" />
            <Ann msg="Loop condition evaluation: (i &lt;= 1) (true)" kind="condEval" />
            <Ann msg="Loop condition evaluation: i>=0 &amp;&amp; i&lt;=1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="484" srcRngStartPos="0" srcRngEndLn="485" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="484" ElType="!" desc="double * fptr = *fp1;" rngLn="484">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="485" srcRngStartPos="0" srcRngEndLn="486" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="485" ElType="." desc="if(i>=0 &amp;&amp; i&lt;=1)" rngLn="485">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr, fptr" kind="var" />
            <Ann msg="Condition evaluation: (i >= 0) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (i &lt;= 1) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: i>=0 &amp;&amp; i&lt;=1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="487" srcRngStartPos="0" srcRngEndLn="488" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="487" ElType="!" desc="fptr = (double *)calloc(10, sizeof(double));" rngLn="487">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="489" ElType="." desc="*(fptr+3) = 50.5;" rngLn="489">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="490" srcRngStartPos="0" srcRngEndLn="491" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="490" ElType=".P" desc="*fp1 = fptr;" rngLn="490">
          <Props>
            <Prop key="Tracked variables" val="*fp1, *fp2, fptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: *fp1, *fp2, fptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_014_gbl_s&quot; may possibly be null" ln="521" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="751201114" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="521" locStartPos="0" locEndLn="522" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="520" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="521" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="515" ElType="." desc="int i;" rngLn="515">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="516" ElType="." desc="if(flag ==1)" rngLn="516">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="520" ElType=".C" desc="malloc(...)" rngLn="520">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="520" ElType="!" desc="free_null_pointer_014_gbl_s = malloc(sizeof(free_null_pointer_014_s_001));" rngLn="520">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="521" ElType=".P" desc="free_null_pointer_014_gbl_s->p1 = malloc(sizeof(double));" rngLn="521">
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_014_gbl_s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_014_gbl_s->p1&quot; may possibly be null" ln="536" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="239476031" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="536" locStartPos="0" locEndLn="537" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="521" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="522" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="560" ElType="!" desc="free_null_pointer_014_func_001(1);" rngLn="560">
          <ElDescList>
            <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="515" ElType="." desc="int i;" rngLn="515">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="516" ElType="." desc="if(flag ==1)" rngLn="516">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="520" ElType="." desc="free_null_pointer_014_gbl_s = malloc(sizeof(free_null_pointer_014_s_001));" rngLn="520">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="521" ElType=".C" desc="malloc(...)" rngLn="521">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="521" ElType="!" desc="free_null_pointer_014_gbl_s->p1 = malloc(sizeof(double));" rngLn="521">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="522" ElType="." desc="free_null_pointer_014_gbl_s->p2 = malloc(sizeof(double));" rngLn="522">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p1" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p1" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="523" ElType="." desc="free_null_pointer_014_gbl_s->p3 = malloc(sizeof(double));" rngLn="523">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="561" ElType="!" desc="free_null_pointer_014_func_002(1);" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="531" srcRngStartPos="0" srcRngEndLn="532" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="531" ElType="." desc="int i;" rngLn="531">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p1" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p1" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="532" ElType="." desc="if (flag ==1)" rngLn="532">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="534" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="534" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="534">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="536" srcRngStartPos="0" srcRngEndLn="537" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="536" ElType=".P" desc="*(free_null_pointer_014_gbl_s->p1) = arr[0];" rngLn="536">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p1" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p1" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p1" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_014_gbl_s->p2&quot; may possibly be null" ln="537" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1471964977" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="537" locStartPos="0" locEndLn="538" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="522" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="523" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="560" ElType="!" desc="free_null_pointer_014_func_001(1);" rngLn="560">
          <ElDescList>
            <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="515" ElType="." desc="int i;" rngLn="515">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="516" ElType="." desc="if(flag ==1)" rngLn="516">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="520" ElType="." desc="free_null_pointer_014_gbl_s = malloc(sizeof(free_null_pointer_014_s_001));" rngLn="520">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="521" ElType="." desc="free_null_pointer_014_gbl_s->p1 = malloc(sizeof(double));" rngLn="521">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="522" ElType=".C" desc="malloc(...)" rngLn="522">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="522" ElType="!" desc="free_null_pointer_014_gbl_s->p2 = malloc(sizeof(double));" rngLn="522">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="523" ElType="." desc="free_null_pointer_014_gbl_s->p3 = malloc(sizeof(double));" rngLn="523">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p2" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p2" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="561" ElType="!" desc="free_null_pointer_014_func_002(1);" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="531" srcRngStartPos="0" srcRngEndLn="532" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="531" ElType="." desc="int i;" rngLn="531">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p2" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p2" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="532" ElType="." desc="if (flag ==1)" rngLn="532">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="534" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="534" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="534">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="536" srcRngStartPos="0" srcRngEndLn="537" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="536" ElType="." desc="*(free_null_pointer_014_gbl_s->p1) = arr[0];" rngLn="536">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="537" ElType=".P" desc="*(free_null_pointer_014_gbl_s->p2) = arr[1];" rngLn="537">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p2" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p2" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p2" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;free_null_pointer_014_gbl_s->p3&quot; may possibly be null" ln="538" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-460421795" lang="cpp" locType="sr" config="1" hash="-567114097" locStartln="538" locStartPos="0" locEndLn="539" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" FirstElSrcRngStartln="523" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="524" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="560" ElType="!" desc="free_null_pointer_014_func_001(1);" rngLn="560">
          <ElDescList>
            <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="515" ElType="." desc="int i;" rngLn="515">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="516" ElType="." desc="if(flag ==1)" rngLn="516">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="520" srcRngStartPos="0" srcRngEndLn="521" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="520" ElType="." desc="free_null_pointer_014_gbl_s = malloc(sizeof(free_null_pointer_014_s_001));" rngLn="520">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="521" srcRngStartPos="0" srcRngEndLn="522" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="521" ElType="." desc="free_null_pointer_014_gbl_s->p1 = malloc(sizeof(double));" rngLn="521">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="522" ElType="." desc="free_null_pointer_014_gbl_s->p2 = malloc(sizeof(double));" rngLn="522">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="523" ElType=".C" desc="malloc(...)" rngLn="523">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="523" ElType="!" desc="free_null_pointer_014_gbl_s->p3 = malloc(sizeof(double));" rngLn="523">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="518" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="518">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p3" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p3" kind="var" />
                <Ann msg="Loop condition evaluation: (i &lt; 1) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="561" ElType="!" desc="free_null_pointer_014_func_002(1);" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="531" srcRngStartPos="0" srcRngEndLn="532" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="531" ElType="." desc="int i;" rngLn="531">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p3" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p3" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="532" srcRngStartPos="0" srcRngEndLn="533" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="532" ElType="." desc="if (flag ==1)" rngLn="532">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="534" srcRngStartPos="0" srcRngEndLn="535" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="534" ElType="." desc="for (i=0;i&lt;1;i++)" rngLn="534">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 1) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="536" srcRngStartPos="0" srcRngEndLn="537" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="536" ElType="." desc="*(free_null_pointer_014_gbl_s->p1) = arr[0];" rngLn="536">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="537" srcRngStartPos="0" srcRngEndLn="538" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="537" ElType="." desc="*(free_null_pointer_014_gbl_s->p2) = arr[1];" rngLn="537">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="538" srcRngStartPos="0" srcRngEndLn="539" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/free_null_pointer.c" srcRnghash="-567114097" ln="538" ElType=".P" desc="*(free_null_pointer_014_gbl_s->p3) = arr[2];" rngLn="538">
              <Props>
                <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p3" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p3" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="free_null_pointer_014_gbl_s->p3" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: free_null_pointer_014_gbl_s->p3" kind="var" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <DupViol msg="Duplicated function: 'static char * func_pointer_004_func_001 ( char * str1 ) { int...'" ln="98" NvType="1" sev="2" auth="kali" rule="CDD-DUPM" tool="c++test" cat="CDD" lang="cpp" locType="sr" config="1" hash="23187417" NvActs="3" locStartln="98" locStartPos="0" locEndLn="120" locEndPos="1" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <ElDescList>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="98" ElType="" desc="[Line 98] Duplicated function in file 'func_pointer.c'" sourceRngHash="-2122972094">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="504" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="1" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="504" ElType="" desc="[Line 504] Duplicated function in file 'invalid_memory_access.c'" sourceRngHash="-1952363995">
          <Props />
        </ElDesc>
      </ElDescList>
    </DupViol>
    <FlowViol msg="&quot;func_pointer_005_doubleptr_gbl&quot; may possibly be null" ln="161" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1292251726" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="161" locStartPos="0" locEndLn="162" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="157" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="158" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="156" ElType="." desc="int i,j;" rngLn="156">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="157" ElType=".C" desc="malloc(...)" rngLn="157">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="157" ElType="!" desc="func_pointer_005_doubleptr_gbl=(long**) malloc(10*sizeof(long*));" rngLn="157">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="159" srcRngStartPos="0" srcRngEndLn="160" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="159" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="159">
          <Props>
            <Prop key="Tracked variables" val="func_pointer_005_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: func_pointer_005_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="161" srcRngStartPos="0" srcRngEndLn="162" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="161" ElType=".P" desc="func_pointer_005_doubleptr_gbl[i]=(long*) malloc(10*sizeof(long));" rngLn="161">
          <Props>
            <Prop key="Tracked variables" val="func_pointer_005_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: func_pointer_005_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;func_pointer_005_func_001(...) == 0&quot; always evaluates to true" ln="178" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1751339184" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="178" locStartPos="0" locEndLn="179" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="173" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="174" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="173" ElType=".C" desc="void func_pointer_005()" rngLn="173">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="175" ElType="." desc="int flag=0,i,j;" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="176" ElType="." desc="long ** doubleptr=NULL;" rngLn="176">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="178" ElType="!" desc="func_pointer_005_func_001(...)" rngLn="178">
          <ElDescList>
            <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="146" ElType="." desc="int ret;" rngLn="146">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="147" ElType="." desc="if (flag ==0)" rngLn="147">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="148" ElType="!" desc="ret = 0;" rngLn="148">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="151" ElType="!" desc="return ret;" rngLn="151">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="178" ElType=".P" desc="if(func_pointer_005_func_001(flag)==0)" rngLn="178">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;func_pointer_006_doubleptr_gbl&quot; may possibly be null" ln="221" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-498304772" lang="cpp" locType="sr" urgent="true" config="1" hash="23187417" locStartln="221" locStartPos="0" locEndLn="222" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="216" ElType="." desc="int i,j;" rngLn="216">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="217" ElType=".C" desc="malloc(...)" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="217" ElType="!" desc="func_pointer_006_doubleptr_gbl=(float **) malloc(10*sizeof(float*));" rngLn="217">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="219" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="219">
          <Props>
            <Prop key="Tracked variables" val="func_pointer_006_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: func_pointer_006_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="221" ElType=".P" desc="func_pointer_006_doubleptr_gbl[i]=(float *) malloc(10*sizeof(float));" rngLn="221">
          <Props>
            <Prop key="Tracked variables" val="func_pointer_006_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: func_pointer_006_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;func_pointer_006_func_001(...) == 0&quot; always evaluates to true" ln="262" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="329380894" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="262" locStartPos="0" locEndLn="263" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="259" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="260" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="259" ElType=".C" desc="void func_pointer_006()" rngLn="259">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="261" ElType="." desc="int flag=0,i,j;" rngLn="261">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="262" ElType="!" desc="func_pointer_006_func_001(...)" rngLn="262">
          <ElDescList>
            <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="206" ElType="." desc="int ret;" rngLn="206">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="207" ElType="." desc="if (flag ==0)" rngLn="207">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="208" ElType="!" desc="ret = 0;" rngLn="208">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="211" ElType="!" desc="return ret;" rngLn="211">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="262" ElType=".P" desc="if(func_pointer_006_func_001(flag)==0)" rngLn="262">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="509" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-446217706" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="509" locStartPos="0" locEndLn="510" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="498" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="499" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="498" srcRngStartPos="0" srcRngEndLn="499" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="498" ElType=".C" desc="int func_pointer_013_func_002 (int flag)" rngLn="498">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="500" srcRngStartPos="0" srcRngEndLn="501" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="500" ElType="." desc="int ret = 0;" rngLn="500">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="501" srcRngStartPos="0" srcRngEndLn="502" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="501" ElType="." desc="int arr[]={3,8,9,10,4};" rngLn="501">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="502" srcRngStartPos="0" srcRngEndLn="503" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="502" ElType="." desc="int *ptr;" rngLn="502">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="503" srcRngStartPos="0" srcRngEndLn="504" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="503" ElType="!" desc="if (flag == 1)" rngLn="503">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="505" ElType="." desc="goto my_label;" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="508" ElType="." desc="my_label:" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="509" srcRngStartPos="0" srcRngEndLn="510" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="509" ElType=".P" desc="if (flag == 1)" rngLn="509">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="554" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="554" locStartPos="0" locEndLn="555" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="543" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="544" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="543" ElType=".C" desc="int func_pointer_014_func_002 (int flag)" rngLn="543">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="545" ElType="." desc="int ret = 0;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="546" ElType="!" desc="if (flag == 1)" rngLn="546">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="548" ElType="." desc="goto my_label;" rngLn="548">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="553" ElType="." desc="my_label:" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="554" ElType=".P" desc="if (flag == 1)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="563" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="654581049" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="563" locStartPos="0" locEndLn="564" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="543" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="544" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="543" srcRngStartPos="0" srcRngEndLn="544" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="543" ElType=".C" desc="int func_pointer_014_func_002 (int flag)" rngLn="543">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="545" ElType="." desc="int ret = 0;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="546" ElType="!" desc="if (flag == 1)" rngLn="546">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="548" srcRngStartPos="0" srcRngEndLn="549" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="548" ElType="." desc="goto my_label;" rngLn="548">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="553" srcRngStartPos="0" srcRngEndLn="554" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="553" ElType="." desc="my_label:" rngLn="553">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="554" ElType="." desc="if (flag == 1)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="556" srcRngStartPos="0" srcRngEndLn="557" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="556" ElType="." desc="func_gbl = func_pointer_014_func_001;" rngLn="556">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="558" srcRngStartPos="0" srcRngEndLn="559" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="558" ElType="." desc="goto my_label2;" rngLn="558">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="562" srcRngStartPos="0" srcRngEndLn="563" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="562" ElType="." desc="my_label2:" rngLn="562">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="563" srcRngStartPos="0" srcRngEndLn="564" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="563" ElType=".P" desc="if (flag == 1)" rngLn="563">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;st1&quot; may possibly be null" ln="627" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-552877224" lang="cpp" locType="sr" config="1" hash="23187417" locStartln="627" locStartPos="0" locEndLn="628" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" FirstElSrcRngStartln="626" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="627" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="625" srcRngStartPos="0" srcRngEndLn="626" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="625" ElType="." desc="func_pointer_015_s_001 st,*st1;" rngLn="625">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="626" srcRngStartPos="0" srcRngEndLn="627" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="626" ElType=".C" desc="malloc(...)" rngLn="626">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="626" srcRngStartPos="0" srcRngEndLn="627" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="626" ElType="!" desc="st1 = (func_pointer_015_s_001 *)malloc(1*sizeof(func_pointer_015_s_001));" rngLn="626">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="627" srcRngStartPos="0" srcRngEndLn="628" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/func_pointer.c" srcRnghash="23187417" ln="627" ElType=".P" desc="memset(st1, 0, sizeof(*st1));" rngLn="627">
          <Props>
            <Prop key="Tracked variables" val="st1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: st1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a &lt;= 100&quot; always evaluates to true" ln="50" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1603105284" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="50" locStartPos="0" locEndLn="51" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="46" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="47" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="46" srcRngStartPos="0" srcRngEndLn="47" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="46" ElType=".C" desc="void function_return_value_unchecked_001 ()" rngLn="46">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="48" ElType="." desc="int a;" rngLn="48">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="49" srcRngStartPos="0" srcRngEndLn="50" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="49" ElType="!" desc="a = function_return_value_unchecked_001_func_002(1); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="49">
          <ElDescList>
            <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="34" ElType="!" desc="int function_return_value_unchecked_001_func_002(int flag)" rngLn="34">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="36" ElType="." desc="int temp;" rngLn="36">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="37" srcRngStartPos="0" srcRngEndLn="38" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="37" ElType="!" desc="temp = function_return_value_unchecked_001_func_001(flag);" rngLn="37">
              <ElDescList>
                <ElDesc srcRngStartln="25" srcRngStartPos="0" srcRngEndLn="26" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="25" ElType="!" desc="int function_return_value_unchecked_001_func_001(int flag)" rngLn="25">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="27" srcRngStartPos="0" srcRngEndLn="28" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="27" ElType="." desc="int ret;" rngLn="27">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="28" srcRngStartPos="0" srcRngEndLn="29" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="28" ElType="." desc="if (flag ==0)" rngLn="28">
                  <Props />
                  <Anns>
                    <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="31" ElType="!" desc="ret=flag++;" rngLn="31">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="32" ElType="!" desc="return ret;" rngLn="32">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="38" ElType="." desc="if (temp > 0)" rngLn="38">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (temp > 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="40" ElType="!" desc="temp = temp+50;" rngLn="40">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="44" ElType="!" desc="return temp;" rngLn="44">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="50" srcRngStartPos="0" srcRngEndLn="51" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="50" ElType=".P" desc="if (a &lt;= 100)" rngLn="50">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a > 0.0&quot; always evaluates to true" ln="72" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-856573500" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="72" locStartPos="0" locEndLn="73" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="68" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="69" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="68" srcRngStartPos="0" srcRngEndLn="69" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="68" ElType=".C" desc="void function_return_value_unchecked_002 ()" rngLn="68">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="70" ElType="." desc="float a=0.0;" rngLn="70">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="71" srcRngStartPos="0" srcRngEndLn="72" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="71" ElType="!" desc="a=function_return_value_unchecked_002_func_001(10); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="71">
          <ElDescList>
            <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="60" ElType="!" desc="float ret =1.0;" rngLn="60">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="61" ElType="." desc="while(flag>0)" rngLn="61">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="63" ElType="!" desc="ret++;" rngLn="63">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="64" ElType="." desc="flag--;" rngLn="64">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="61" ElType="." desc="while(flag>0)" rngLn="61">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="63" ElType="!" desc="ret++;" rngLn="63">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="64" srcRngStartPos="0" srcRngEndLn="65" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="64" ElType="." desc="flag--;" rngLn="64">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="61" ElType="." desc="while(flag>0)" rngLn="61">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (flag > 0) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="66" srcRngStartPos="0" srcRngEndLn="67" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="66" ElType="!" desc="return ret;" rngLn="66">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="72" srcRngStartPos="0" srcRngEndLn="73" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="72" ElType=".P" desc="if (a >0)" rngLn="72">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 0&quot; always evaluates to true" ln="90" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1569771550" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="90" locStartPos="0" locEndLn="91" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="85" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="86" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="85" ElType=".C" desc="void function_return_value_unchecked_003 ()" rngLn="85">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="87" ElType="!" desc="int a=1;" rngLn="87">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="88" ElType="." desc="char buf = function_return_value_unchecked_003_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="88">
          <ElDescList>
            <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="82" ElType="." desc="char str1 = 'a';" rngLn="82">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="83" ElType="." desc="return str1;" rngLn="83">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="89" ElType="!" desc="a--;" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="90" ElType=".P" desc="if (a==0)" rngLn="90">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(int)buf != 0&quot; always evaluates to true" ln="92" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1093345843" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="92" locStartPos="0" locEndLn="93" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="85" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="86" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="85" srcRngStartPos="0" srcRngEndLn="86" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="85" ElType=".C" desc="void function_return_value_unchecked_003 ()" rngLn="85">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="87" srcRngStartPos="0" srcRngEndLn="88" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="87" ElType="." desc="int a=1;" rngLn="87">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="88" srcRngStartPos="0" srcRngEndLn="89" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="88" ElType="!" desc="char buf = function_return_value_unchecked_003_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="88">
          <ElDescList>
            <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="82" ElType="!" desc="char str1 = 'a';" rngLn="82">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="83" srcRngStartPos="0" srcRngEndLn="84" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="83" ElType="!" desc="return str1;" rngLn="83">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="89" srcRngStartPos="0" srcRngEndLn="90" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="89" ElType="." desc="a--;" rngLn="89">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="90" srcRngStartPos="0" srcRngEndLn="91" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="90" ElType="." desc="if (a==0)" rngLn="90">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="92" ElType=".P" desc="if(buf != '\0')" rngLn="92">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;strcmp(...) == 0&quot; always evaluates to true" ln="124" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="102851141" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="124" locStartPos="0" locEndLn="125" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="115" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="116" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="115" ElType=".C" desc="void function_return_value_unchecked_004 ()" rngLn="115">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="117" ElType="." desc="function_return_value_unchecked_004_s_001 s;" rngLn="117">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="118" ElType="!" desc="s= function_return_value_unchecked_004_s_001_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="118">
          <ElDescList>
            <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="109" ElType="!" desc="function_return_value_unchecked_004_s_001 s1;" rngLn="109">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="110" ElType="." desc="strcpy(s1.a, &quot;STRING&quot;);" rngLn="110">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="111" srcRngStartPos="0" srcRngEndLn="112" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="111" ElType="." desc="s1.b = 20;" rngLn="111">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="112" ElType="!" desc="return s1;" rngLn="112">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="119" ElType="." desc="int flag = 1;" rngLn="119">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="120" ElType="." desc="switch (flag)" rngLn="120">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="124" ElType="!" desc="strcmp(...)" rngLn="124">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="124" srcRngStartPos="0" srcRngEndLn="125" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="124" ElType=".P" desc="if( (strcmp(s.a,&quot;STRING&quot;) ==0) )" rngLn="124">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="215" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1537006748" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="215" locStartPos="0" locEndLn="216" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="189" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="190" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="208" ElType="." desc="float (*ptr)[4];" rngLn="208">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="209" ElType="." desc="int i=10,j;" rngLn="209">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="210" ElType="." desc="while (i>0)" rngLn="210">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="212" ElType="!" desc="ptr = function_return_value_unchecked_006_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="212">
          <ElDescList>
            <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="185" ElType="." desc="float (*p)[4];" rngLn="185">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="186" ElType="." desc="int i,j;" rngLn="186">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="187" ElType="." desc="float arr[4][4];" rngLn="187">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="188" ElType="." desc="p= (float (*)[]) calloc (1,sizeof(arr));" rngLn="188">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="189" ElType=".C" desc="if(p!=NULL)" rngLn="189">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: p" kind="var" />
                <Ann msg="Condition evaluation: (p != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="193" ElType="." desc="if(p!=NULL)" rngLn="193">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (p != 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="203" ElType="!" desc="return p;" rngLn="203">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="213" ElType="." desc="for(j=0;j&lt;4;j++)" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; 4) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="215" ElType=".P" desc="if(*(ptr[j]) >0)" rngLn="215">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="215" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-921428132" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="215" locStartPos="0" locEndLn="216" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="188" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="189" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="208" ElType="." desc="float (*ptr)[4];" rngLn="208">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="209" ElType="." desc="int i=10,j;" rngLn="209">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="210" ElType="." desc="while (i>0)" rngLn="210">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > 0) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="212" ElType="!" desc="ptr = function_return_value_unchecked_006_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="212">
          <ElDescList>
            <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="185" ElType="." desc="float (*p)[4];" rngLn="185">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="186" ElType="." desc="int i,j;" rngLn="186">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="187" ElType="." desc="float arr[4][4];" rngLn="187">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="188" ElType=".C" desc="calloc(...)" rngLn="188">
              <Props>
                <Prop key="Tracked variables" val="calloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: calloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="188" ElType="!" desc="p= (float (*)[]) calloc (1,sizeof(arr));" rngLn="188">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="189" ElType="." desc="if(p!=NULL)" rngLn="189">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
                <Ann msg="Condition evaluation: (p != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="193" ElType="." desc="if(p!=NULL)" rngLn="193">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (p != 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="203" srcRngStartPos="0" srcRngEndLn="204" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="203" ElType="!" desc="return p;" rngLn="203">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="213" ElType="." desc="for(j=0;j&lt;4;j++)" rngLn="213">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Loop condition evaluation: (j &lt; 4) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="215" ElType=".P" desc="if(*(ptr[j]) >0)" rngLn="215">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 10.0&quot; always evaluates to false" ln="240" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-567691585" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="240" locStartPos="0" locEndLn="241" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="236" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="237" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="236" ElType=".C" desc="void function_return_value_unchecked_007 ()" rngLn="236">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="239" ElType="!" desc="float i=function_return_value_unchecked_007_func_001(); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="239">
          <ElDescList>
            <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="233" ElType="!" desc="float ret = 10.034;" rngLn="233">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="234" ElType="!" desc="return (ret);" rngLn="234">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="240" ElType=".P" desc="if (i&lt;10)" rngLn="240">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 10.0&quot; always evaluates to false" ln="258" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1499008069" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="258" locStartPos="0" locEndLn="259" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="255" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="256" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="255" ElType=".C" desc="void function_return_value_unchecked_008 ()" rngLn="255">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="257" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="257" ElType="!" desc="double i=function_return_value_unchecked_008_func_001(6); /*Tool should not detect this line as error*/ /*No ERROR:Return value of function never checked*/" rngLn="257">
          <ElDescList>
            <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="249" ElType="!" desc="double function_return_value_unchecked_008_func_001(int a)" rngLn="249">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="251" ElType="!" desc="double ret = 9.034;" rngLn="251">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="252" ElType="!" desc="ret += a;" rngLn="252">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="253" ElType="!" desc="return (ret);" rngLn="253">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="258" ElType=".P" desc="if (i&lt;10)" rngLn="258">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;a == 20&quot; always evaluates to false" ln="278" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-384507603" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="278" locStartPos="0" locEndLn="279" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="274" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="275" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="274" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="274">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="276" ElType="!" desc="int a=10,b=2,c=0;" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="277" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="278" ElType=".P" desc="if(a == 20)" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;b != 2&quot; always evaluates to false" ln="283" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="154213140" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="283" locStartPos="0" locEndLn="284" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="274" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="275" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="274" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="274">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="276" ElType="!" desc="int a=10,b=2,c=0;" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="277" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="278" ElType="." desc="if(a == 20)" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 20) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="283" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="283" ElType=".P" desc="else if (b != 2)" rngLn="283">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;c > 0&quot; always evaluates to false" ln="288" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-78177634" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="288" locStartPos="0" locEndLn="289" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="274" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="275" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="274" ElType=".C" desc="void function_return_value_unchecked_009 ()" rngLn="274">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="276" ElType="!" desc="int a=10,b=2,c=0;" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="277" ElType="." desc="double arr[] = {1.0,2.0,3.0,4.0};" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="278" ElType="." desc="if(a == 20)" rngLn="278">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (a == 20) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="283" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="283" ElType="." desc="else if (b != 2)" rngLn="283">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (b != 2) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="288" srcRngStartPos="0" srcRngEndLn="289" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="288" ElType=".P" desc="else if (c >0)" rngLn="288">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Do not use &quot;==&quot; or &quot;!=&quot; to test floating-point expression" ln="290" sev="3" auth="kali" rule="MISRA2004-13_3" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="290" locStartPos="10" locEndLn="290" locEndPos="11" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" />
    <FlowViol msg="Condition &quot;function_return_value_unchecked_013_func_001()&quot; always evaluates to true" ln="369" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1696988058" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="369" locStartPos="0" locEndLn="370" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" FirstElSrcRngStartln="367" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="368" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="367" srcRngStartPos="0" srcRngEndLn="368" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="367" ElType=".C" desc="void function_return_value_unchecked_013 ()" rngLn="367">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="369" ElType="!" desc="function_return_value_unchecked_013_func_001()" rngLn="369">
          <ElDescList>
            <ElDesc srcRngStartln="364" srcRngStartPos="0" srcRngEndLn="365" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="364" ElType="!" desc="return (1);" rngLn="364">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="369" srcRngStartPos="0" srcRngEndLn="370" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" srcRnghash="-249962785" ln="369" ElType=".P" desc="if(function_return_value_unchecked_013_func_001())" rngLn="369">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Do not use &quot;==&quot; or &quot;!=&quot; to test floating-point expression" ln="445" sev="3" auth="kali" rule="MISRA2004-13_3" tool="c++test" cat="MISRA2004" lang="cpp" locType="sr" config="1" hash="-249962785" locStartln="445" locStartPos="34" locEndLn="445" locEndPos="35" locFile="/ITC-Benchmarks/02.wo_Defects/function_return_value_unchecked.c" />
    <FlowViol msg="Condition &quot;condition == 0&quot; always evaluates to true" ln="23" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="40253053" lang="cpp" locType="sr" config="1" hash="-867177405" locStartln="23" locStartPos="0" locEndLn="24" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" FirstElSrcRngStartln="19" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="20" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="19" srcRngStartPos="0" srcRngEndLn="20" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="19" ElType=".C" desc="void improper_termination_of_block_001()" rngLn="19">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="21" srcRngStartPos="0" srcRngEndLn="22" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="21" ElType="!" desc="int condition=0,x=0,y=0;" rngLn="21">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="23" srcRngStartPos="0" srcRngEndLn="24" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="23" ElType=".P" desc="if (condition==0) /*Tool should not detect this line as error*/ /*No ERROR:Improper termination of block*/" rngLn="23">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;condition == 0&quot; always evaluates to true" ln="40" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="40253053" lang="cpp" locType="sr" config="1" hash="-867177405" locStartln="40" locStartPos="0" locEndLn="41" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" FirstElSrcRngStartln="36" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="37" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="36" ElType=".C" desc="void improper_termination_of_block_002()" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="38" ElType="!" desc="int condition=0,x=0,y=0;" rngLn="38">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="40" srcRngStartPos="0" srcRngEndLn="41" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/improper_termination_of_block.c" srcRnghash="-867177405" ln="40" ElType=".P" desc="if (condition==0) /*Tool should not detect this line as error*/ /*No ERROR:Improper termination of block*/" rngLn="40">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_extern_001_glb_006_str&quot; may possibly be null" ln="62" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1727892000" lang="cpp" locType="sr" config="1" hash="721056729" locStartln="62" locStartPos="0" locEndLn="63" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c" FirstElSrcRngStartln="61" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="62" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c" srcRnghash="721056729" ln="61" ElType=".C" desc="malloc(...)" rngLn="61">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="61" srcRngStartPos="0" srcRngEndLn="62" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c" srcRnghash="721056729" ln="61" ElType="!" desc="invalid_extern_001_glb_006_str = (invalid_extern_001_glb_006_s_001 *) malloc(1*sizeof(invalid_extern_001_glb_006_s_001));" rngLn="61">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_extern.c" srcRnghash="721056729" ln="62" ElType=".P" desc="invalid_extern_001_glb_006_str->csr = 10;" rngLn="62">
          <Props>
            <Prop key="Tracked variables" val="invalid_extern_001_glb_006_str" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_extern_001_glb_006_str" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="34" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-568853363" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="34" locStartPos="0" locEndLn="35" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="29" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="30" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="29" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="31" ElType="." desc="int *ptr, a;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="32" ElType="!" desc="int flag=10;" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="34" ElType=".P" desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( ptr= NULL);" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="38" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1758367336" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="38" locStartPos="0" locEndLn="39" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="29" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="30" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="29" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="31" ElType="." desc="int *ptr, a;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="32" ElType="!" desc="int flag=10;" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="34" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( ptr= NULL);" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="36" ElType="." desc="if(ptr!=NULL)" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="38" ElType=".P" desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="39" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1047622458" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="39" locStartPos="0" locEndLn="40" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="29" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="30" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="29" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="31" ElType="." desc="int *ptr, a;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="32" ElType="!" desc="int flag=10;" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="34" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( ptr= NULL);" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="36" ElType="." desc="if(ptr!=NULL)" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="38" ElType="." desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="39" ElType=".P" desc="if(flag == 10)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="44" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="642576614" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="44" locStartPos="0" locEndLn="45" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="29" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="30" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="29" srcRngStartPos="0" srcRngEndLn="30" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="29" ElType=".C" desc="void invalid_memory_access_001 ()" rngLn="29">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="31" srcRngStartPos="0" srcRngEndLn="32" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="31" ElType="." desc="int *ptr, a;" rngLn="31">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="32" srcRngStartPos="0" srcRngEndLn="33" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="32" ElType="!" desc="int flag=10;" rngLn="32">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="34" srcRngStartPos="0" srcRngEndLn="35" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="34" ElType="." desc="(flag == 10)? (ptr= (int*) malloc(10*sizeof(int))) : ( ptr= NULL);" rngLn="34">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="36" srcRngStartPos="0" srcRngEndLn="37" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="36" ElType="." desc="if(ptr!=NULL)" rngLn="36">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="38" srcRngStartPos="0" srcRngEndLn="39" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="38" ElType="." desc="(flag == 10)? (*(ptr+1) = 10):(a=100);" rngLn="38">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="39" srcRngStartPos="0" srcRngEndLn="40" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="39" ElType="." desc="if(flag == 10)" rngLn="39">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="41" srcRngStartPos="0" srcRngEndLn="42" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="41" ElType="." desc="a = *(ptr+1); /*Tool should not detect this line as error*/ /*No ERROR:Invalid memory access to already freed area*/" rngLn="41">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="42" srcRngStartPos="0" srcRngEndLn="43" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="42" ElType="." desc="printf(&quot;%d&quot;,a);" rngLn="42">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="44" ElType=".P" desc="if(flag == 10)" rngLn="44">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="70" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1764755415" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="70" locStartPos="0" locEndLn="71" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="60" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="61" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="60" ElType=".C" desc="double *ptr, *dptr = 0,a;" rngLn="60">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: dptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="62" ElType="." desc="if (staticflag == 10)" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="63" srcRngStartPos="0" srcRngEndLn="64" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="63" ElType="." desc="(ptr= (double*) malloc(10*sizeof(double)));" rngLn="63">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="67" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="67">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="70" ElType=".P" desc="(*(dptr+1) = 5.5) ;" rngLn="70">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="70" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="307723342" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="70" locStartPos="0" locEndLn="71" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="65" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="66" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="60" srcRngStartPos="0" srcRngEndLn="61" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="60" ElType="." desc="double *ptr, *dptr = 0,a;" rngLn="60">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="62" srcRngStartPos="0" srcRngEndLn="63" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="62" ElType="." desc="if (staticflag == 10)" rngLn="62">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="65" ElType=".C" desc="malloc(...)" rngLn="65">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="65" srcRngStartPos="0" srcRngEndLn="66" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="65" ElType="!" desc="(dptr = (double*) malloc(5*sizeof(double)));" rngLn="65">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="67" ElType="." desc="if (staticflag == 10 &amp;&amp; ptr!=NULL)" rngLn="67">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Condition evaluation: (staticflag == 10) (false)" kind="condEval" />
            <Ann msg="Condition evaluation: (staticflag == 10 &amp;&amp; ptr!=NULL) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="70" ElType=".P" desc="(*(dptr+1) = 5.5) ;" rngLn="70">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*pbuf[0], buf1&quot; may possibly be null" ln="183" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2112258755" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="183" locStartPos="0" locEndLn="184" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="170" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="171" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="170" ElType=".C" desc="calloc(...)" rngLn="170">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="170" ElType="!" desc="float *buf1=(float*)calloc(5,sizeof(float));" rngLn="170">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="171" srcRngStartPos="0" srcRngEndLn="172" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="171" ElType="." desc="float *buf2=(float*)calloc(5,sizeof(float));" rngLn="171">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="172" srcRngStartPos="0" srcRngEndLn="173" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="172" ElType="." desc="float *buf3=(float*)calloc(5,sizeof(float));" rngLn="172">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="173" ElType="." desc="float *buf4=(float*)calloc(5,sizeof(float));" rngLn="173">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="174" srcRngStartPos="0" srcRngEndLn="175" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="174" ElType="." desc="float *buf5=(float*)calloc(5,sizeof(float));" rngLn="174">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="175" srcRngStartPos="0" srcRngEndLn="176" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="175" ElType="!" desc="float **pbuf[5] = {&amp;buf1, &amp;buf2, &amp;buf3, &amp;buf4, &amp;buf5};" rngLn="175">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="176" ElType="." desc="int i,j=4;" rngLn="176">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="177" srcRngStartPos="0" srcRngEndLn="178" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="177" ElType="." desc="if(buf2 != NULL)" rngLn="177">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf2 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="181" srcRngStartPos="0" srcRngEndLn="182" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="181" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="181">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="183" ElType=".P" desc="*((*pbuf[i])+j)=5.0;" rngLn="183">
          <Props>
            <Prop key="Tracked variables" val="*pbuf[0], buf1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *pbuf[0], buf1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="209" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-54403334" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="209" locStartPos="0" locEndLn="210" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="205" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="206" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="205" ElType=".C" desc="malloc(...)" rngLn="205">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="205" srcRngStartPos="0" srcRngEndLn="206" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="205" ElType="!" desc="char **ptr = (char**) malloc(5*sizeof(char*));" rngLn="205">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="206" srcRngStartPos="0" srcRngEndLn="207" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="206" ElType="." desc="int i;" rngLn="206">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="208" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="208">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="209" ElType=".P" desc="ptr[i]=(char*) malloc(15*sizeof(char));" rngLn="209">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="275" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1621795174" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="275" locStartPos="0" locEndLn="276" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="271" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="272" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="265" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="266" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="266">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="268" ElType="." desc="if(u!=NULL)" rngLn="268">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="270" ElType="." desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="270">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="271" ElType=".C" desc="if(u->s1!=NULL)" rngLn="271">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: u->s1" kind="var" />
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="274" ElType="!" desc="p = u;" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="275" ElType=".P" desc="p->s1->a[0] = 1; /*Tool should not detect this line as error*/ /*No ERROR:Invalid memory access to already freed area*/" rngLn="275">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="275" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="96556326" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="275" locStartPos="0" locEndLn="276" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="270" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="271" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="265" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="266" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="266">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="268" ElType="." desc="if(u!=NULL)" rngLn="268">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="270" ElType=".C" desc="malloc(...)" rngLn="270">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="270" ElType="!" desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="270">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="271" ElType="." desc="if(u->s1!=NULL)" rngLn="271">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1" kind="var" />
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="274" ElType="!" desc="p = u;" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="275" ElType=".P" desc="p->s1->a[0] = 1; /*Tool should not detect this line as error*/ /*No ERROR:Invalid memory access to already freed area*/" rngLn="275">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1->a, u->s1->a&quot; may possibly be null" ln="275" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1104063712" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="275" locStartPos="0" locEndLn="276" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="272" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="273" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="265" ElType="." desc="invalid_memory_access_009_uni_001 *u = (invalid_memory_access_009_uni_001 * )malloc(5*sizeof( invalid_memory_access_009_uni_001 ));" rngLn="265">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="266" srcRngStartPos="0" srcRngEndLn="267" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="266" ElType="." desc="invalid_memory_access_009_uni_001 *p = NULL;" rngLn="266">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="268" ElType="." desc="if(u!=NULL)" rngLn="268">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="270" ElType="." desc="u->s1 = (invalid_memory_access_009_s_001 *) malloc(sizeof(invalid_memory_access_009_s_001));" rngLn="270">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="271" ElType="." desc="if(u->s1!=NULL)" rngLn="271">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u->s1 != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="272" ElType=".C" desc="malloc(...)" rngLn="272">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="272" ElType="!" desc="u->s1->a = (int *) malloc(5*sizeof(int));" rngLn="272">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="274" ElType="!" desc="p = u;" rngLn="274">
          <Props>
            <Prop key="Tracked variables" val="u->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1->a" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="275" ElType=".P" desc="p->s1->a[0] = 1; /*Tool should not detect this line as error*/ /*No ERROR:Invalid memory access to already freed area*/" rngLn="275">
          <Props>
            <Prop key="Tracked variables" val="p->s1->a, u->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1->a, u->s1->a" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr1&quot; may possibly be null" ln="300" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1483031903" lang="cpp" locType="sr" urgent="true" config="1" hash="1423726655" locStartln="300" locStartPos="0" locEndLn="301" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="289" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="290" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="295" srcRngStartPos="0" srcRngEndLn="296" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="295" ElType="." desc="int ptr[5] = {4,6,9,10,0};" rngLn="295">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="296" srcRngStartPos="0" srcRngEndLn="297" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="296" ElType="." desc="int *ptr1,i;" rngLn="296">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="298" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="297" ElType="!" desc="invalid_memory_access_func_010(5,&amp;ptr1);" rngLn="297">
          <ElDescList>
            <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="289" ElType=".C" desc="malloc(...)" rngLn="289">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="289" ElType="!" desc="int * p = malloc(sizeof(int) * len);" rngLn="289">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="290" srcRngStartPos="0" srcRngEndLn="291" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="290" ElType="!" desc="*Ptr = p;" rngLn="290">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="298" srcRngStartPos="0" srcRngEndLn="299" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="298" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="298">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="300" srcRngStartPos="0" srcRngEndLn="301" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="300" ElType=".P" desc="*(ptr1+i) = ptr[i]; /*Tool should not detect this line as error*/ /*No ERROR:Invalid memory access to already freed area*/" rngLn="300">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_016_func_001(...) == 0&quot; always evaluates to true" ln="561" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="718772420" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="561" locStartPos="0" locEndLn="562" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="558" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="559" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="558" srcRngStartPos="0" srcRngEndLn="559" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="558" ElType=".C" desc="void invalid_memory_access_016_func_002()" rngLn="558">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="560" ElType="." desc="int i;" rngLn="560">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType="!" desc="invalid_memory_access_016_func_001(...)" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="550" ElType="." desc="int ret;" rngLn="550">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="551" ElType="." desc="if (flag ==0)" rngLn="551">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="552" ElType="!" desc="ret = 0;" rngLn="552">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="555" ElType="!" desc="return ret;" rngLn="555">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType=".P" desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="561">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_016_doubleptr_gbl&quot; may possibly be null" ln="566" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1028638053" lang="cpp" locType="sr" urgent="true" config="1" hash="1423726655" locStartln="566" locStartPos="0" locEndLn="567" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="563" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="564" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="560" ElType="." desc="int i;" rngLn="560">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType="." desc="invalid_memory_access_016_func_001(...)" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="550" ElType="." desc="int ret;" rngLn="550">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="551" ElType="." desc="if (flag ==0)" rngLn="551">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="552" ElType="." desc="ret = 0;" rngLn="552">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="555" ElType="." desc="return ret;" rngLn="555">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType="." desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="561">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="563" srcRngStartPos="0" srcRngEndLn="564" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="563" ElType=".C" desc="malloc(...)" rngLn="563">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="563" srcRngStartPos="0" srcRngEndLn="564" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="563" ElType="!" desc="invalid_memory_access_016_doubleptr_gbl=(char**) malloc(10*sizeof(char*));" rngLn="563">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="564" srcRngStartPos="0" srcRngEndLn="565" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="564" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="564">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="566" ElType=".P" desc="invalid_memory_access_016_doubleptr_gbl[i]=(char*) malloc(10*sizeof(char));" rngLn="566">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;invalid_memory_access_016_doubleptr_gbl[0]&quot; may possibly be null" ln="567" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1810270520" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="567" locStartPos="0" locEndLn="568" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="566" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="567" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="560" srcRngStartPos="0" srcRngEndLn="561" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="560" ElType="." desc="int i;" rngLn="560">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType="." desc="invalid_memory_access_016_func_001(...)" rngLn="561">
          <ElDescList>
            <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="550" ElType="." desc="int ret;" rngLn="550">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="551" ElType="." desc="if (flag ==0)" rngLn="551">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="552" ElType="." desc="ret = 0;" rngLn="552">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="555" ElType="." desc="return ret;" rngLn="555">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="561" srcRngStartPos="0" srcRngEndLn="562" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="561" ElType="." desc="if(invalid_memory_access_016_func_001(0)==0)" rngLn="561">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="563" srcRngStartPos="0" srcRngEndLn="564" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="563" ElType="." desc="invalid_memory_access_016_doubleptr_gbl=(char**) malloc(10*sizeof(char*));" rngLn="563">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="564" srcRngStartPos="0" srcRngEndLn="565" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="564" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="564">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="566" ElType=".C" desc="malloc(...)" rngLn="566">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="566" ElType="!" desc="invalid_memory_access_016_doubleptr_gbl[i]=(char*) malloc(10*sizeof(char));" rngLn="566">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="567" srcRngStartPos="0" srcRngEndLn="568" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="567" ElType=".P" desc="strcpy(invalid_memory_access_016_doubleptr_gbl[i],&quot;STRING00&quot;);" rngLn="567">
          <Props>
            <Prop key="Tracked variables" val="invalid_memory_access_016_doubleptr_gbl[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: invalid_memory_access_016_doubleptr_gbl[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_016_func_001(...) == 0&quot; always evaluates to true" ln="583" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="283794833" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="583" locStartPos="0" locEndLn="584" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="580" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="581" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="580" ElType=".C" desc="void invalid_memory_access_016()" rngLn="580">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="582" srcRngStartPos="0" srcRngEndLn="583" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="582" ElType="." desc="int flag=0,i;" rngLn="582">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="583" srcRngStartPos="0" srcRngEndLn="584" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="583" ElType="!" desc="invalid_memory_access_016_func_001(...)" rngLn="583">
          <ElDescList>
            <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="550" ElType="." desc="int ret;" rngLn="550">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="551" srcRngStartPos="0" srcRngEndLn="552" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="551" ElType="." desc="if (flag ==0)" rngLn="551">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="552" ElType="!" desc="ret = 0;" rngLn="552">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="555" srcRngStartPos="0" srcRngEndLn="556" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="555" ElType="!" desc="return ret;" rngLn="555">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="583" srcRngStartPos="0" srcRngEndLn="584" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="583" ElType=".P" desc="if(invalid_memory_access_016_func_001(flag)==0)" rngLn="583">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_017_func_001(...) == 0&quot; always evaluates to false" ln="642" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-456257080" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="642" locStartPos="0" locEndLn="643" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="639" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="640" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="639" srcRngStartPos="0" srcRngEndLn="640" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="639" ElType=".C" desc="void invalid_memory_access_017()" rngLn="639">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="641" srcRngStartPos="0" srcRngEndLn="642" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="641" ElType="." desc="int flag=10;" rngLn="641">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="642" ElType="!" desc="invalid_memory_access_017_func_001(...)" rngLn="642">
          <ElDescList>
            <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="610" ElType="." desc="int ret;" rngLn="610">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="611" srcRngStartPos="0" srcRngEndLn="612" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="611" ElType="." desc="if (flag ==0)" rngLn="611">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="614" srcRngStartPos="0" srcRngEndLn="615" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="614" ElType="!" desc="ret=1;" rngLn="614">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="615" ElType="!" desc="return ret;" rngLn="615">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="642" ElType=".P" desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="642">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;invalid_memory_access_017_func_001(...) == 0&quot; always evaluates to false" ln="650" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-817422996" lang="cpp" locType="sr" config="1" hash="1423726655" locStartln="650" locStartPos="0" locEndLn="651" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" FirstElSrcRngStartln="639" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="640" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="639" srcRngStartPos="0" srcRngEndLn="640" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="639" ElType=".C" desc="void invalid_memory_access_017()" rngLn="639">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="641" srcRngStartPos="0" srcRngEndLn="642" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="641" ElType="." desc="int flag=10;" rngLn="641">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="642" ElType="." desc="invalid_memory_access_017_func_001(...)" rngLn="642">
          <ElDescList>
            <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="610" ElType="." desc="int ret;" rngLn="610">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="611" srcRngStartPos="0" srcRngEndLn="612" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="611" ElType="." desc="if (flag ==0)" rngLn="611">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="614" srcRngStartPos="0" srcRngEndLn="615" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="614" ElType="." desc="ret=1;" rngLn="614">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="615" ElType="." desc="return ret;" rngLn="615">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="642" srcRngStartPos="0" srcRngEndLn="643" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="642" ElType="." desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="642">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (invalid_memory_access_017_func_001(...) == 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="648" srcRngStartPos="0" srcRngEndLn="649" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="648" ElType="." desc="invalid_memory_access_017_func_002();" rngLn="648">
          <ElDescList>
            <ElDesc srcRngStartln="620" srcRngStartPos="0" srcRngEndLn="621" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="620" ElType="." desc="invalid_memory_access_017_doubleptr_gbl=(char*) malloc(10*sizeof(char));" rngLn="620">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="621" srcRngStartPos="0" srcRngEndLn="622" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="621" ElType="." desc="if(invalid_memory_access_017_doubleptr_gbl !=NULL)" rngLn="621">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (invalid_memory_access_017_doubleptr_gbl != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="650" srcRngStartPos="0" srcRngEndLn="651" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="650" ElType="!" desc="invalid_memory_access_017_func_001(...)" rngLn="650">
          <ElDescList>
            <ElDesc srcRngStartln="610" srcRngStartPos="0" srcRngEndLn="611" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="610" ElType="." desc="int ret;" rngLn="610">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="611" srcRngStartPos="0" srcRngEndLn="612" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="611" ElType="." desc="if (flag ==0)" rngLn="611">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="614" srcRngStartPos="0" srcRngEndLn="615" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="614" ElType="!" desc="ret=1;" rngLn="614">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="615" srcRngStartPos="0" srcRngEndLn="616" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="615" ElType="!" desc="return ret;" rngLn="615">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="650" srcRngStartPos="0" srcRngEndLn="651" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/invalid_memory_access.c" srcRnghash="1423726655" ln="650" ElType=".P" desc="if(invalid_memory_access_017_func_001(flag) == 0)" rngLn="650">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_004_glb_mutex_1" ln="222" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="1099271525" lang="cpp" locType="sr" config="1" hash="-1667574508" locStartln="222" locStartPos="0" locEndLn="223" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" FirstElSrcRngStartln="210" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="211" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="208" srcRngStartPos="0" srcRngEndLn="209" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="208" ElType="." desc="long ip;" rngLn="208">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="210" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_004_glb_mutex_1 );" rngLn="210">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="211" srcRngStartPos="0" srcRngEndLn="212" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="211" ElType="." desc="ip = (long)input;" rngLn="211">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="212" ElType="." desc="ip = ip *10;" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="217" ElType="." desc="if (ip >= 0)" rngLn="217">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="221" ElType="." desc="return NULL;" rngLn="221">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="222" ElType=".P" desc="}" rngLn="222">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Unreleased lock: lock_never_unlock_006_glb_mutex_1" ln="318" ruleSAFMsg="Point prior to which the lock is to be released" auth="kali" sev="1" rule="BD-TRS-LOCK" ruleSCSCMsg="Point where the lock is acquired" tool="c++test" id="-2062300519" lang="cpp" locType="sr" config="1" hash="-1667574508" locStartln="318" locStartPos="0" locEndLn="319" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" FirstElSrcRngStartln="307" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="308" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="305" srcRngStartPos="0" srcRngEndLn="306" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="305" ElType="." desc="long ip;" rngLn="305">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="307" srcRngStartPos="0" srcRngEndLn="308" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="307" ElType=".C" desc="pthread_mutex_lock( &amp;lock_never_unlock_006_glb_mutex_1 );" rngLn="307">
          <Props />
          <Anns>
            <Ann msg="Point where the lock is acquired" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="308" srcRngStartPos="0" srcRngEndLn="309" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="308" ElType="." desc="ip = (long)input;" rngLn="308">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="309" srcRngStartPos="0" srcRngEndLn="310" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="309" ElType="." desc="ip = ip *10;" rngLn="309">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="314" srcRngStartPos="0" srcRngEndLn="315" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="314" ElType="." desc="if (ip >= 0)" rngLn="314">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="317" srcRngStartPos="0" srcRngEndLn="318" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="317" ElType="." desc="return NULL;" rngLn="317">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="318" ElType=".P" desc="}" rngLn="318">
          <Props />
          <Anns>
            <Ann msg="Point prior to which the lock is to be released" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="344" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="-1667574508" locStartln="344" locStartPos="0" locEndLn="345" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" FirstElSrcRngStartln="337" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="338" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="337" ElType=".C" desc="void lock_never_unlock_006 ()" rngLn="337">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="339" ElType="!" desc="int thread_set = 0;" rngLn="339">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="341" srcRngStartPos="0" srcRngEndLn="342" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="341" ElType="." desc="pthread_t th1,th2;" rngLn="341">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="342" srcRngStartPos="0" srcRngEndLn="343" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="342" ElType="." desc="intptr_t t1 = 10;" rngLn="342">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="343" ElType="." desc="intptr_t t2 = 20;" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="344" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="496" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="-1667574508" locStartln="496" locStartPos="0" locEndLn="497" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" FirstElSrcRngStartln="489" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="490" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="489" srcRngStartPos="0" srcRngEndLn="490" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="489" ElType=".C" desc="void lock_never_unlock_008 ()" rngLn="489">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="491" ElType="!" desc="int thread_set = 0;" rngLn="491">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="493" srcRngStartPos="0" srcRngEndLn="494" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="493" ElType="." desc="pthread_t th1,th2;" rngLn="493">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="494" srcRngStartPos="0" srcRngEndLn="495" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="494" ElType="." desc="intptr_t t1 = 10;" rngLn="494">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="495" srcRngStartPos="0" srcRngEndLn="496" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="495" ElType="." desc="intptr_t t2 = 20;" rngLn="495">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="496" srcRngStartPos="0" srcRngEndLn="497" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="496" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="496">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i != 6&quot; always evaluates to true" ln="554" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1168889337" lang="cpp" locType="sr" config="1" hash="-1667574508" locStartln="554" locStartPos="0" locEndLn="555" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" FirstElSrcRngStartln="541" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="542" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="541" srcRngStartPos="0" srcRngEndLn="542" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="541" ElType=".C" desc="void * lock_never_unlock_009_tsk_002(void *input)" rngLn="541">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="544" srcRngStartPos="0" srcRngEndLn="545" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="544" ElType="." desc="long ip;" rngLn="544">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="545" srcRngStartPos="0" srcRngEndLn="546" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="545" ElType="!" desc="int i=5;" rngLn="545">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="546" srcRngStartPos="0" srcRngEndLn="547" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="546" ElType="." desc="ip = (long)input;" rngLn="546">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="547" srcRngStartPos="0" srcRngEndLn="548" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="547" ElType="." desc="ip = ip *20;" rngLn="547">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="550" srcRngStartPos="0" srcRngEndLn="551" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="550" ElType="." desc="if (ip >= 0)" rngLn="550">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="552" srcRngStartPos="0" srcRngEndLn="553" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="552" ElType="." desc="pthread_mutex_lock( &amp;lock_never_unlock_009_glb_mutex_2 );" rngLn="552">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="554" srcRngStartPos="0" srcRngEndLn="555" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/lock_never_unlock.c" srcRnghash="-1667574508" ln="554" ElType=".P" desc="if(i!=6)" rngLn="554">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 53 is out of acceptable range: 'lower than 30'" ln="17" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="-1803064676" locStartln="17" locStartPos="0" locEndLn="18" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/main.c" />
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="84" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-381699904" lang="cpp" locType="sr" urgent="true" config="1" hash="-2105221134" locStartln="84" locStartPos="0" locEndLn="85" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="74" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="75" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="74" ElType=".C" desc="malloc(...)" rngLn="74">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="74" ElType="!" desc="unsigned int **ptr = (unsigned int**) malloc(MAX*sizeof(unsigned int*));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="75" ElType="." desc="unsigned int i,j;" rngLn="75">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="76" ElType="." desc="if(ptr!=NULL)" rngLn="76">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="80" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="82" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="82">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="84" srcRngStartPos="0" srcRngEndLn="85" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="84" ElType=".P" desc="*(*(ptr+i)+j)=i;" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="84" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-491026400" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="84" locStartPos="0" locEndLn="85" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="76" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="77" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="74" ElType="." desc="unsigned int **ptr = (unsigned int**) malloc(MAX*sizeof(unsigned int*));" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="75" ElType="." desc="unsigned int i,j;" rngLn="75">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="76" ElType=".C" desc="if(ptr!=NULL)" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (ptr != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="80" srcRngStartPos="0" srcRngEndLn="81" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="80" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="80">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="82" srcRngStartPos="0" srcRngEndLn="83" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="82" ElType="." desc="for(j=0;j&lt;5;j++)" rngLn="82">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (j &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="84" srcRngStartPos="0" srcRngEndLn="85" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="84" ElType=".P" desc="*(*(ptr+i)+j)=i;" rngLn="84">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;ret >= 0&quot; always evaluates to true" ln="154" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1919231074" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="154" locStartPos="0" locEndLn="155" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="150" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="151" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="150" ElType=".C" desc="void memory_allocation_failure_005 ()" rngLn="150">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="152" srcRngStartPos="0" srcRngEndLn="153" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="152" ElType="." desc="int ret;" rngLn="152">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="153" srcRngStartPos="0" srcRngEndLn="154" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="153" ElType="!" desc="ret = memory_allocation_failure_005_func_001 (1);" rngLn="153">
          <ElDescList>
            <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="122" ElType="." desc="switch (flag)" rngLn="122">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="126" ElType="." desc="vptr = (int *)calloc(memory_allocation_failure_005_gbl*memory_allocation_failure_005_gbl, sizeof(int)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="126">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="127" ElType="." desc="if(vptr != NULL)" rngLn="127">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (vptr != 0) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="129" ElType="!" desc="return 1;" rngLn="129">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="154" srcRngStartPos="0" srcRngEndLn="155" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="154" ElType=".P" desc="if(ret >= 0)" rngLn="154">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_006_func_001(...) == 0&quot; always evaluates to true" ln="180" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1996163372" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="180" locStartPos="0" locEndLn="181" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="176" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="177" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="176" ElType=".C" desc="void memory_allocation_failure_006_func_002()" rngLn="176">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="178" ElType="." desc="int i;" rngLn="178">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType="!" desc="memory_allocation_failure_006_func_001(...)" rngLn="180">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="170" ElType="!" desc="ret = 0;" rngLn="170">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="173" ElType="!" desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType=".P" desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_006_gbl_doubleptr&quot; may possibly be null" ln="185" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-831870407" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="185" locStartPos="0" locEndLn="186" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="182" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="183" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="178" ElType="." desc="int i;" rngLn="178">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType="." desc="memory_allocation_failure_006_func_001(...)" rngLn="180">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="170" ElType="." desc="ret = 0;" rngLn="170">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="173" ElType="." desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType="." desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_allocation_failure_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="182" ElType=".C" desc="malloc(...)" rngLn="182">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="182" ElType="!" desc="memory_allocation_failure_006_gbl_doubleptr=(int**) malloc(10*sizeof(int*));" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="183" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="183">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="185" ElType=".P" desc="memory_allocation_failure_006_gbl_doubleptr[i]=(int*) malloc(MAX_10*sizeof(int)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="185">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_006_gbl_doubleptr[0]&quot; may possibly be null" ln="186" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1660382939" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="186" locStartPos="0" locEndLn="187" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="185" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="186" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="178" ElType="." desc="int i;" rngLn="178">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType="." desc="memory_allocation_failure_006_func_001(...)" rngLn="180">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="170" ElType="." desc="ret = 0;" rngLn="170">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="173" ElType="." desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="180" ElType="." desc="if(memory_allocation_failure_006_func_001(0)==0)" rngLn="180">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_allocation_failure_006_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="182" ElType="." desc="memory_allocation_failure_006_gbl_doubleptr=(int**) malloc(10*sizeof(int*));" rngLn="182">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="183" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="183">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="185" ElType=".C" desc="malloc(...)" rngLn="185">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="185" srcRngStartPos="0" srcRngEndLn="186" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="185" ElType="!" desc="memory_allocation_failure_006_gbl_doubleptr[i]=(int*) malloc(MAX_10*sizeof(int)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="185">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="186" ElType=".P" desc="memory_allocation_failure_006_gbl_doubleptr[i][0] =10;" rngLn="186">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_006_gbl_doubleptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_006_gbl_doubleptr[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_006_func_001(...) == 0&quot; always evaluates to true" ln="195" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1818939265" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="195" locStartPos="0" locEndLn="196" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="191" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="192" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="191" ElType=".C" desc="void memory_allocation_failure_006()" rngLn="191">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="193" ElType="." desc="int flag=0,i;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="195" ElType="!" desc="memory_allocation_failure_006_func_001(...)" rngLn="195">
          <ElDescList>
            <ElDesc srcRngStartln="168" srcRngStartPos="0" srcRngEndLn="169" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="168" ElType="." desc="int ret;" rngLn="168">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="169" srcRngStartPos="0" srcRngEndLn="170" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="169" ElType="." desc="if (flag ==0)" rngLn="169">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="170" srcRngStartPos="0" srcRngEndLn="171" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="170" ElType="!" desc="ret = 0;" rngLn="170">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="173" srcRngStartPos="0" srcRngEndLn="174" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="173" ElType="!" desc="return ret;" rngLn="173">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="195" ElType=".P" desc="if(memory_allocation_failure_006_func_001(flag)==0)" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i &lt; 20&quot; always evaluates to true" ln="265" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1775941932" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="265" locStartPos="0" locEndLn="266" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="261" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="262" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="261" ElType=".C" desc="char * memory_allocation_failure_008_func_001 (const char *msg) {" rngLn="261">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="262" ElType="." desc="const char *error_log = msg;" rngLn="262">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="263" ElType="." desc="char * buffer = 0;" rngLn="263">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="264" ElType="." desc="int i;" rngLn="264">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="265" ElType=".P" desc="for(i=0;i&lt;max_buffer;i++)" rngLn="265">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_allocation_failure_008_func_001(...)" ln="279" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-120756060" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="279" locStartPos="0" locEndLn="280" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="267" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="268" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="277" ElType="." desc="char *str = &quot;STRINGMEM&quot;;" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="278" ElType="!" desc="memory_allocation_failure_008_func_001(str);" rngLn="278">
          <ElDescList>
            <ElDesc srcRngStartln="262" srcRngStartPos="0" srcRngEndLn="263" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="262" ElType="." desc="const char *error_log = msg;" rngLn="262">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="263" srcRngStartPos="0" srcRngEndLn="264" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="263" ElType="." desc="char * buffer = 0;" rngLn="263">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="264" srcRngStartPos="0" srcRngEndLn="265" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="264" ElType="." desc="int i;" rngLn="264">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="265" srcRngStartPos="0" srcRngEndLn="266" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="265" ElType="." desc="for(i=0;i&lt;max_buffer;i++)" rngLn="265">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; 20) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="267" ElType=".C" desc="malloc(...)" rngLn="267">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Point where memory is allocated" kind="cause" />
                <Ann msg="Allocated memory: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="267" srcRngStartPos="0" srcRngEndLn="268" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="267" ElType="!" desc="buffer = (char*) malloc(max_buffer * sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="267">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="268" srcRngStartPos="0" srcRngEndLn="269" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="268" ElType="." desc="break;" rngLn="268">
              <Props>
                <Prop key="Tracked variables" val="buffer" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: buffer" kind="var" />
                <Ann msg="Exit the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="270" ElType="." desc="if(buffer!=NULL)" rngLn="270">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (buffer != 0) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="271" ElType="." desc="snprintf(buffer, max_buffer * sizeof(char), &quot;Error: %s&quot;, error_log);" rngLn="271">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="272" ElType="!" desc="return buffer;" rngLn="272">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="279" ElType=".P" desc="}" rngLn="279">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_008_func_001(...)" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_008_func_001(...)" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf" ln="292" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="939764063" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="292" locStartPos="0" locEndLn="293" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="292" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="293" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="289" ElType="." desc="int i=0;" rngLn="289">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="292" ElType=".C" desc="malloc(...)" rngLn="292">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="292" ElType="!" desc="buf = (char*) malloc(MAX_BUFFER * sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="293" srcRngStartPos="0" srcRngEndLn="294" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="293" ElType="." desc="i++;" rngLn="293">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="294" srcRngStartPos="0" srcRngEndLn="295" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="294" ElType="." desc="}while (i&lt;MAX_VAL);" rngLn="294">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="292" ElType=".P" desc="buf = (char*) malloc(MAX_BUFFER * sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="292">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: memory_allocation_failure_010_arr_gbl" ln="331" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1355792444" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="331" locStartPos="0" locEndLn="332" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="331" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="332" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="326" srcRngStartPos="0" srcRngEndLn="327" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="326" ElType="." desc="int i=0;" rngLn="326">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="327" srcRngStartPos="0" srcRngEndLn="328" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="327" ElType="." desc="if (devno &lt;= NDEVS)" rngLn="327">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (devno &lt;= 4) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType=".C" desc="malloc(...)" rngLn="331">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType="!" desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="332" ElType="." desc="i++;" rngLn="332">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_010_arr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_010_arr_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="333" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="333">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt;= 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType=".P" desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_010_arr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: memory_allocation_failure_010_arr_gbl" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_010_arr_gbl->csr &amp; ERR&quot; always evaluates to false" ln="344" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1415068643" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="344" locStartPos="0" locEndLn="345" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="337" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="338" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="337" ElType=".C" desc="void memory_allocation_failure_010_func_002(int devno)" rngLn="337">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="339" ElType="." desc="memory_allocation_failure_010_func_001(1);" rngLn="339">
          <ElDescList>
            <ElDesc srcRngStartln="326" srcRngStartPos="0" srcRngEndLn="327" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="326" ElType="." desc="int i=0;" rngLn="326">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="327" srcRngStartPos="0" srcRngEndLn="328" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="327" ElType="." desc="if (devno &lt;= NDEVS)" rngLn="327">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (devno &lt;= 4) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType="." desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="332" ElType="." desc="i++;" rngLn="332">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="333" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="333">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt;= 10) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType="." desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="332" ElType="." desc="i++;" rngLn="332">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="333" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="333">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt;= 10) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="340" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="340" ElType="!" desc="memory_allocation_failure_010_arr_gbl->csr = READY;" rngLn="340">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="343" ElType="." desc="memory_allocation_failure_010_arr_gbl->data = READY;" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="344" ElType=".P" desc="if(memory_allocation_failure_010_arr_gbl->csr &amp; ERROR)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_010_arr_gbl->csr &amp; 3 == 0&quot; always evaluates to false" ln="348" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="900387732" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="348" locStartPos="0" locEndLn="349" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="337" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="338" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="337" srcRngStartPos="0" srcRngEndLn="338" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="337" ElType=".C" desc="void memory_allocation_failure_010_func_002(int devno)" rngLn="337">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="339" ElType="." desc="memory_allocation_failure_010_func_001(1);" rngLn="339">
          <ElDescList>
            <ElDesc srcRngStartln="326" srcRngStartPos="0" srcRngEndLn="327" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="326" ElType="." desc="int i=0;" rngLn="326">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="327" srcRngStartPos="0" srcRngEndLn="328" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="327" ElType="." desc="if (devno &lt;= NDEVS)" rngLn="327">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (devno &lt;= 4) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType="." desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="332" ElType="." desc="i++;" rngLn="332">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="333" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="333">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt;= 10) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="331" srcRngStartPos="0" srcRngEndLn="332" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="331" ElType="." desc="memory_allocation_failure_010_arr_gbl = (memory_allocation_failure_010_s_001 *) malloc (10*sizeof(memory_allocation_failure_010_s_001)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="331">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="332" srcRngStartPos="0" srcRngEndLn="333" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="332" ElType="." desc="i++;" rngLn="332">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="333" ElType="." desc="}while( i&lt;=MAX_VAL);" rngLn="333">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt;= 10) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="340" srcRngStartPos="0" srcRngEndLn="341" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="340" ElType="!" desc="memory_allocation_failure_010_arr_gbl->csr = READY;" rngLn="340">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="343" srcRngStartPos="0" srcRngEndLn="344" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="343" ElType="." desc="memory_allocation_failure_010_arr_gbl->data = READY;" rngLn="343">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="344" srcRngStartPos="0" srcRngEndLn="345" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="344" ElType="." desc="if(memory_allocation_failure_010_arr_gbl->csr &amp; ERROR)" rngLn="344">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (memory_allocation_failure_010_arr_gbl->csr &amp; 1 != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="348" srcRngStartPos="0" srcRngEndLn="349" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="348" ElType=".P" desc="}while( (memory_allocation_failure_010_arr_gbl->csr &amp; (READY | ERROR)) == 0);" rngLn="348">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1&quot; may possibly be null" ln="395" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="853201561" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="395" locStartPos="0" locEndLn="396" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="394" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="395" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="384" ElType="." desc="int ret =0;" rngLn="384">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="385" ElType="." desc="if (flag ==0)" rngLn="385">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="388" ElType="." desc="ret=5;" rngLn="388">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="389" ElType="." desc="return ret;" rngLn="389">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType=".C" desc="malloc(...)" rngLn="394">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="!" desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(1)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="394">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="395" ElType=".P" desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="395">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1->s1&quot; may possibly be null" ln="396" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-701561230" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="396" locStartPos="0" locEndLn="397" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="395" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="396" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="384" ElType="." desc="int ret =0;" rngLn="384">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="385" ElType="." desc="if (flag ==0)" rngLn="385">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="388" ElType="." desc="ret=5;" rngLn="388">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="389" ElType="." desc="return ret;" rngLn="389">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="." desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(1)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="394">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="395" ElType=".C" desc="malloc(...)" rngLn="395">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="395" ElType="!" desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="395">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="396" ElType=".P" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="396">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1&quot; is checked for null after being dereferenced" ln="403" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-179562349" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="403" locStartPos="0" locEndLn="404" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="396" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="397" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="401" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="401">
          <ElDescList>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="396" ElType=".C" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="396">
              <Props>
                <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1 != null" />
              </Props>
              <Anns>
                <Ann msg="Point of dereferencing" kind="cause" />
                <Ann msg="Important values: memory_allocation_failure_011_gbl_u1 != null" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="403" ElType=".P" desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="403">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1 != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: memory_allocation_failure_011_gbl_u1 != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_allocation_failure_011_gbl_u1 != 0&quot; always evaluates to true" ln="403" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="92371519" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="403" locStartPos="0" locEndLn="404" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="398" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="399" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="398" ElType=".C" desc="void memory_allocation_failure_011 ()" rngLn="398">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="400" ElType="." desc="memory_allocation_failure_011_uni_001 *p =NULL;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="401" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="401">
          <ElDescList>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="!" desc="memory_allocation_failure_011_func_001(...)" rngLn="394">
              <ElDescList>
                <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="384" ElType="." desc="int ret =0;" rngLn="384">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="385" ElType="." desc="if (flag ==0)" rngLn="385">
                  <Props />
                  <Anns>
                    <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="388" ElType="!" desc="ret=5;" rngLn="388">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="389" ElType="!" desc="return ret;" rngLn="389">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="!" desc="malloc(...)" rngLn="394">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="!" desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(1)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="394">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="395" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="395">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="396" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="396">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="403" ElType=".P" desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="403">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a&quot; may possibly be null" ln="406" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-309338959" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="406" locStartPos="0" locEndLn="407" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="396" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="397" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="400" ElType="." desc="memory_allocation_failure_011_uni_001 *p =NULL;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="401" ElType="!" desc="memory_allocation_failure_011_func_002();" rngLn="401">
          <ElDescList>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="." desc="memory_allocation_failure_011_func_001(...)" rngLn="394">
              <ElDescList>
                <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="384" ElType="." desc="int ret =0;" rngLn="384">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="385" ElType="." desc="if (flag ==0)" rngLn="385">
                  <Props />
                  <Anns>
                    <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
                  </Anns>
                </ElDesc>
                <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="388" ElType="." desc="ret=5;" rngLn="388">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="389" srcRngStartPos="0" srcRngEndLn="390" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="389" ElType="." desc="return ret;" rngLn="389">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="394" ElType="." desc="memory_allocation_failure_011_gbl_u1 = (memory_allocation_failure_011_uni_001 * )malloc(memory_allocation_failure_011_func_001(1)*sizeof( memory_allocation_failure_011_uni_001 )); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="394">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="395" ElType="." desc="memory_allocation_failure_011_gbl_u1->s1 = (memory_allocation_failure_011_s_001 *) malloc(sizeof(memory_allocation_failure_011_s_001));" rngLn="395">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="396" ElType=".C" desc="calloc(...)" rngLn="396">
              <Props>
                <Prop key="Tracked variables" val="calloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: calloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="396" ElType="!" desc="memory_allocation_failure_011_gbl_u1->s1->a = (int *) calloc ( 5,sizeof(int));" rngLn="396">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="403" ElType="." desc="if( memory_allocation_failure_011_gbl_u1 != NULL)" rngLn="403">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1->a" kind="var" />
            <Ann msg="Condition evaluation: (memory_allocation_failure_011_gbl_u1 != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="405" ElType="!" desc="p = memory_allocation_failure_011_gbl_u1;" rngLn="405">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="406" srcRngStartPos="0" srcRngEndLn="407" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="406" ElType=".P" desc="p->s1->a[1] = 10;" rngLn="406">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_011_gbl_u1->s1->a, p->s1->a" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;pbuf[1]&quot; may possibly be null" ln="442" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-756199138" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="442" locStartPos="0" locEndLn="443" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="432" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="433" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="431" ElType="." desc="int buf1[5] = {1,2,3,4,5};" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="432" ElType="." desc="memory_allocation_failure_012_func_001(...)" rngLn="432">
          <ElDescList>
            <ElDesc srcRngStartln="421" srcRngStartPos="0" srcRngEndLn="422" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="421" ElType="." desc="int ret =0;" rngLn="421">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="422" ElType="." desc="if (flag ==0)" rngLn="422">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="425" srcRngStartPos="0" srcRngEndLn="426" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="425" ElType="." desc="ret=5;" rngLn="425">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="426" srcRngStartPos="0" srcRngEndLn="427" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="426" ElType="." desc="return ret;" rngLn="426">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="432" ElType=".C" desc="calloc(...)" rngLn="432">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="432" ElType="!" desc="memory_allocation_failure_012_buf2_gbl = (int *) calloc (memory_allocation_failure_012_func_001(1),sizeof(int)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="433" ElType="." desc="int buf3[5] = {1,2,3,4,5};" rngLn="433">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_012_buf2_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_012_buf2_gbl" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="434" ElType="." desc="int buf4[5] = {1,2,3,4,5};" rngLn="434">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="435" srcRngStartPos="0" srcRngEndLn="436" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="435" ElType="." desc="int buf5[5] = {1,2,3,4,5};" rngLn="435">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="436" srcRngStartPos="0" srcRngEndLn="437" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="436" ElType="." desc="pbuf[0] = buf1;" rngLn="436">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="437" srcRngStartPos="0" srcRngEndLn="438" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="437" ElType="!" desc="pbuf[1] = memory_allocation_failure_012_buf2_gbl;" rngLn="437">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="438" srcRngStartPos="0" srcRngEndLn="439" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="438" ElType="." desc="pbuf[2] = buf3;" rngLn="438">
          <Props>
            <Prop key="Tracked variables" val="pbuf[1]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: pbuf[1]" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="439" srcRngStartPos="0" srcRngEndLn="440" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="439" ElType="." desc="pbuf[3] = buf4;" rngLn="439">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="440" srcRngStartPos="0" srcRngEndLn="441" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="440" ElType="." desc="pbuf[4] = buf5;" rngLn="440">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="441" ElType="." desc="int ret;" rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="442" srcRngStartPos="0" srcRngEndLn="443" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="442" ElType=".P" desc="ret = pbuf[1][1];" rngLn="442">
          <Props>
            <Prop key="Tracked variables" val="pbuf[1]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: pbuf[1]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="451" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1051397881" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="451" locStartPos="0" locEndLn="452" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="446" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="447" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="446" srcRngStartPos="0" srcRngEndLn="447" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="446" ElType=".C" desc="void memory_allocation_failure_012 ()" rngLn="446">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="448" srcRngStartPos="0" srcRngEndLn="449" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="448" ElType="." desc="int *ptr[5], a;" rngLn="448">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="449" ElType="!" desc="int flag=10;" rngLn="449">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="451" srcRngStartPos="0" srcRngEndLn="452" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="451" ElType=".P" desc="(flag == 10)? (memory_allocation_failure_012_func_002(ptr)) : ( a =20);" rngLn="451">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dptr&quot; may possibly be null" ln="582" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1478189535" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="582" locStartPos="0" locEndLn="583" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="577" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="578" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="566" ElType="." desc="int (*ptr1)[4];" rngLn="566">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="567" srcRngStartPos="0" srcRngEndLn="568" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="567" ElType="." desc="char **dptr,a = 0;" rngLn="567">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="568" srcRngStartPos="0" srcRngEndLn="569" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="568" ElType="." desc="double *ptr,b;" rngLn="568">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="569" srcRngStartPos="0" srcRngEndLn="570" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="569" ElType="." desc="int i,j;" rngLn="569">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="571" srcRngStartPos="0" srcRngEndLn="572" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="571" ElType="." desc="if (staticflag == 10)" rngLn="571">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="577" srcRngStartPos="0" srcRngEndLn="578" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="577" ElType=".C" desc="malloc(...)" rngLn="577">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="577" srcRngStartPos="0" srcRngEndLn="578" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="577" ElType="!" desc="dptr=(char**) malloc(10*sizeof(char*));" rngLn="577">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="578" srcRngStartPos="0" srcRngEndLn="579" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="578" ElType="." desc="if(1)" rngLn="578">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Condition evaluation: 1 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="580" srcRngStartPos="0" srcRngEndLn="581" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="580" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="580">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="582" srcRngStartPos="0" srcRngEndLn="583" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="582" ElType=".P" desc="dptr[i]=(char*) malloc(10*sizeof(char));" rngLn="582">
          <Props>
            <Prop key="Tracked variables" val="dptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: dptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="590" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="980691672" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="590" locStartPos="0" locEndLn="591" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="573" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="574" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="566" srcRngStartPos="0" srcRngEndLn="567" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="566" ElType="." desc="int (*ptr1)[4];" rngLn="566">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="567" srcRngStartPos="0" srcRngEndLn="568" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="567" ElType="." desc="char **dptr,a = 0;" rngLn="567">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="568" srcRngStartPos="0" srcRngEndLn="569" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="568" ElType="." desc="double *ptr,b;" rngLn="568">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="569" srcRngStartPos="0" srcRngEndLn="570" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="569" ElType="." desc="int i,j;" rngLn="569">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="571" srcRngStartPos="0" srcRngEndLn="572" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="571" ElType="." desc="if (staticflag == 10)" rngLn="571">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (staticflag == 10) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="573" ElType=".C" desc="malloc(...)" rngLn="573">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="573" srcRngStartPos="0" srcRngEndLn="574" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="573" ElType="!" desc="ptr= (double*) malloc(10*sizeof(double));" rngLn="573">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="589" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="588" ElType="." desc="if (staticflag == 10)" rngLn="588">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Condition evaluation: (staticflag == 10) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="590" srcRngStartPos="0" srcRngEndLn="591" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="590" ElType=".P" desc="(*(ptr+1) = 10.5);" rngLn="590">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="671" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="671" locStartPos="0" locEndLn="672" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="662" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="663" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="662" srcRngStartPos="0" srcRngEndLn="663" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="662" ElType=".C" desc="int memory_allocation_failure_015_func_003 (int flag)" rngLn="662">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="664" srcRngStartPos="0" srcRngEndLn="665" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="664" ElType="." desc="int ret = 0;" rngLn="664">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="665" ElType="!" desc="if (flag == 1)" rngLn="665">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="667" ElType="." desc="goto my_label;" rngLn="667">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="670" ElType="." desc="my_label:" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="671" ElType=".P" desc="if (flag == 1)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_allocation_failure_015_gbl_ptr&quot; may possibly be null" ln="675" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2059723519" lang="cpp" locType="sr" config="1" hash="-2105221134" locStartln="675" locStartPos="0" locEndLn="676" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="659" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="660" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="664" srcRngStartPos="0" srcRngEndLn="665" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="664" ElType="." desc="int ret = 0;" rngLn="664">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="665" srcRngStartPos="0" srcRngEndLn="666" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="665" ElType="." desc="if (flag == 1)" rngLn="665">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="667" srcRngStartPos="0" srcRngEndLn="668" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="667" ElType="." desc="goto my_label;" rngLn="667">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="670" srcRngStartPos="0" srcRngEndLn="671" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="670" ElType="." desc="my_label:" rngLn="670">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="671" srcRngStartPos="0" srcRngEndLn="672" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="671" ElType="." desc="if (flag == 1)" rngLn="671">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="673" srcRngStartPos="0" srcRngEndLn="674" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="673" ElType="!" desc="memory_allocation_failure_015_func_002();" rngLn="673">
          <ElDescList>
            <ElDesc srcRngStartln="659" srcRngStartPos="0" srcRngEndLn="660" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="659" ElType="." desc="memory_allocation_failure_015_func_001()" rngLn="659">
              <ElDescList>
                <ElDesc srcRngStartln="653" srcRngStartPos="0" srcRngEndLn="654" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="653" ElType="." desc="memory_allocation_failure_015_s_001 s = {MAX_V,20};" rngLn="653">
                  <Props />
                </ElDesc>
                <ElDesc srcRngStartln="654" srcRngStartPos="0" srcRngEndLn="655" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="654" ElType="." desc="return s.b;" rngLn="654">
                  <Props />
                </ElDesc>
              </ElDescList>
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="659" srcRngStartPos="0" srcRngEndLn="660" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="659" ElType=".C" desc="malloc(...)" rngLn="659">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="659" srcRngStartPos="0" srcRngEndLn="660" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="659" ElType="!" desc="memory_allocation_failure_015_gbl_ptr = (int *) malloc (memory_allocation_failure_015_func_001()*sizeof(int));/*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */" rngLn="659">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="675" srcRngStartPos="0" srcRngEndLn="676" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="675" ElType=".P" desc="*(memory_allocation_failure_015_gbl_ptr+1) = 7;" rngLn="675">
          <Props>
            <Prop key="Tracked variables" val="memory_allocation_failure_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_allocation_failure_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr1&quot; may possibly be null" ln="724" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="63903087" lang="cpp" locType="sr" urgent="true" config="1" hash="-2105221134" locStartln="724" locStartPos="0" locEndLn="725" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" FirstElSrcRngStartln="722" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="723" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="722" ElType="." desc="memory_allocation_failure_016_func_001(...)" rngLn="722">
          <ElDescList>
            <ElDesc srcRngStartln="697" srcRngStartPos="0" srcRngEndLn="698" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="697" ElType="." desc="int ret =0;" rngLn="697">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="698" srcRngStartPos="0" srcRngEndLn="699" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="698" ElType="." desc="if (flag ==0)" rngLn="698">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="699" srcRngStartPos="0" srcRngEndLn="700" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="699" ElType="." desc="ret = MAX_VAL_4;" rngLn="699">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="702" srcRngStartPos="0" srcRngEndLn="703" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="702" ElType="." desc="return ret;" rngLn="702">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="722" ElType=".C" desc="malloc(...)" rngLn="722">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="722" srcRngStartPos="0" srcRngEndLn="723" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="722" ElType="!" desc="int * ptr1 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="722">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="723" srcRngStartPos="0" srcRngEndLn="724" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="723" ElType="." desc="memory_allocation_failure_016_func_001(...)" rngLn="723">
          <ElDescList>
            <ElDesc srcRngStartln="697" srcRngStartPos="0" srcRngEndLn="698" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="697" ElType="." desc="int ret =0;" rngLn="697">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="698" srcRngStartPos="0" srcRngEndLn="699" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="698" ElType="." desc="if (flag ==0)" rngLn="698">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="699" srcRngStartPos="0" srcRngEndLn="700" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="699" ElType="." desc="ret = MAX_VAL_4;" rngLn="699">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="702" srcRngStartPos="0" srcRngEndLn="703" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="702" ElType="." desc="return ret;" rngLn="702">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="723" srcRngStartPos="0" srcRngEndLn="724" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="723" ElType="." desc="int * ptr2 = (int *) malloc (memory_allocation_failure_016_func_001(0)*sizeof(int));" rngLn="723">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="724" srcRngStartPos="0" srcRngEndLn="725" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_allocation_failure.c" srcRnghash="-2105221134" ln="724" ElType=".P" desc="*(ptr1+1) = 10;" rngLn="724">
          <Props>
            <Prop key="Tracked variables" val="ptr1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="48" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1517952848" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="48" locStartPos="0" locEndLn="49" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="44" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="45" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="44" ElType=".C" desc="malloc(...)" rngLn="44">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="44" srcRngStartPos="0" srcRngEndLn="45" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="44" ElType="!" desc="int **ptr = (int**) malloc(5*sizeof(int*));" rngLn="44">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="45" srcRngStartPos="0" srcRngEndLn="46" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="45" ElType="." desc="int i,j;" rngLn="45">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="47" srcRngStartPos="0" srcRngEndLn="48" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="47" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="47">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="48" srcRngStartPos="0" srcRngEndLn="49" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="48" ElType=".P" desc="ptr[i]=(int*) malloc(5*sizeof(int)); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="48">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;str1&quot; may possibly be null" ln="76" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1708259062" lang="cpp" locType="sr" urgent="true" config="1" hash="-1228130474" locStartln="76" locStartPos="0" locEndLn="77" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="67" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="68" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="73" srcRngStartPos="0" srcRngEndLn="74" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="73" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="73">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="74" srcRngStartPos="0" srcRngEndLn="75" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="74" ElType="." desc="char *str1;" rngLn="74">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="75" ElType="!" desc="memory_leak_003_func_001(strlen(str),&amp;str1); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="75">
          <ElDescList>
            <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="67" ElType=".C" desc="malloc(...)" rngLn="67">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="67" ElType="!" desc="char * p = malloc(sizeof(char) * (len+1));" rngLn="67">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="68" srcRngStartPos="0" srcRngEndLn="69" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="68" ElType="!" desc="*stringPtr = p;" rngLn="68">
              <Props>
                <Prop key="Tracked variables" val="p" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: p" kind="var" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="76" ElType=".P" desc="strcpy(str1,str);" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="100" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1603166056" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="100" locStartPos="0" locEndLn="101" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="95" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="96" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="92" ElType="." desc="memory_leak_004_s_001* s=(memory_leak_004_s_001*) calloc(5,sizeof(memory_leak_004_s_001)) ;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="93" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="93">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="94" ElType="." desc="int i;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="95" ElType=".C" desc="if(s!=NULL)" rngLn="95">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="100" ElType=".P" desc="strcpy((s+4)->buf,s1);" rngLn="100">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; may possibly be null" ln="100" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1664599684" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="100" locStartPos="0" locEndLn="101" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="92" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="93" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="92" ElType=".C" desc="calloc(...)" rngLn="92">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="92" srcRngStartPos="0" srcRngEndLn="93" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="92" ElType="!" desc="memory_leak_004_s_001* s=(memory_leak_004_s_001*) calloc(5,sizeof(memory_leak_004_s_001)) ;" rngLn="92">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="93" srcRngStartPos="0" srcRngEndLn="94" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="93" ElType="." desc="char *s1=&quot;This is a string&quot;;" rngLn="93">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="94" srcRngStartPos="0" srcRngEndLn="95" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="94" ElType="." desc="int i;" rngLn="94">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="95" srcRngStartPos="0" srcRngEndLn="96" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="95" ElType="." desc="if(s!=NULL)" rngLn="95">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (s != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="100" ElType=".P" desc="strcpy((s+4)->buf,s1);" rngLn="100">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 0&quot; always evaluates to true" ln="115" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-501753840" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="115" locStartPos="0" locEndLn="116" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="110" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="111" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="110" srcRngStartPos="0" srcRngEndLn="111" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="110" ElType=".C" desc="void memory_leak_005()" rngLn="110">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="112" srcRngStartPos="0" srcRngEndLn="113" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="112" ElType="." desc="float *ptr;" rngLn="112">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="113" srcRngStartPos="0" srcRngEndLn="114" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="113" ElType="!" desc="int flag=10;" rngLn="113">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="115" ElType=".P" desc="if(flag > 0)" rngLn="115">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_leak_006_func_001(...) == 0&quot; always evaluates to true" ln="145" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-46611350" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="145" locStartPos="0" locEndLn="146" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="140" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="141" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="140" srcRngStartPos="0" srcRngEndLn="141" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="140" ElType=".C" desc="void memory_leak_006()" rngLn="140">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="142" srcRngStartPos="0" srcRngEndLn="143" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="142" ElType="." desc="double *dptr;" rngLn="142">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="143" ElType="." desc="int flag=0;" rngLn="143">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="145" ElType="!" desc="memory_leak_006_func_001(...)" rngLn="145">
          <ElDescList>
            <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="132" ElType="." desc="int ret;" rngLn="132">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="133" ElType="." desc="if (flag ==0)" rngLn="133">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="134" srcRngStartPos="0" srcRngEndLn="135" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="134" ElType="!" desc="ret = 0;" rngLn="134">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="137" srcRngStartPos="0" srcRngEndLn="138" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="137" ElType="!" desc="return ret;" rngLn="137">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="145" ElType=".P" desc="if(memory_leak_006_func_001(flag)==0)" rngLn="145">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;buf&quot; is checked for null after being dereferenced" ln="280" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-474041485" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="280" locStartPos="0" locEndLn="281" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="277" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="278" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="277" ElType=".C" desc="strcpy(buf, &quot;This Is A String&quot;);" rngLn="277">
          <Props>
            <Prop key="Tracked variables" val="buf" />
          </Props>
          <Anns>
            <Ann msg="Point of dereferencing" kind="cause" />
            <Ann msg="Important values: buf" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="278" ElType="!" desc="un.u1 = buf;" rngLn="278">
          <Props>
            <Prop key="Tracked variables" val="buf != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: buf != null" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="279" ElType="!" desc="char * buf = un.u1;" rngLn="279">
          <Props>
            <Prop key="Tracked variables" val="un.u1 != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: un.u1 != null" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="280" ElType=".P" desc="if (buf)" rngLn="280">
          <Props>
            <Prop key="Tracked variables" val="buf != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: buf != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;buf&quot; always evaluates to true" ln="280" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2076340384" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="280" locStartPos="0" locEndLn="281" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="270" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="271" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="270" srcRngStartPos="0" srcRngEndLn="271" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="270" ElType=".C" desc="void memory_leak_0011()" rngLn="270">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="272" ElType="." desc="char * buf = NULL;" rngLn="272">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="273" ElType="." desc="memory_leak_0011_uni_001 un;" rngLn="273">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="274" srcRngStartPos="0" srcRngEndLn="275" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="274" ElType="." desc="buf = (char *)calloc(50, sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="274">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="275" srcRngStartPos="0" srcRngEndLn="276" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="275" ElType="." desc="if(buf!=NULL)" rngLn="275">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (buf != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="277" ElType="." desc="strcpy(buf, &quot;This Is A String&quot;);" rngLn="277">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="278" srcRngStartPos="0" srcRngEndLn="279" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="278" ElType="." desc="un.u1 = buf;" rngLn="278">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="279" ElType="!" desc="char * buf = un.u1;" rngLn="279">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="280" ElType=".P" desc="if (buf)" rngLn="280">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p->s1, u->s1&quot; may possibly be null" ln="360" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1666766435" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="360" locStartPos="0" locEndLn="361" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="353" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="354" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="350" srcRngStartPos="0" srcRngEndLn="351" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="350" ElType="." desc="memory_leak_0013_uni_001 *u = (memory_leak_0013_uni_001 * )malloc(5*sizeof( memory_leak_0013_uni_001 )); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="350">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="351" ElType="." desc="if(u!=NULL)" rngLn="351">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="353" ElType=".C" desc="malloc(...)" rngLn="353">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="353" ElType="!" desc="u->s1 = (memory_leak_0013_s_001 *) malloc(sizeof(memory_leak_0013_s_001));" rngLn="353">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="356" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="355" ElType="." desc="memory_leak_0013_uni_001 *p = NULL;" rngLn="355">
          <Props>
            <Prop key="Tracked variables" val="u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u->s1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="357" srcRngStartPos="0" srcRngEndLn="358" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="357" ElType="." desc="if(u!=NULL)" rngLn="357">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (u != 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="359" srcRngStartPos="0" srcRngEndLn="360" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="359" ElType="!" desc="p = u;" rngLn="359">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="360" srcRngStartPos="0" srcRngEndLn="361" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="360" ElType=".P" desc="p->s1->a = 1;" rngLn="360">
          <Props>
            <Prop key="Tracked variables" val="p->s1, u->s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p->s1, u->s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0016_gbl_ptr&quot; may possibly be null" ln="431" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-684923953" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="431" locStartPos="0" locEndLn="432" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="424" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="425" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="429" srcRngStartPos="0" srcRngEndLn="430" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="429" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="429">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="430" srcRngStartPos="0" srcRngEndLn="431" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="430" ElType="!" desc="memory_leak_0016_func_001(strlen(str));" rngLn="430">
          <ElDescList>
            <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="422" ElType="." desc="memory_leak_0016_gbl_ptr=NULL;" rngLn="422">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="423" ElType="." desc="if(a == INDEX)" rngLn="423">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="424" ElType=".C" desc="malloc(...)" rngLn="424">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="424" srcRngStartPos="0" srcRngEndLn="425" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="424" ElType="!" desc="memory_leak_0016_gbl_ptr= malloc(sizeof(char) * (len+1)); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="424">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="431" ElType=".P" desc="strcpy(memory_leak_0016_gbl_ptr,str);" rngLn="431">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0016_gbl_ptr&quot; may possibly be null" ln="431" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="138426588" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="431" locStartPos="0" locEndLn="432" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="422" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="423" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="429" srcRngStartPos="0" srcRngEndLn="430" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="429" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="429">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="430" srcRngStartPos="0" srcRngEndLn="431" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="430" ElType="!" desc="memory_leak_0016_func_001(strlen(str));" rngLn="430">
          <ElDescList>
            <ElDesc srcRngStartln="422" srcRngStartPos="0" srcRngEndLn="423" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="422" ElType=".C" desc="memory_leak_0016_gbl_ptr=NULL;" rngLn="422">
              <Props>
                <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="423" srcRngStartPos="0" srcRngEndLn="424" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="423" ElType="." desc="if(a == INDEX)" rngLn="423">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="431" ElType=".P" desc="strcpy(memory_leak_0016_gbl_ptr,str);" rngLn="431">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0016_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0016_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0017_gbl_doubleptr&quot; may possibly be null" ln="457" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1418309190" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="457" locStartPos="0" locEndLn="458" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="453" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="454" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="452" srcRngStartPos="0" srcRngEndLn="453" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="452" ElType="." desc="int i,j;" rngLn="452">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="453" srcRngStartPos="0" srcRngEndLn="454" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="453" ElType=".C" desc="malloc(...)" rngLn="453">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="453" srcRngStartPos="0" srcRngEndLn="454" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="453" ElType="!" desc="memory_leak_0017_gbl_doubleptr=(long**) malloc(10*sizeof(long*)); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="453">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="455" srcRngStartPos="0" srcRngEndLn="456" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="455" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="455">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0017_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0017_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="457" srcRngStartPos="0" srcRngEndLn="458" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="457" ElType=".P" desc="memory_leak_0017_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="457">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0017_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0017_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;memory_leak_0017_func_001(...) == 0&quot; always evaluates to true" ln="491" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-343824575" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="491" locStartPos="0" locEndLn="492" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="469" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="470" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="469" srcRngStartPos="0" srcRngEndLn="470" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="469" ElType=".C" desc="void memory_leak_0017()" rngLn="469">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="471" srcRngStartPos="0" srcRngEndLn="472" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="471" ElType="." desc="int flag=0,i,j;" rngLn="471">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="472" srcRngStartPos="0" srcRngEndLn="473" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="472" ElType="." desc="memory_leak_0017_gbl_doubleptr=NULL;" rngLn="472">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="473" srcRngStartPos="0" srcRngEndLn="474" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="473" ElType="." desc="goto label;" rngLn="473">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="490" srcRngStartPos="0" srcRngEndLn="491" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="490" ElType="." desc="label:" rngLn="490">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="491" ElType="!" desc="memory_leak_0017_func_001(...)" rngLn="491">
          <ElDescList>
            <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="443" ElType="." desc="int ret ;" rngLn="443">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="444" ElType="." desc="if (flag ==0)" rngLn="444">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="446" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="445" ElType="!" desc="ret = 0;" rngLn="445">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="448" srcRngStartPos="0" srcRngEndLn="449" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="448" ElType="!" desc="return ret;" rngLn="448">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="491" srcRngStartPos="0" srcRngEndLn="492" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="491" ElType=".P" desc="if(memory_leak_0017_func_001(flag)==ZERO)" rngLn="491">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;memory_leak_0018dst&quot; may possibly be null" ln="513" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2112706454" lang="cpp" locType="sr" config="1" hash="-1228130474" locStartln="513" locStartPos="0" locEndLn="514" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" FirstElSrcRngStartln="510" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="511" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="505" ElType="." desc="memory_leak_0018dst = NULL;" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="506" ElType="." desc="int i;" rngLn="506">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="508" ElType="." desc="while(1)" rngLn="508">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="510" ElType=".C" desc="malloc(...)" rngLn="510">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="510" ElType="!" desc="memory_leak_0018dst = (char**) malloc(5*sizeof(char*));" rngLn="510">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="511" srcRngStartPos="0" srcRngEndLn="512" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="511" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="511">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0018dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/memory_leak.c" srcRnghash="-1228130474" ln="513" ElType=".P" desc="memory_leak_0018dst[i]=(char*) malloc(15*sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory Leakage */" rngLn="513">
          <Props>
            <Prop key="Tracked variables" val="memory_leak_0018dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: memory_leak_0018dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to true" ln="214" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="755486668" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="214" locStartPos="0" locEndLn="215" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="210" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="211" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="210" srcRngStartPos="0" srcRngEndLn="211" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="210" ElType=".C" desc="void null_pointer_013 ()" rngLn="210">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="212" srcRngStartPos="0" srcRngEndLn="213" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="212" ElType="." desc="int *p;" rngLn="212">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="213" ElType="!" desc="p = null_pointer_013_func_001();" rngLn="213">
          <ElDescList>
            <ElDesc srcRngStartln="207" srcRngStartPos="0" srcRngEndLn="208" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="207" ElType="!" desc="return buf;" rngLn="207">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="214" ElType=".P" desc="if (p != NULL)" rngLn="214">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; is checked for null after being dereferenced" ln="235" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="-367161518" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="235" locStartPos="0" locEndLn="236" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="234" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="235" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="234" ElType=".C" desc="*p = 1; /*Tool should not detect this line as error*/ /*NO ERROR:NULL pointer dereference*/" rngLn="234">
          <Props>
            <Prop key="Tracked variables" val="p != null" />
          </Props>
          <Anns>
            <Ann msg="Point of dereferencing" kind="cause" />
            <Ann msg="Important values: p != null" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="235" ElType=".P" desc="if (p != NULL)" rngLn="235">
          <Props>
            <Prop key="Tracked variables" val="p != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: p != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to true" ln="235" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1572625708" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="235" locStartPos="0" locEndLn="236" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="230" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="231" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="230" ElType=".C" desc="void null_pointer_014 ()" rngLn="230">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="232" ElType="." desc="int *p;" rngLn="232">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="233" ElType="!" desc="p = null_pointer_014_func_001();" rngLn="233">
          <ElDescList>
            <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="227" ElType="!" desc="return (&amp;null_pointer_014_gbl);" rngLn="227">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="234" ElType="." desc="*p = 1; /*Tool should not detect this line as error*/ /*NO ERROR:NULL pointer dereference*/" rngLn="234">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="235" ElType=".P" desc="if (p != NULL)" rngLn="235">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_015_gbl_ptr&quot; may possibly be null" ln="259" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1451452210" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="259" locStartPos="0" locEndLn="260" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="252" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="253" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="257" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="257" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="257">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="258" ElType="!" desc="null_pointer_015_func_001(strlen(str));" rngLn="258">
          <ElDescList>
            <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="250" ElType="." desc="null_pointer_015_gbl_ptr=NULL;" rngLn="250">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="251" ElType="." desc="if(a == INDEX)" rngLn="251">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="252" ElType=".C" desc="malloc(...)" rngLn="252">
              <Props>
                <Prop key="Tracked variables" val="malloc(...)" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: malloc(...)" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="252" ElType="!" desc="null_pointer_015_gbl_ptr= malloc(sizeof(char) * (len+1));" rngLn="252">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="259" ElType=".P" desc="strcpy(null_pointer_015_gbl_ptr,str); /*Tool should not detect this line as error*/ /*NO ERROR:NULL pointer dereference*/" rngLn="259">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_015_gbl_ptr&quot; may possibly be null" ln="259" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-443502979" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="259" locStartPos="0" locEndLn="260" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="250" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="251" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="257" srcRngStartPos="0" srcRngEndLn="258" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="257" ElType="." desc="char *str = &quot;This is a string&quot;;" rngLn="257">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="258" srcRngStartPos="0" srcRngEndLn="259" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="258" ElType="!" desc="null_pointer_015_func_001(strlen(str));" rngLn="258">
          <ElDescList>
            <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="250" ElType=".C" desc="null_pointer_015_gbl_ptr=NULL;" rngLn="250">
              <Props>
                <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
              </Props>
              <Anns>
                <Ann msg="Source of null value" kind="cause" />
                <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="251" ElType="." desc="if(a == INDEX)" rngLn="251">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a == 97) (assuming false)" kind="condEval" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="259" srcRngStartPos="0" srcRngEndLn="260" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="259" ElType=".P" desc="strcpy(null_pointer_015_gbl_ptr,str); /*Tool should not detect this line as error*/ /*NO ERROR:NULL pointer dereference*/" rngLn="259">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_015_gbl_ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_015_gbl_ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_016_gbl_doubleptr&quot; may possibly be null" ln="285" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-718707280" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="285" locStartPos="0" locEndLn="286" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="281" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="282" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="280" ElType="." desc="int i,j;" rngLn="280">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="281" ElType=".C" desc="malloc(...)" rngLn="281">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="281" srcRngStartPos="0" srcRngEndLn="282" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="281" ElType="!" desc="null_pointer_016_gbl_doubleptr=(long**) malloc(10*sizeof(long*));" rngLn="281">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="283" srcRngStartPos="0" srcRngEndLn="284" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="283" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="283">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="285" srcRngStartPos="0" srcRngEndLn="286" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="285" ElType=".P" desc="null_pointer_016_gbl_doubleptr[i]=(long*) malloc(10*sizeof(long));" rngLn="285">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;null_pointer_016_func_001(...) == 0&quot; always evaluates to true" ln="319" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-716754467" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="319" locStartPos="0" locEndLn="320" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="297" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="298" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="298" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="297" ElType=".C" desc="void null_pointer_016()" rngLn="297">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="299" srcRngStartPos="0" srcRngEndLn="300" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="299" ElType="." desc="int flag=0,i,j;" rngLn="299">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="300" srcRngStartPos="0" srcRngEndLn="301" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="300" ElType="." desc="null_pointer_016_gbl_doubleptr=NULL;" rngLn="300">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="301" srcRngStartPos="0" srcRngEndLn="302" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="301" ElType="." desc="goto label;" rngLn="301">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="318" srcRngStartPos="0" srcRngEndLn="319" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="318" ElType="." desc="label:" rngLn="318">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="319" ElType="!" desc="null_pointer_016_func_001(...)" rngLn="319">
          <ElDescList>
            <ElDesc srcRngStartln="271" srcRngStartPos="0" srcRngEndLn="272" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="271" ElType="." desc="int ret ;" rngLn="271">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="272" srcRngStartPos="0" srcRngEndLn="273" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="272" ElType="." desc="if (flag ==0)" rngLn="272">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="273" srcRngStartPos="0" srcRngEndLn="274" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="273" ElType="!" desc="ret = 0;" rngLn="273">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="276" ElType="!" desc="return ret;" rngLn="276">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="319" srcRngStartPos="0" srcRngEndLn="320" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="319" ElType=".P" desc="if(null_pointer_016_func_001(flag)==ZERO)" rngLn="319">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;null_pointer_017dst&quot; may possibly be null" ln="341" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="582972413" lang="cpp" locType="sr" config="1" hash="-1633732702" locStartln="341" locStartPos="0" locEndLn="342" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" FirstElSrcRngStartln="338" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="339" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="333" srcRngStartPos="0" srcRngEndLn="334" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="333" ElType="." desc="null_pointer_017dst = NULL;" rngLn="333">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="334" srcRngStartPos="0" srcRngEndLn="335" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="334" ElType="." desc="int i;" rngLn="334">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="336" srcRngStartPos="0" srcRngEndLn="337" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="336" ElType="." desc="while(1)" rngLn="336">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="338" ElType=".C" desc="malloc(...)" rngLn="338">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="338" srcRngStartPos="0" srcRngEndLn="339" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="338" ElType="!" desc="null_pointer_017dst = (char**) malloc(5*sizeof(char*));" rngLn="338">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="339" srcRngStartPos="0" srcRngEndLn="340" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="339" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="339">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="341" srcRngStartPos="0" srcRngEndLn="342" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/null_pointer.c" srcRnghash="-1633732702" ln="341" ElType=".P" desc="null_pointer_017dst[i]=(char*) malloc(15*sizeof(char));" rngLn="341">
          <Props>
            <Prop key="Tracked variables" val="null_pointer_017dst" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: null_pointer_017dst" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 55 is out of acceptable range: 'lower than 30'" ln="774" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="-632044352" locStartln="774" locStartPos="0" locEndLn="775" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/overrun_st.c" />
    <FlowViol msg="&quot;newarr&quot; may possibly be null" ln="150" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-551293014" lang="cpp" locType="sr" config="1" hash="1525225098" locStartln="150" locStartPos="0" locEndLn="151" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" FirstElSrcRngStartln="148" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="149" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="145" ElType="." desc="double exponent=2;" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="146" ElType="." desc="double ans;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="147" ElType="." desc="double ans1;" rngLn="147">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="148" ElType=".C" desc="malloc(...)" rngLn="148">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="148" ElType="!" desc="pow_related_errors_007_s* newarr = (pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="149" ElType="." desc="pow_related_errors_007_s* ptr_newarr =(pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: newarr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="150" ElType=".P" desc="newarr->arr[0]=1000;" rngLn="150">
          <Props>
            <Prop key="Tracked variables" val="newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: newarr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr_newarr&quot; may possibly be null" ln="151" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1799994921" lang="cpp" locType="sr" urgent="true" config="1" hash="1525225098" locStartln="151" locStartPos="0" locEndLn="152" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" FirstElSrcRngStartln="149" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="150" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="145" ElType="." desc="double exponent=2;" rngLn="145">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="146" ElType="." desc="double ans;" rngLn="146">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="147" srcRngStartPos="0" srcRngEndLn="148" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="147" ElType="." desc="double ans1;" rngLn="147">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="148" srcRngStartPos="0" srcRngEndLn="149" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="148" ElType="." desc="pow_related_errors_007_s* newarr = (pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="148">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="149" ElType=".C" desc="malloc(...)" rngLn="149">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="149" srcRngStartPos="0" srcRngEndLn="150" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="149" ElType="!" desc="pow_related_errors_007_s* ptr_newarr =(pow_related_errors_007_s *)malloc(sizeof(pow_related_errors_007_s));" rngLn="149">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="150" srcRngStartPos="0" srcRngEndLn="151" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="150" ElType="." desc="newarr->arr[0]=1000;" rngLn="150">
          <Props>
            <Prop key="Tracked variables" val="ptr_newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr_newarr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="151" srcRngStartPos="0" srcRngEndLn="152" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" srcRnghash="1525225098" ln="151" ElType=".P" desc="ptr_newarr->arr[0]=1000;" rngLn="151">
          <Props>
            <Prop key="Tracked variables" val="ptr_newarr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr_newarr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <MetViol msg="Value 30 is out of acceptable range: 'lower than 30'" ln="492" sev="3" auth="kali" rule="METRIC.CC" tool="c++test" cat="METRIC" lang="cpp" locType="sr" config="1" hash="1525225098" locStartln="492" locStartPos="0" locEndLn="493" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/pow_related_errors.c" />
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="136" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2111991297" lang="cpp" locType="sr" config="1" hash="1421194626" locStartln="136" locStartPos="0" locEndLn="137" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" FirstElSrcRngStartln="135" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="136" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="133" srcRngStartPos="0" srcRngEndLn="134" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" srcRnghash="1421194626" ln="133" ElType="." desc="if(instance1==0)" rngLn="133">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (instance1 == 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="135" srcRngStartPos="0" srcRngEndLn="136" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" srcRnghash="1421194626" ln="135" ElType=".C" desc="malloc(...)" rngLn="135">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="135" srcRngStartPos="0" srcRngEndLn="136" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" srcRnghash="1421194626" ln="135" ElType="!" desc="int* ptr=(int*) malloc(10*sizeof(int));" rngLn="135">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="136" srcRngStartPos="0" srcRngEndLn="137" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" srcRnghash="1421194626" ln="136" ElType=".P" desc="memcpy(ptr,&quot;This is test&quot;, 0);" rngLn="136">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <StdViol msg="Loop does not contain terminate point" ln="148" sev="3" auth="kali" rule="CODSTA-82" tool="c++test" cat="CODSTA" lang="cpp" locType="sr" config="1" hash="1421194626" locStartln="148" locStartPos="1" locEndLn="148" locEndPos="2" locFile="/ITC-Benchmarks/02.wo_Defects/race_condition.c" />
    <FlowViol msg="Condition &quot;st_cross_thread_access_003_func_002(...) != 0&quot; always evaluates to true" ln="221" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="22390281" lang="cpp" locType="sr" config="1" hash="-791907886" locStartln="221" locStartPos="0" locEndLn="222" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="217" ElType=".C" desc="void * st_cross_thread_access_003_tsk_001 (void *pram)" rngLn="217">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="219" ElType="." desc="float fptr = 50.2;" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="221" ElType="!" desc="st_cross_thread_access_003_func_002(...)" rngLn="221">
          <ElDescList>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="236" ElType="!" desc="int st_cross_thread_access_003_func_002 (int a )" rngLn="236">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="238" ElType="." desc="int ret = 0;" rngLn="238">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="239" ElType="." desc="if (a > 1)" rngLn="239">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="241" ElType="!" desc="ret = a+5;" rngLn="241">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="243" ElType="!" desc="return ret;" rngLn="243">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="221" ElType=".P" desc="if(st_cross_thread_access_003_func_002(10) !=0 )" rngLn="221">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;st_cross_thread_access_003_func_002(...) != 0&quot; always evaluates to true" ln="250" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="926186163" lang="cpp" locType="sr" config="1" hash="-791907886" locStartln="250" locStartPos="0" locEndLn="251" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="246" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="247" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="246" srcRngStartPos="0" srcRngEndLn="247" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="246" ElType=".C" desc="void* st_cross_thread_access_003_tsk_002 (void *pram)" rngLn="246">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="250" ElType="!" desc="st_cross_thread_access_003_func_002(...)" rngLn="250">
          <ElDescList>
            <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="236" ElType="!" desc="int st_cross_thread_access_003_func_002 (int a )" rngLn="236">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="238" ElType="." desc="int ret = 0;" rngLn="238">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="239" ElType="." desc="if (a > 1)" rngLn="239">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="241" ElType="!" desc="ret = a+5;" rngLn="241">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="243" ElType="!" desc="return ret;" rngLn="243">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="250" ElType=".P" desc="if(st_cross_thread_access_003_func_002(10) !=0)" rngLn="250">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="517" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="-791907886" locStartln="517" locStartPos="0" locEndLn="518" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" FirstElSrcRngStartln="510" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="511" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="510" srcRngStartPos="0" srcRngEndLn="511" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="510" ElType=".C" desc="void st_cross_thread_access_006 ()" rngLn="510">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="512" srcRngStartPos="0" srcRngEndLn="513" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="512" ElType="!" desc="int thread_set = 0;" rngLn="512">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="514" ElType="." desc="pthread_t th1,th2;" rngLn="514">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="515" srcRngStartPos="0" srcRngEndLn="516" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="515" ElType="." desc="intptr_t t1 = 10;" rngLn="515">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="516" ElType="." desc="intptr_t t2 = 20;" rngLn="516">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="517" srcRngStartPos="0" srcRngEndLn="518" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_cross_thread_access.c" srcRnghash="-791907886" ln="517" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="517">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="119" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1907306665" lang="cpp" locType="sr" config="1" hash="-1945859228" locStartln="119" locStartPos="0" locEndLn="120" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" FirstElSrcRngStartln="125" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="126" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="125" srcRngStartPos="0" srcRngEndLn="126" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="125" ElType=".C" desc="st_overflow_004_s_001 s;" rngLn="125">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="126" ElType="!" desc="st_overflow_004_func_001(s);" rngLn="126">
          <ElDescList>
            <ElDesc srcRngStartln="117" srcRngStartPos="0" srcRngEndLn="118" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="117" ElType="." desc="char buf[131072]; /* 128 Kbytes */ /*Tool should not detect this line as error*/ /*NO ERROR:Stack overflow*/" rngLn="117">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="118" ElType="." desc="buf[0] = 1;" rngLn="118">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="119" ElType=".P" desc="st_overflow_004_func_002(s);" rngLn="119">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="145" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="819433282" lang="cpp" locType="sr" urgent="true" config="1" hash="-1945859228" locStartln="145" locStartPos="0" locEndLn="146" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" FirstElSrcRngStartln="156" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="157" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="155" srcRngStartPos="0" srcRngEndLn="156" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="155" ElType="." desc="char buf[4096]; /* 4 Kbytes */" rngLn="155">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="156" srcRngStartPos="0" srcRngEndLn="157" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="156" ElType=".C" desc="st_overflow_005_s_001 s;" rngLn="156">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="157" ElType="!" desc="st_overflow_005_func_001(s, 10);" rngLn="157">
          <ElDescList>
            <ElDesc srcRngStartln="143" srcRngStartPos="0" srcRngEndLn="144" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="143" ElType="." desc="if (cnt > 0)" rngLn="143">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Condition evaluation: (cnt > 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="145" srcRngStartPos="0" srcRngEndLn="146" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="145" ElType=".P" desc="st_overflow_005_func_001(s, cnt - 1);" rngLn="145">
              <Props>
                <Prop key="Tracked variables" val="s" />
              </Props>
              <Anns>
                <Ann msg="Not initialized value: s" kind="var" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="191" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="-548747768" lang="cpp" locType="sr" config="1" hash="-1945859228" locStartln="191" locStartPos="0" locEndLn="192" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" FirstElSrcRngStartln="188" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="189" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="188" ElType=".C" desc="st_overflow_006_s_001 s;" rngLn="188">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="189" ElType="." desc="void (*func)(st_overflow_006_s_001);" rngLn="189">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="190" srcRngStartPos="0" srcRngEndLn="191" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="190" ElType="." desc="func = st_overflow_006_func_001;" rngLn="190">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="191" ElType=".P" desc="func(s);" rngLn="191">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag&quot; always evaluates to true" ln="232" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2140741479" lang="cpp" locType="sr" config="1" hash="-1945859228" locStartln="232" locStartPos="0" locEndLn="233" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" FirstElSrcRngStartln="228" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="229" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="228" ElType=".C" desc="void st_overflow_007 ()" rngLn="228">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="230" srcRngStartPos="0" srcRngEndLn="231" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="230" ElType="." desc="st_overflow_007_s_001 s; /* 6 Kbytes */" rngLn="230">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="231" ElType="!" desc="int flag = 10;" rngLn="231">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_overflow.c" srcRnghash="-1945859228" ln="232" ElType=".P" desc="if (flag)" rngLn="232">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s1&quot; is used prior to initialization" ln="132" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="868638400" lang="cpp" locType="sr" urgent="true" config="1" hash="144045952" locStartln="132" locStartPos="0" locEndLn="133" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" FirstElSrcRngStartln="121" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="122" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="121" srcRngStartPos="0" srcRngEndLn="122" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="121" ElType=".C" desc="st_underrun_004_s_001 s1;" rngLn="121">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="122" ElType="." desc="st_underrun_004_func_002(s);" rngLn="122">
          <ElDescList>
            <ElDesc srcRngStartln="115" srcRngStartPos="0" srcRngEndLn="116" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="115" ElType="." desc="char buf[10] = &quot;STRING&quot;;" rngLn="115">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="116" ElType="." desc="strcpy(s->buf,buf);" rngLn="116">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="123" srcRngStartPos="0" srcRngEndLn="124" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="123" ElType="." desc="int len = strlen(s->buf) - 1;" rngLn="123">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="126" srcRngStartPos="0" srcRngEndLn="127" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="126" ElType="." desc="s->buf[len] = 'B';" rngLn="126">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="127" ElType="." desc="s1.buf[len] = s->buf[len];" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="128" ElType="." desc="len--;" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="129" ElType="." desc="if ( len &lt; 0 )" rngLn="129">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (len &lt; 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="130" ElType="." desc="break;" rngLn="130">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="132" ElType=".P" desc="return s1;" rngLn="132">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s1" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Overflow when writing to buffer &quot;s.buf&quot; (char[10], 10 bytes large). Number of bytes written = 12" ln="213" ruleSAFMsg="Point where the buffer overflow occurs" auth="kali" sev="1" rule="BD-PB-OVERFWR" ruleSCSCMsg="Point where number of elements to write is defined" tool="c++test" id="585674697" lang="cpp" locType="sr" config="1" hash="144045952" locStartln="213" locStartPos="0" locEndLn="214" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" FirstElSrcRngStartln="213" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="214" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="209" ElType="." desc="st_underrun_006_s_001 s;" rngLn="209">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="213" ElType="CP" desc="strcpy(s.buf,&quot;STRING !!!!&quot;);" rngLn="213">
          <Props />
          <Anns>
            <Ann msg="Point where number of elements to write is defined" kind="cause" />
            <Ann msg="Point where the buffer overflow occurs" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s&quot; is used prior to initialization" ln="216" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-NOTINIT" ruleSCSCMsg="Source of not initialized value" tool="c++test" id="1624216505" lang="cpp" locType="sr" urgent="true" config="1" hash="144045952" locStartln="216" locStartPos="0" locEndLn="217" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" FirstElSrcRngStartln="209" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="210" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c">
      <Props>
        <Prop key="Tracked variables" val="Not initialized value" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="209" srcRngStartPos="0" srcRngEndLn="210" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="209" ElType=".C" desc="st_underrun_006_s_001 s;" rngLn="209">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Source of not initialized value" kind="cause" />
            <Ann msg="Not initialized value: s" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="213" srcRngStartPos="0" srcRngEndLn="214" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="213" ElType="." desc="strcpy(s.buf,&quot;STRING !!!!&quot;);" rngLn="213">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="214" srcRngStartPos="0" srcRngEndLn="215" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="214" ElType="." desc="void (*func)(st_underrun_006_s_001);" rngLn="214">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="215" ElType="." desc="func = st_underrun_006_func_001;" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="216" ElType=".P" desc="func(s);" rngLn="216">
          <Props>
            <Prop key="Tracked variables" val="s" />
          </Props>
          <Anns>
            <Ann msg="Not initialized value: s" kind="var" />
            <Ann msg="Usage point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Usage of not zero-terminated string: &quot;s->buf&quot;" ln="234" ruleSAFMsg="Usage point" auth="kali" sev="1" rule="BD-PB-OVERFNZT" ruleSCSCMsg="Start of the path" tool="c++test" id="2098845145" lang="cpp" locType="sr" config="1" hash="144045952" locStartln="234" locStartPos="0" locEndLn="235" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" FirstElSrcRngStartln="250" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="251" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="250" ElType=".C" desc="void st_underrun_007 ()" rngLn="250">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="252" ElType="." desc="int flag = 0;" rngLn="252">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="253" ElType="." desc="st_underrun_007_s_001 s;" rngLn="253">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="254" ElType="." desc="s.buf[0] = 1;" rngLn="254">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="255" ElType="." desc="if (flag >1 )" rngLn="255">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag > 1) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="261" srcRngStartPos="0" srcRngEndLn="262" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="261" ElType="!" desc="st_underrun_007_func_001(&amp;s);" rngLn="261">
          <ElDescList>
            <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="234" ElType=".P" desc="strlen(...)" rngLn="234">
              <Props />
              <Anns>
                <Ann msg="Not zero-terminated string: s->buf" kind="comment" />
                <Ann msg="Usage point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag > 1&quot; always evaluates to false" ln="255" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-949494229" lang="cpp" locType="sr" config="1" hash="144045952" locStartln="255" locStartPos="0" locEndLn="256" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" FirstElSrcRngStartln="250" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="251" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="250" srcRngStartPos="0" srcRngEndLn="251" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="250" ElType=".C" desc="void st_underrun_007 ()" rngLn="250">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="252" srcRngStartPos="0" srcRngEndLn="253" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="252" ElType="!" desc="int flag = 0;" rngLn="252">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="253" srcRngStartPos="0" srcRngEndLn="254" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="253" ElType="." desc="st_underrun_007_s_001 s;" rngLn="253">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="254" srcRngStartPos="0" srcRngEndLn="255" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="254" ElType="." desc="s.buf[0] = 1;" rngLn="254">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="255" srcRngStartPos="0" srcRngEndLn="256" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/st_underrun.c" srcRnghash="144045952" ln="255" ElType=".P" desc="if (flag >1 )" rngLn="255">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;var == 0&quot; always evaluates to true" ln="195" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1908648669" lang="cpp" locType="sr" config="1" hash="-1452620417" locStartln="195" locStartPos="0" locEndLn="196" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" FirstElSrcRngStartln="189" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="190" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="189" ElType=".C" desc="void underrun_st_013 ()" rngLn="189">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="191" ElType="." desc="int i=4;" rngLn="191">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="192" ElType="!" desc="int var=0;" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="193" ElType="." desc="while(i > -1)" rngLn="193">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i > -1) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/underrun_st.c" srcRnghash="-1452620417" ln="195" ElType=".P" desc="if(var==0)" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;*ptr, p2&quot; may possibly be null" ln="76" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="382758635" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="76" locStartPos="0" locEndLn="77" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="69" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="70" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="67" srcRngStartPos="0" srcRngEndLn="68" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="67" ElType="." desc="short **ptr = NULL;" rngLn="67">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="68" srcRngStartPos="0" srcRngEndLn="69" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="68" ElType="." desc="short *p1 = (short *) calloc(10,sizeof(short));" rngLn="68">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="69" srcRngStartPos="0" srcRngEndLn="70" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="69" ElType=".C" desc="short *p2 = NULL;" rngLn="69">
          <Props>
            <Prop key="Tracked variables" val="p2" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: p2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="70" srcRngStartPos="0" srcRngEndLn="71" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="70" ElType="." desc="if(p1 !=NULL)" rngLn="70">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (p1 != 0) (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="75" srcRngStartPos="0" srcRngEndLn="76" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="75" ElType="!" desc="ptr = &amp;p2;" rngLn="75">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="76" srcRngStartPos="0" srcRngEndLn="77" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="76" ElType=".P" desc="printf(&quot;%d \n&quot;,**ptr); /*Tool should not detect this line as error*/ /*No ERROR:Uninitialized Memory Access*/" rngLn="76">
          <Props>
            <Prop key="Tracked variables" val="*ptr, p2" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: *ptr, p2" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;dst&quot; may possibly be null" ln="118" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1174154655" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="118" locStartPos="0" locEndLn="119" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="127" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="128" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="127" ElType=".C" desc="calloc(...)" rngLn="127">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="127" ElType="!" desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="128" ElType="." desc="char *str2 = &quot;STRING&quot;;" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="129" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="129">
          <ElDescList>
            <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="109" ElType="." desc="if(src == NULL)" rngLn="109">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Condition evaluation: (src == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="116" ElType="." desc="while(*src != '\0')" rngLn="116">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (*src != 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="118" ElType=".P" desc="*dst = *src;" rngLn="118">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: dst" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str1" ln="131" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-1268433351" lang="cpp" locType="sr" urgent="true" config="1" hash="-1071886477" locStartln="131" locStartPos="0" locEndLn="132" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="127" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="128" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="127" ElType=".C" desc="calloc(...)" rngLn="127">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="127" ElType="!" desc="char *str1 = (char *) calloc(25,sizeof(char));" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="128" ElType="." desc="char *str2 = &quot;STRING&quot;;" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="129" ElType="!" desc="uninit_memory_access_006_func_001(str1, str2);" rngLn="129">
          <ElDescList>
            <ElDesc srcRngStartln="109" srcRngStartPos="0" srcRngEndLn="110" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="109" ElType="." desc="if(src == NULL)" rngLn="109">
              <Props>
                <Prop key="Tracked variables" val="dst" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: dst" kind="var" />
                <Ann msg="Condition evaluation: (src == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="116" ElType="." desc="while(*src != '\0')" rngLn="116">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (*src != 0) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="118" srcRngStartPos="0" srcRngEndLn="119" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="118" ElType="." desc="*dst = *src;" rngLn="118">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="119" srcRngStartPos="0" srcRngEndLn="120" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="119" ElType="." desc="src++;" rngLn="119">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="120" srcRngStartPos="0" srcRngEndLn="121" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="120" ElType="!" desc="dst++;" rngLn="120">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="116" srcRngStartPos="0" srcRngEndLn="117" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="116" ElType="." desc="while(*src != '\0')" rngLn="116">
              <Props>
                <Prop key="Tracked variables" val="dst-1" />
              </Props>
              <Anns>
                <Ann msg="Allocated memory: dst-1" kind="var" />
                <Ann msg="Loop condition evaluation: (*src != 0) (assuming false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="122" srcRngStartPos="0" srcRngEndLn="123" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="122" ElType="!" desc="*dst = '\0';" rngLn="122">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="130" ElType="." desc="printf(&quot;%s\n&quot;, str1);/*Tool should not detect this line as error*/ /*No ERROR:Uninitialized Memory Access*/" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="131" ElType=".P" desc="}" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_memory_access_009_doubleptr_gbl&quot; may possibly be null" ln="236" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="2027346874" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="236" locStartPos="0" locEndLn="237" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="232" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="233" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="231" ElType="." desc="int i,j;" rngLn="231">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="232" ElType=".C" desc="malloc(...)" rngLn="232">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="232" srcRngStartPos="0" srcRngEndLn="233" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="232" ElType="!" desc="uninit_memory_access_009_doubleptr_gbl=(long**) malloc(10*sizeof(long*));" rngLn="232">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="234" srcRngStartPos="0" srcRngEndLn="235" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="234" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="234">
          <Props>
            <Prop key="Tracked variables" val="uninit_memory_access_009_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_memory_access_009_doubleptr_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="236" ElType=".P" desc="uninit_memory_access_009_doubleptr_gbl[i]=(long*) malloc(10*sizeof(long));" rngLn="236">
          <Props>
            <Prop key="Tracked variables" val="uninit_memory_access_009_doubleptr_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_memory_access_009_doubleptr_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_memory_access_009_func_001(...) == 0&quot; always evaluates to true" ln="251" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1629586335" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="251" locStartPos="0" locEndLn="252" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="247" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="248" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="247" srcRngStartPos="0" srcRngEndLn="248" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="247" ElType=".C" desc="void uninit_memory_access_009()" rngLn="247">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="249" srcRngStartPos="0" srcRngEndLn="250" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="249" ElType="." desc="int flag=0,i,j;" rngLn="249">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="251" ElType="!" desc="uninit_memory_access_009_func_001(...)" rngLn="251">
          <ElDescList>
            <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="221" ElType="." desc="int ret;" rngLn="221">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="222" srcRngStartPos="0" srcRngEndLn="223" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="222" ElType="." desc="if (flag ==0)" rngLn="222">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="223" srcRngStartPos="0" srcRngEndLn="224" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="223" ElType="!" desc="ret = 0;" rngLn="223">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="226" srcRngStartPos="0" srcRngEndLn="227" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="226" ElType="!" desc="return ret;" rngLn="226">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="251" srcRngStartPos="0" srcRngEndLn="252" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="251" ElType=".P" desc="if(uninit_memory_access_009_func_001(flag)==0)" rngLn="251">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERR&quot; always evaluates to false" ln="297" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1782001748" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="297" locStartPos="0" locEndLn="298" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="287" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="288" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="287" srcRngStartPos="0" srcRngEndLn="288" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="287" ElType=".C" desc="void uninit_memory_access_010_func_001(unsigned devno)" rngLn="287">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="289" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl = (uninit_memory_access_010_s_001 *) malloc (5*sizeof(uninit_memory_access_010_s_001));" rngLn="289">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="290" srcRngStartPos="0" srcRngEndLn="291" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="290" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl!=NULL)" rngLn="290">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_memory_access_010_s_001_arr_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="292" ElType="!" desc="uninit_memory_access_010_s_001_arr_gbl->csr = READY;" rngLn="292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="296" srcRngStartPos="0" srcRngEndLn="297" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="296" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl->data = READY;" rngLn="296">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="298" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="297" ElType=".P" desc="if(uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERROR)" rngLn="297">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;(int)uninit_memory_access_010_s_001_arr_gbl->csr &amp; 3 == 0&quot; always evaluates to false" ln="301" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1624525098" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="301" locStartPos="0" locEndLn="302" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="287" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="288" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="287" srcRngStartPos="0" srcRngEndLn="288" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="287" ElType=".C" desc="void uninit_memory_access_010_func_001(unsigned devno)" rngLn="287">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="289" srcRngStartPos="0" srcRngEndLn="290" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="289" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl = (uninit_memory_access_010_s_001 *) malloc (5*sizeof(uninit_memory_access_010_s_001));" rngLn="289">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="290" srcRngStartPos="0" srcRngEndLn="291" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="290" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl!=NULL)" rngLn="290">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_memory_access_010_s_001_arr_gbl != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="292" srcRngStartPos="0" srcRngEndLn="293" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="292" ElType="!" desc="uninit_memory_access_010_s_001_arr_gbl->csr = READY;" rngLn="292">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="296" srcRngStartPos="0" srcRngEndLn="297" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="296" ElType="." desc="uninit_memory_access_010_s_001_arr_gbl->data = READY;" rngLn="296">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="297" srcRngStartPos="0" srcRngEndLn="298" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="297" ElType="." desc="if(uninit_memory_access_010_s_001_arr_gbl->csr &amp; ERROR)" rngLn="297">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: ((int)uninit_memory_access_010_s_001_arr_gbl->csr &amp; 1 != 0) (false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="301" srcRngStartPos="0" srcRngEndLn="302" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="301" ElType=".P" desc="}while( (uninit_memory_access_010_s_001_arr_gbl->csr &amp; (READY | ERROR)) == 0);" rngLn="301">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;s1&quot; may possibly be null" ln="377" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-235593712" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="377" locStartPos="0" locEndLn="378" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="376" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="377" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="373" srcRngStartPos="0" srcRngEndLn="374" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="373" ElType="." desc="int i;" rngLn="373">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="374" srcRngStartPos="0" srcRngEndLn="375" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="374" ElType="." desc="uninit_memory_access_013_s_001 *s1, s;" rngLn="374">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="376" ElType=".C" desc="calloc(...)" rngLn="376">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="376" srcRngStartPos="0" srcRngEndLn="377" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="376" ElType="!" desc="s1 = (uninit_memory_access_013_s_001*)calloc(1,sizeof(uninit_memory_access_013_s_001));" rngLn="376">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="377" srcRngStartPos="0" srcRngEndLn="378" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="377" ElType=".P" desc="s1->int_a = 10;" rngLn="377">
          <Props>
            <Prop key="Tracked variables" val="s1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: s1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;u&quot; may possibly be null" ln="409" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-2065617917" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="409" locStartPos="0" locEndLn="410" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="408" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="409" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="401" ElType="." desc="int flag = rand();" rngLn="401">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="402" ElType="." desc="flag = 1;" rngLn="402">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="403" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="404" ElType="." desc="switch (flag)" rngLn="404">
          <Props />
          <Anns>
            <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="408" ElType=".C" desc="calloc(...)" rngLn="408">
          <Props>
            <Prop key="Tracked variables" val="calloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: calloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="408" ElType="!" desc="u = (uninit_memory_access_014_u_001 *)calloc(1,sizeof(uninit_memory_access_014_u_001));" rngLn="408">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="409" ElType=".P" desc="u->a = 40;" rngLn="409">
          <Props>
            <Prop key="Tracked variables" val="u" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: u" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; is checked for null after being dereferenced" ln="434" ruleSAFMsg="Point of checking for nullity" auth="kali" sev="2" rule="BD-PB-DEREF" ruleSCSCMsg="Point of dereferencing" tool="c++test" id="1521798296" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="434" locStartPos="0" locEndLn="435" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="409" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="410" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Important values" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="433" ElType="!" desc="p = uninit_memory_access_014_func_001 ();" rngLn="433">
          <ElDescList>
            <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="409" ElType=".C" desc="u->a = 40;" rngLn="409">
              <Props>
                <Prop key="Tracked variables" val="u != null" />
              </Props>
              <Anns>
                <Ann msg="Point of dereferencing" kind="cause" />
                <Ann msg="Important values: u != null" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="410" srcRngStartPos="0" srcRngEndLn="411" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="410" ElType="!" desc="return u;" rngLn="410">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="434" ElType=".P" desc="if(p != NULL)" rngLn="434">
          <Props>
            <Prop key="Tracked variables" val="p != null" />
          </Props>
          <Anns>
            <Ann msg="Important values: p != null" kind="var" />
            <Ann msg="Point of checking for nullity" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;p != 0&quot; always evaluates to true" ln="434" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1153183826" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="434" locStartPos="0" locEndLn="435" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="429" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="430" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="429" srcRngStartPos="0" srcRngEndLn="430" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="429" ElType=".C" desc="void uninit_memory_access_014 ()" rngLn="429">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="431" srcRngStartPos="0" srcRngEndLn="432" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="431" ElType="." desc="int ret = 0;" rngLn="431">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="432" srcRngStartPos="0" srcRngEndLn="433" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="432" ElType="." desc="uninit_memory_access_014_u_001 *p;" rngLn="432">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="433" srcRngStartPos="0" srcRngEndLn="434" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="433" ElType="!" desc="p = uninit_memory_access_014_func_001 ();" rngLn="433">
          <ElDescList>
            <ElDesc srcRngStartln="401" srcRngStartPos="0" srcRngEndLn="402" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="401" ElType="." desc="int flag = rand();" rngLn="401">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="402" ElType="." desc="flag = 1;" rngLn="402">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="403" ElType="." desc="uninit_memory_access_014_u_001 *u;" rngLn="403">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="404" ElType="." desc="switch (flag)" rngLn="404">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: flag (&quot;case 1&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="408" ElType="!" desc="calloc(...)" rngLn="408">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="408" ElType="!" desc="u = (uninit_memory_access_014_u_001 *)calloc(1,sizeof(uninit_memory_access_014_u_001));" rngLn="408">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="409" ElType="." desc="u->a = 40;" rngLn="409">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="410" srcRngStartPos="0" srcRngEndLn="411" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="410" ElType="!" desc="return u;" rngLn="410">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="434" srcRngStartPos="0" srcRngEndLn="435" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="434" ElType=".P" desc="if(p != NULL)" rngLn="434">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;p&quot; may possibly be null" ln="456" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-1852064560" lang="cpp" locType="sr" config="1" hash="-1071886477" locStartln="456" locStartPos="0" locEndLn="457" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" FirstElSrcRngStartln="455" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="456" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="449" srcRngStartPos="0" srcRngEndLn="450" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="449" ElType="." desc="int (*p)[4];" rngLn="449">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="450" srcRngStartPos="0" srcRngEndLn="451" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="450" ElType="." desc="int arr[4][4] = {{1,2,3,4}," rngLn="450">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="454" srcRngStartPos="0" srcRngEndLn="455" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="454" ElType="." desc="int i,j;" rngLn="454">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="455" srcRngStartPos="0" srcRngEndLn="456" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="455" ElType=".C" desc="malloc(...)" rngLn="455">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="455" srcRngStartPos="0" srcRngEndLn="456" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="455" ElType="!" desc="p= (int (*)[]) malloc (sizeof arr);" rngLn="455">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="456" srcRngStartPos="0" srcRngEndLn="457" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_memory_access.c" srcRnghash="-1071886477" ln="456" ElType=".P" desc="memcpy(p, arr, sizeof(arr));" rngLn="456">
          <Props>
            <Prop key="Tracked variables" val="p" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: p" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf1" ln="146" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1453222092" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="127" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="128" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="127" ElType=".C" desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="127">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="128" ElType="." desc="char *buf2=strdup(&quot;String2&quot;);" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="129" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="130" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="131" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="132" ElType="." desc="if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf2 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf2 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="146" ElType=".P" desc="}" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf2" ln="146" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1453222093" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="128" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="129" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="127" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="128" ElType=".C" desc="char *buf2=strdup(&quot;String2&quot;);" rngLn="128">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="129" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="130" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="131" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="132" ElType="." desc="if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf2 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf2 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="146" ElType=".P" desc="}" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf2" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf2" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf3" ln="146" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1453222130" lang="cpp" locType="sr" urgent="true" config="1" hash="-712657568" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="129" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="130" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="127" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="128" ElType="." desc="char *buf2=strdup(&quot;String2&quot;);" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="129" ElType=".C" desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="129">
          <Props>
            <Prop key="Tracked variables" val="buf3" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf3" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="130" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="131" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="132" ElType="." desc="if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf2 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf2 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="146" ElType=".P" desc="}" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf3" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf3" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf4" ln="146" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1453222131" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="130" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="131" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="127" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="128" ElType="." desc="char *buf2=strdup(&quot;String2&quot;);" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="129" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="130" ElType=".C" desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="130">
          <Props>
            <Prop key="Tracked variables" val="buf4" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf4" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="131" ElType="." desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="131">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="132" ElType="." desc="if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf2 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf5 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf2 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="146" ElType=".P" desc="}" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf4" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf4" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: buf5" ln="146" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1545374370" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="146" locStartPos="0" locEndLn="147" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="131" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="132" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="127" srcRngStartPos="0" srcRngEndLn="128" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="127" ElType="." desc="char *buf1=strdup(&quot;String1&quot;);" rngLn="127">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="128" srcRngStartPos="0" srcRngEndLn="129" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="128" ElType="." desc="char *buf2=strdup(&quot;String2&quot;);" rngLn="128">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="129" srcRngStartPos="0" srcRngEndLn="130" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="129" ElType="." desc="char *buf3=strdup(&quot;String3&quot;);" rngLn="129">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="130" srcRngStartPos="0" srcRngEndLn="131" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="130" ElType="." desc="char *buf4=strdup(&quot;String4&quot;);" rngLn="130">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="131" srcRngStartPos="0" srcRngEndLn="132" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="131" ElType=".C" desc="char *buf5=strdup(&quot;String5&quot;);" rngLn="131">
          <Props>
            <Prop key="Tracked variables" val="buf5" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: buf5" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="132" srcRngStartPos="0" srcRngEndLn="133" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="132" ElType="." desc="if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;" rngLn="132">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !buf1 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf2 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf3 (assuming false)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf4 (assuming true)" kind="condEval" />
            <Ann msg="Condition evaluation: !buf1 || !buf2 || !buf3 || !buf4 || !buf5 (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="146" srcRngStartPos="0" srcRngEndLn="147" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="146" ElType=".P" desc="}" rngLn="146">
          <Props>
            <Prop key="Tracked variables" val="buf5" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: buf5" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_009_func_001(...) > 0&quot; always evaluates to true" ln="191" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="282061545" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="191" locStartPos="0" locEndLn="192" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="186" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="187" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="186" ElType=".C" desc="void uninit_pointer_009()" rngLn="186">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="188" ElType="." desc="char *buf,buf1[25];" rngLn="188">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="189" ElType="!" desc="int flag=1;" rngLn="189">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="191" ElType="!" desc="uninit_pointer_009_func_001(...)" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="176" ElType="!" desc="int uninit_pointer_009_func_001(int flag)" rngLn="176">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="178" ElType="." desc="int ret;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="179" ElType="." desc="if (flag ==0)" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="182" ElType="!" desc="ret=flag+1;" rngLn="182">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="183" ElType="!" desc="return ret;" rngLn="183">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="191" ElType=".P" desc="if(uninit_pointer_009_func_001(flag)>0)" rngLn="191">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_009_func_001(...) > 0&quot; always evaluates to true" ln="195" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="39958890" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="195" locStartPos="0" locEndLn="196" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="186" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="187" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="186" srcRngStartPos="0" srcRngEndLn="187" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="186" ElType=".C" desc="void uninit_pointer_009()" rngLn="186">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="188" srcRngStartPos="0" srcRngEndLn="189" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="188" ElType="." desc="char *buf,buf1[25];" rngLn="188">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="189" srcRngStartPos="0" srcRngEndLn="190" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="189" ElType="!" desc="int flag=1;" rngLn="189">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="191" ElType="." desc="uninit_pointer_009_func_001(...)" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="178" ElType="." desc="int ret;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="179" ElType="." desc="if (flag ==0)" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="182" ElType="." desc="ret=flag+1;" rngLn="182">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="183" ElType="." desc="return ret;" rngLn="183">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="191" ElType="." desc="if(uninit_pointer_009_func_001(flag)>0)" rngLn="191">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_009_func_001(...) > 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="193" srcRngStartPos="0" srcRngEndLn="194" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="193" ElType="." desc="buf = &quot;This is a string&quot;;" rngLn="193">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="195" ElType="!" desc="uninit_pointer_009_func_001(...)" rngLn="195">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="176" ElType="!" desc="int uninit_pointer_009_func_001(int flag)" rngLn="176">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="178" ElType="." desc="int ret;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="179" ElType="." desc="if (flag ==0)" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (false)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="182" srcRngStartPos="0" srcRngEndLn="183" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="182" ElType="!" desc="ret=flag+1;" rngLn="182">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="183" srcRngStartPos="0" srcRngEndLn="184" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="183" ElType="!" desc="return ret;" rngLn="183">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="195" srcRngStartPos="0" srcRngEndLn="196" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="195" ElType=".P" desc="if(uninit_pointer_009_func_001(flag)>0)" rngLn="195">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: ptr" ln="248" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-364727959" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="248" locStartPos="0" locEndLn="249" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="227" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="228" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="226" srcRngStartPos="0" srcRngEndLn="227" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="226" ElType="." desc="unsigned int * ptr = NULL,a=0;" rngLn="226">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="227" ElType=".C" desc="malloc(...)" rngLn="227">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="227" srcRngStartPos="0" srcRngEndLn="228" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="227" ElType="!" desc="ptr = (unsigned int *)malloc(10*sizeof(unsigned int *));" rngLn="227">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="228" ElType="." desc="int i;" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="229" srcRngStartPos="0" srcRngEndLn="230" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="229" ElType="." desc="if (ptr!=NULL)" rngLn="229">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ptr != 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="231" srcRngStartPos="0" srcRngEndLn="232" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="231" ElType="." desc="while(1)" rngLn="231">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="233" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="233">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="235" srcRngStartPos="0" srcRngEndLn="236" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="235" ElType="." desc="ptr[i] = i;" rngLn="235">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="233" srcRngStartPos="0" srcRngEndLn="234" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="233" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="233">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="237" ElType="." desc="break;" rngLn="237">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="239" ElType="." desc="while(1)" rngLn="239">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: 1 (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="241" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="241">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="243" ElType="." desc="a += ptr[i]; /*Tool should not detect this line as error*/ /*No ERROR:Uninitialized pointer*/" rngLn="243">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="241" ElType="." desc="for(i=0; i&lt;10; i++)" rngLn="241">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (assuming false)" kind="condEval" />
            <Ann msg="Not entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="245" srcRngStartPos="0" srcRngEndLn="246" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="245" ElType="." desc="break;" rngLn="245">
          <Props />
          <Anns>
            <Ann msg="Exit the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="248" srcRngStartPos="0" srcRngEndLn="249" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="248" ElType=".P" desc="}" rngLn="248">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: ptr" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;ptr&quot; may possibly be null" ln="280" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1391446925" lang="cpp" locType="sr" urgent="true" config="1" hash="-712657568" locStartln="280" locStartPos="0" locEndLn="281" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="276" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="277" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="276" ElType=".C" desc="malloc(...)" rngLn="276">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="276" srcRngStartPos="0" srcRngEndLn="277" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="276" ElType="!" desc="int **ptr = (int**) malloc(3*sizeof(int*));" rngLn="276">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="277" srcRngStartPos="0" srcRngEndLn="278" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="277" ElType="." desc="int i,j;" rngLn="277">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="279" srcRngStartPos="0" srcRngEndLn="280" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="279" ElType="." desc="for(i=0;i&lt;3;i++)" rngLn="279">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 3) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="280" srcRngStartPos="0" srcRngEndLn="281" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="280" ElType=".P" desc="ptr[i]=(int*) malloc(3*sizeof(int));" rngLn="280">
          <Props>
            <Prop key="Tracked variables" val="ptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: ptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_016_func_001(...) == 0&quot; always evaluates to true" ln="394" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="775608623" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="394" locStartPos="0" locEndLn="395" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="391" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="392" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="391" srcRngStartPos="0" srcRngEndLn="392" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="391" ElType=".C" desc="void uninit_pointer_016_func_002()" rngLn="391">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="393" ElType="." desc="int i;" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType="!" desc="uninit_pointer_016_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="383" ElType="." desc="int ret;" rngLn="383">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="384" ElType="." desc="if (flag ==0)" rngLn="384">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="385" ElType="!" desc="ret = 0;" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="388" ElType="!" desc="return ret;" rngLn="388">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType=".P" desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_pointer_016_gbl_doubleptr&quot; may possibly be null" ln="399" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="654618209" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="399" locStartPos="0" locEndLn="400" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="396" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="397" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="393" ElType="." desc="int i;" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType="." desc="uninit_pointer_016_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="383" ElType="." desc="int ret;" rngLn="383">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="384" ElType="." desc="if (flag ==0)" rngLn="384">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="385" ElType="." desc="ret = 0;" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="388" ElType="." desc="return ret;" rngLn="388">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType="." desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="396" ElType=".C" desc="malloc(...)" rngLn="396">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="396" ElType="!" desc="uninit_pointer_016_gbl_doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="396">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="397" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="397">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="399" ElType=".P" desc="uninit_pointer_016_gbl_doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="399">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;uninit_pointer_016_gbl_doubleptr[0]&quot; may possibly be null" ln="400" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1911046160" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="400" locStartPos="0" locEndLn="401" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="399" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="400" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="393" srcRngStartPos="0" srcRngEndLn="394" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="393" ElType="." desc="int i;" rngLn="393">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType="." desc="uninit_pointer_016_func_001(...)" rngLn="394">
          <ElDescList>
            <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="383" ElType="." desc="int ret;" rngLn="383">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="384" ElType="." desc="if (flag ==0)" rngLn="384">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="385" ElType="." desc="ret = 0;" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="388" ElType="." desc="return ret;" rngLn="388">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="394" ElType="." desc="if(uninit_pointer_016_func_001(0)==0)" rngLn="394">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (uninit_pointer_016_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="396" ElType="." desc="uninit_pointer_016_gbl_doubleptr=(char**) malloc(10*sizeof(char*));" rngLn="396">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="397" srcRngStartPos="0" srcRngEndLn="398" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="397" ElType="." desc="for(i=0;i&lt;10;i++)" rngLn="397">
          <Props />
          <Anns>
            <Ann msg="Loop condition evaluation: (i &lt; 10) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="399" ElType=".C" desc="malloc(...)" rngLn="399">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="399" ElType="!" desc="uninit_pointer_016_gbl_doubleptr[i]=(char*) malloc(10*sizeof(char));" rngLn="399">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="400" ElType=".P" desc="strcpy(uninit_pointer_016_gbl_doubleptr[i],&quot;STRING00&quot;);" rngLn="400">
          <Props>
            <Prop key="Tracked variables" val="uninit_pointer_016_gbl_doubleptr[0]" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: uninit_pointer_016_gbl_doubleptr[0]" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;uninit_pointer_016_func_001(...) == 0&quot; always evaluates to true" ln="409" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1854950289" lang="cpp" locType="sr" config="1" hash="-712657568" locStartln="409" locStartPos="0" locEndLn="410" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" FirstElSrcRngStartln="405" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="406" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="405" ElType=".C" desc="void uninit_pointer_016()" rngLn="405">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="407" srcRngStartPos="0" srcRngEndLn="408" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="407" ElType="." desc="int flag=0,i;" rngLn="407">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="408" srcRngStartPos="0" srcRngEndLn="409" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="408" ElType="." desc="char *s=(char*) malloc(10*sizeof(char));" rngLn="408">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="409" ElType="!" desc="uninit_pointer_016_func_001(...)" rngLn="409">
          <ElDescList>
            <ElDesc srcRngStartln="383" srcRngStartPos="0" srcRngEndLn="384" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="383" ElType="." desc="int ret;" rngLn="383">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="384" srcRngStartPos="0" srcRngEndLn="385" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="384" ElType="." desc="if (flag ==0)" rngLn="384">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="385" srcRngStartPos="0" srcRngEndLn="386" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="385" ElType="!" desc="ret = 0;" rngLn="385">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="388" srcRngStartPos="0" srcRngEndLn="389" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="388" ElType="!" desc="return ret;" rngLn="388">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_pointer.c" srcRnghash="-712657568" ln="409" ElType=".P" desc="if(uninit_pointer_016_func_001(flag)==0)" rngLn="409">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 10&quot; always evaluates to true" ln="100" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="2031337821" lang="cpp" locType="sr" config="1" hash="-1972842154" locStartln="100" locStartPos="0" locEndLn="101" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" FirstElSrcRngStartln="96" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="97" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="96" srcRngStartPos="0" srcRngEndLn="97" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="96" ElType=".C" desc="void uninit_var_006 ()" rngLn="96">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="98" srcRngStartPos="0" srcRngEndLn="99" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="98" ElType="." desc="long a;" rngLn="98">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="99" srcRngStartPos="0" srcRngEndLn="100" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="99" ElType="!" desc="int flag =10;" rngLn="99">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="100" srcRngStartPos="0" srcRngEndLn="101" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="100" ElType=".P" desc="(flag==10)? (a = 1):(a = 5); /*Tool should not detect this line as error*/ /*No ERROR:Uninitialized Variable*/" rngLn="100">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;ret >= 0&quot; always evaluates to true" ln="244" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="977278758" lang="cpp" locType="sr" config="1" hash="-1972842154" locStartln="244" locStartPos="0" locEndLn="245" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" FirstElSrcRngStartln="236" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="237" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="236" ElType=".C" desc="void uninit_var_012 ()" rngLn="236">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="238" srcRngStartPos="0" srcRngEndLn="239" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="238" ElType="." desc="uninit_var_012_s_001 s,r;" rngLn="238">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="239" srcRngStartPos="0" srcRngEndLn="240" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="239" ElType="." desc="s.a = 2;" rngLn="239">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="240" srcRngStartPos="0" srcRngEndLn="241" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="240" ElType="." desc="s.b = 1;" rngLn="240">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="241" srcRngStartPos="0" srcRngEndLn="242" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="241" ElType="." desc="s.uninit = 2;" rngLn="241">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="242" srcRngStartPos="0" srcRngEndLn="243" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="242" ElType="." desc="int ret;" rngLn="242">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="243" srcRngStartPos="0" srcRngEndLn="244" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="243" ElType="!" desc="ret = uninit_var_012_func_001 (s);" rngLn="243">
          <ElDescList>
            <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="217" ElType="." desc="switch ( (s1.a + s1.b +s1.uninit) ) /*Tool should not detect this line as error*/ /*No ERROR:Uninitialized Variable*/" rngLn="217">
              <Props />
              <Anns>
                <Ann msg="Switch evaluation: s1.a + s1.b + s1.uninit (&quot;case 5&quot;)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="221" srcRngStartPos="0" srcRngEndLn="222" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="221" ElType="!" desc="return 5;" rngLn="221">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="244" srcRngStartPos="0" srcRngEndLn="245" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/uninit_var.c" srcRnghash="-1972842154" ln="244" ElType=".P" desc="if(ret >=0)" rngLn="244">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;unlock_without_lock_003_func_002(...) > 1&quot; always evaluates to true" ln="160" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-656434174" lang="cpp" locType="sr" config="1" hash="2087560161" locStartln="160" locStartPos="0" locEndLn="161" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" FirstElSrcRngStartln="157" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="158" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="157" srcRngStartPos="0" srcRngEndLn="158" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="157" ElType=".C" desc="void unlock_without_lock_003_func_001 (void *pram)" rngLn="157">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="160" ElType="!" desc="unlock_without_lock_003_func_002(...)" rngLn="160">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="176" ElType="!" desc="int unlock_without_lock_003_func_002 (int a )" rngLn="176">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="178" ElType="." desc="int ret = 0;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="179" ElType="." desc="if (a > 1) {" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="180" ElType="!" desc="ret = a++;" rngLn="180">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="184" ElType="!" desc="return ret;" rngLn="184">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="160" srcRngStartPos="0" srcRngEndLn="161" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="160" ElType=".P" desc="if (unlock_without_lock_003_func_002(10) >1) {" rngLn="160">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;unlock_without_lock_003_func_002(...) > 1&quot; always evaluates to true" ln="191" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-656434174" lang="cpp" locType="sr" config="1" hash="2087560161" locStartln="191" locStartPos="0" locEndLn="192" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" FirstElSrcRngStartln="187" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="188" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="187" ElType=".C" desc="void* unlock_without_lock_003_tsk_001 (void *pram)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="191" ElType="!" desc="unlock_without_lock_003_func_002(...)" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="176" ElType="!" desc="int unlock_without_lock_003_func_002 (int a )" rngLn="176">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="178" ElType="." desc="int ret = 0;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="179" ElType="." desc="if (a > 1) {" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="180" ElType="!" desc="ret = a++;" rngLn="180">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="184" ElType="!" desc="return ret;" rngLn="184">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="191" ElType=".P" desc="if(unlock_without_lock_003_func_002(10) >1) {" rngLn="191">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;unlock_without_lock_003_func_002(...) > 1&quot; always evaluates to true" ln="197" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-252273897" lang="cpp" locType="sr" config="1" hash="2087560161" locStartln="197" locStartPos="0" locEndLn="198" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" FirstElSrcRngStartln="187" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="188" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="187" srcRngStartPos="0" srcRngEndLn="188" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="187" ElType=".C" desc="void* unlock_without_lock_003_tsk_001 (void *pram)" rngLn="187">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="191" ElType="." desc="unlock_without_lock_003_func_002(...)" rngLn="191">
          <ElDescList>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="178" ElType="." desc="int ret = 0;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="179" ElType="." desc="if (a > 1) {" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="180" ElType="." desc="ret = a++;" rngLn="180">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="184" ElType="." desc="return ret;" rngLn="184">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="191" srcRngStartPos="0" srcRngEndLn="192" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="191" ElType="." desc="if(unlock_without_lock_003_func_002(10) >1) {" rngLn="191">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (unlock_without_lock_003_func_002(...) > 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="192" srcRngStartPos="0" srcRngEndLn="193" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="192" ElType="." desc="pthread_mutex_lock (&amp;unlock_without_lock_003_glb_mutex);" rngLn="192">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="194" srcRngStartPos="0" srcRngEndLn="195" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="194" ElType="." desc="unlock_without_lock_003_glb_data = (unlock_without_lock_003_glb_data) + 3.5;" rngLn="194">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="197" ElType="!" desc="unlock_without_lock_003_func_002(...)" rngLn="197">
          <ElDescList>
            <ElDesc srcRngStartln="176" srcRngStartPos="0" srcRngEndLn="177" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="176" ElType="!" desc="int unlock_without_lock_003_func_002 (int a )" rngLn="176">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="178" srcRngStartPos="0" srcRngEndLn="179" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="178" ElType="." desc="int ret = 0;" rngLn="178">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="179" srcRngStartPos="0" srcRngEndLn="180" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="179" ElType="." desc="if (a > 1) {" rngLn="179">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (a > 1) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="180" srcRngStartPos="0" srcRngEndLn="181" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="180" ElType="!" desc="ret = a++;" rngLn="180">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="184" srcRngStartPos="0" srcRngEndLn="185" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="184" ElType="!" desc="return ret;" rngLn="184">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="197" srcRngStartPos="0" srcRngEndLn="198" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="197" ElType=".P" desc="if(unlock_without_lock_003_func_002(10) > 1) {" rngLn="197">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;thread_set == 1&quot; always evaluates to false" ln="405" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1964806532" lang="cpp" locType="sr" config="1" hash="2087560161" locStartln="405" locStartPos="0" locEndLn="406" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" FirstElSrcRngStartln="398" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="399" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="398" srcRngStartPos="0" srcRngEndLn="399" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="398" ElType=".C" desc="void unlock_without_lock_006 ()" rngLn="398">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="400" srcRngStartPos="0" srcRngEndLn="401" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="400" ElType="!" desc="int thread_set = 0;" rngLn="400">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="402" srcRngStartPos="0" srcRngEndLn="403" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="402" ElType="." desc="pthread_t th1,th2;" rngLn="402">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="403" srcRngStartPos="0" srcRngEndLn="404" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="403" ElType="." desc="intptr_t t1 = 10;" rngLn="403">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="404" ElType="." desc="intptr_t t2 = 20;" rngLn="404">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="405" ElType=".P" desc="if ( thread_set == CREATE_THREAD)" rngLn="405">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;i != 6&quot; always evaluates to true" ln="535" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="1032219528" lang="cpp" locType="sr" config="1" hash="2087560161" locStartln="535" locStartPos="0" locEndLn="536" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" FirstElSrcRngStartln="522" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="523" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="522" ElType=".C" desc="void * unlock_without_lock_008_tsk_002(void *input)" rngLn="522">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="525" srcRngStartPos="0" srcRngEndLn="526" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="525" ElType="." desc="long ip;" rngLn="525">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="526" srcRngStartPos="0" srcRngEndLn="527" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="526" ElType="!" desc="int i=5;" rngLn="526">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="527" srcRngStartPos="0" srcRngEndLn="528" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="527" ElType="." desc="ip = (long)input;" rngLn="527">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="528" srcRngStartPos="0" srcRngEndLn="529" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="528" ElType="." desc="ip = ip *20;" rngLn="528">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="531" srcRngStartPos="0" srcRngEndLn="532" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="531" ElType="." desc="if (ip >= 0)" rngLn="531">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (ip >= 0) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="533" srcRngStartPos="0" srcRngEndLn="534" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="533" ElType="." desc="pthread_mutex_lock( &amp;unlock_without_lock_008_glb_mutex_2 );" rngLn="533">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="535" srcRngStartPos="0" srcRngEndLn="536" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/unlock_without_lock.c" srcRnghash="2087560161" ln="535" ElType=".P" desc="if(i!=6)" rngLn="535">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str1" ln="228" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="-291372182" lang="cpp" locType="sr" urgent="true" config="1" hash="197126672" locStartln="228" locStartPos="0" locEndLn="229" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="215" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="216" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="215" ElType=".C" desc="char *str1 = strdup(&quot;STRING33&quot;);" rngLn="215">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: str1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="216" ElType="." desc="if (!str1) return;" rngLn="216">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !str1 (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="217" ElType="." desc="char *str2 = strdup(&quot;STRING55&quot;);" rngLn="217">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="218" ElType="." desc="if (!str2) return;" rngLn="218">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !str2 (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="228" ElType=".P" desc="}" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="str1" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str1" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Memory not deallocated: str2" ln="228" ruleSAFMsg="Point where allocated memory is lost" auth="kali" sev="1" rule="BD-RES-LEAKS" ruleSCSCMsg="Point where memory is allocated" tool="c++test" id="1475873843" lang="cpp" locType="sr" urgent="true" config="1" hash="197126672" locStartln="228" locStartPos="0" locEndLn="229" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="217" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="218" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Allocated memory" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="215" srcRngStartPos="0" srcRngEndLn="216" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="215" ElType="." desc="char *str1 = strdup(&quot;STRING33&quot;);" rngLn="215">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="216" srcRngStartPos="0" srcRngEndLn="217" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="216" ElType="." desc="if (!str1) return;" rngLn="216">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !str1 (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="217" srcRngStartPos="0" srcRngEndLn="218" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="217" ElType=".C" desc="char *str2 = strdup(&quot;STRING55&quot;);" rngLn="217">
          <Props>
            <Prop key="Tracked variables" val="str2" />
          </Props>
          <Anns>
            <Ann msg="Point where memory is allocated" kind="cause" />
            <Ann msg="Allocated memory: str2" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="218" srcRngStartPos="0" srcRngEndLn="219" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="218" ElType="." desc="if (!str2) return;" rngLn="218">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !str2 (assuming false)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="219" srcRngStartPos="0" srcRngEndLn="220" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="219" ElType="." desc="char *str3 = (char *) malloc(20*sizeof(char));" rngLn="219">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="220" srcRngStartPos="0" srcRngEndLn="221" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="220" ElType="." desc="if (!str3) return;" rngLn="220">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: !str3 (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="228" srcRngStartPos="0" srcRngEndLn="229" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="228" ElType=".P" desc="}" rngLn="228">
          <Props>
            <Prop key="Tracked variables" val="str2" />
          </Props>
          <Anns>
            <Ann msg="Allocated memory: str2" kind="var" />
            <Ann msg="Point where allocated memory is lost" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;st1&quot; may possibly be null" ln="330" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1256331178" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="330" locStartPos="0" locEndLn="331" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="347" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="348" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="346" srcRngStartPos="0" srcRngEndLn="347" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="346" ElType="." desc="wrong_arguments_func_pointer_012_s_001 st,*st1;" rngLn="346">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="347" ElType=".C" desc="malloc(...)" rngLn="347">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="347" srcRngStartPos="0" srcRngEndLn="348" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="347" ElType="!" desc="st1 = (wrong_arguments_func_pointer_012_s_001 *)malloc(1*sizeof(wrong_arguments_func_pointer_012_s_001));" rngLn="347">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="349" srcRngStartPos="0" srcRngEndLn="350" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="349" ElType="." desc="void (*fptr)(wrong_arguments_func_pointer_012_s_001*);" rngLn="349">
          <Props>
            <Prop key="Tracked variables" val="st1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: st1" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="350" srcRngStartPos="0" srcRngEndLn="351" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="350" ElType="." desc="fptr = wrong_arguments_func_pointer_012_func_001;" rngLn="350">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="351" srcRngStartPos="0" srcRngEndLn="352" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="351" ElType="." desc="fptr(&amp;st); /*Tool should not detect this line as error*//*No ERROR:Wrong arguments passed to a function pointer*/" rngLn="351">
          <ElDescList>
            <ElDesc srcRngStartln="322" srcRngStartPos="0" srcRngEndLn="323" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="322" ElType="." desc="memset(st, 0, sizeof(*st));" rngLn="322">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="323" srcRngStartPos="0" srcRngEndLn="324" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="323" ElType="." desc="st->a = 1;" rngLn="323">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="353" srcRngStartPos="0" srcRngEndLn="354" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="353" ElType="." desc="void (*fptr1)(wrong_arguments_func_pointer_012_s_001,wrong_arguments_func_pointer_012_s_001 *);" rngLn="353">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="354" srcRngStartPos="0" srcRngEndLn="355" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="354" ElType="." desc="fptr1 = wrong_arguments_func_pointer_012_func_002;" rngLn="354">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="355" srcRngStartPos="0" srcRngEndLn="356" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="355" ElType="!" desc="fptr1(st,st1);" rngLn="355">
          <ElDescList>
            <ElDesc srcRngStartln="328" srcRngStartPos="0" srcRngEndLn="329" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="328" ElType="." desc="int temp=0;" rngLn="328">
              <Props>
                <Prop key="Tracked variables" val="st1" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: st1" kind="var" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="329" srcRngStartPos="0" srcRngEndLn="330" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="329" ElType="." desc="int i;" rngLn="329">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="330" srcRngStartPos="0" srcRngEndLn="331" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="330" ElType=".P" desc="memset(st1, 0, sizeof(*st1));" rngLn="330">
              <Props>
                <Prop key="Tracked variables" val="st1" />
              </Props>
              <Anns>
                <Ann msg="Null value carrier: st1" kind="var" />
                <Ann msg="Null pointer dereferencing point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Possibly accessing array &quot;a&quot; out of bounds at index 5. Correct index(es): [0...4]" ln="409" ruleSAFMsg="Out of bounds access point" auth="kali" sev="2" rule="BD-PB-ARRAY" ruleSCSCMsg="Start of the path" tool="c++test" id="-646337600" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="409" locStartPos="0" locEndLn="410" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="412" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="413" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="412" ElType=".C" desc="void wrong_arguments_func_pointer_014 ()" rngLn="412">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="414" ElType="!" desc="long arr[5];" rngLn="414">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="415" ElType="." desc="wrong_arguments_func_pointer_014_func_001(...)" rngLn="415">
          <ElDescList>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="394" ElType="." desc="int ret ;" rngLn="394">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="395" ElType="." desc="if (flag ==0)" rngLn="395">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="396" ElType="." desc="ret = 0;" rngLn="396">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="399" ElType="." desc="return ret;" rngLn="399">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="415" ElType="." desc="if(wrong_arguments_func_pointer_014_func_001(0) == 0)" rngLn="415">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (wrong_arguments_func_pointer_014_func_001(...) == 0) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="417" srcRngStartPos="0" srcRngEndLn="418" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="417" ElType="." desc="long (*fptr)(long [],int);" rngLn="417">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="418" srcRngStartPos="0" srcRngEndLn="419" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="418" ElType="." desc="long a;" rngLn="418">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="419" srcRngStartPos="0" srcRngEndLn="420" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="419" ElType="." desc="fptr = wrong_arguments_func_pointer_014_func_002;" rngLn="419">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="420" srcRngStartPos="0" srcRngEndLn="421" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="420" ElType="!" desc="a =fptr(arr,5); /*Tool should not detect this line as error*//*No ERROR:Wrong arguments passed to a function pointer*/" rngLn="420">
          <ElDescList>
            <ElDesc srcRngStartln="404" srcRngStartPos="0" srcRngEndLn="405" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="404" ElType="." desc="int i;" rngLn="404">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="405" ElType="." desc="for(i=0;i&lt;max;i++)" rngLn="405">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; max) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="407" srcRngStartPos="0" srcRngEndLn="408" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="407" ElType="." desc="a[i] = i;" rngLn="407">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="405" ElType="." desc="for(i=0;i&lt;max;i++)" rngLn="405">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; max) (true)" kind="condEval" />
                <Ann msg="Entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="407" srcRngStartPos="0" srcRngEndLn="408" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="407" ElType="." desc="a[i] = i;" rngLn="407">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="405" srcRngStartPos="0" srcRngEndLn="406" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="405" ElType="." desc="for(i=0;i&lt;max;i++)" rngLn="405">
              <Props />
              <Anns>
                <Ann msg="Loop condition evaluation: (i &lt; max) (false)" kind="condEval" />
                <Ann msg="Not entering the loop" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="409" srcRngStartPos="0" srcRngEndLn="410" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="409" ElType=".P" desc="return a[i];" rngLn="409">
              <Props />
              <Anns>
                <Ann msg="Out of bounds access point" kind="point" />
              </Anns>
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;wrong_arguments_func_pointer_014_func_001(...) == 0&quot; always evaluates to true" ln="415" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1822501116" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="415" locStartPos="0" locEndLn="416" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="412" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="413" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="412" srcRngStartPos="0" srcRngEndLn="413" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="412" ElType=".C" desc="void wrong_arguments_func_pointer_014 ()" rngLn="412">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="414" srcRngStartPos="0" srcRngEndLn="415" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="414" ElType="." desc="long arr[5];" rngLn="414">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="415" ElType="!" desc="wrong_arguments_func_pointer_014_func_001(...)" rngLn="415">
          <ElDescList>
            <ElDesc srcRngStartln="394" srcRngStartPos="0" srcRngEndLn="395" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="394" ElType="." desc="int ret ;" rngLn="394">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="395" srcRngStartPos="0" srcRngEndLn="396" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="395" ElType="." desc="if (flag ==0)" rngLn="395">
              <Props />
              <Anns>
                <Ann msg="Condition evaluation: (flag == 0) (true)" kind="condEval" />
              </Anns>
            </ElDesc>
            <ElDesc srcRngStartln="396" srcRngStartPos="0" srcRngEndLn="397" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="396" ElType="!" desc="ret = 0;" rngLn="396">
              <Props />
            </ElDesc>
            <ElDesc srcRngStartln="399" srcRngStartPos="0" srcRngEndLn="400" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="399" ElType="!" desc="return ret;" rngLn="399">
              <Props />
            </ElDesc>
          </ElDescList>
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="415" srcRngStartPos="0" srcRngEndLn="416" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="415" ElType=".P" desc="if(wrong_arguments_func_pointer_014_func_001(0) == 0)" rngLn="415">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;wrong_arguments_func_pointer_015_dst1_gbl&quot; may possibly be null" ln="447" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="1871480566" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="447" locStartPos="0" locEndLn="448" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="444" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="445" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="441" srcRngStartPos="0" srcRngEndLn="442" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="441" ElType="." desc="char str2[][15] = {{&quot;STRING&quot;}," rngLn="441">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="443" srcRngStartPos="0" srcRngEndLn="444" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="443" ElType="." desc="int i;" rngLn="443">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="444" ElType=".C" desc="malloc(...)" rngLn="444">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="444" srcRngStartPos="0" srcRngEndLn="445" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="444" ElType="!" desc="wrong_arguments_func_pointer_015_dst1_gbl = (char**) malloc(5*sizeof(char*));" rngLn="444">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="445" srcRngStartPos="0" srcRngEndLn="446" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="445" ElType="." desc="for(i=0;i&lt;5;i++)" rngLn="445">
          <Props>
            <Prop key="Tracked variables" val="wrong_arguments_func_pointer_015_dst1_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: wrong_arguments_func_pointer_015_dst1_gbl" kind="var" />
            <Ann msg="Loop condition evaluation: (i &lt; 5) (true)" kind="condEval" />
            <Ann msg="Entering the loop" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="447" srcRngStartPos="0" srcRngEndLn="448" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="447" ElType=".P" desc="wrong_arguments_func_pointer_015_dst1_gbl[i]=(char*) malloc(15*sizeof(char));" rngLn="447">
          <Props>
            <Prop key="Tracked variables" val="wrong_arguments_func_pointer_015_dst1_gbl" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: wrong_arguments_func_pointer_015_dst1_gbl" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="514" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="-1600457397" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="514" locStartPos="0" locEndLn="515" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="503" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="504" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="503" srcRngStartPos="0" srcRngEndLn="504" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="503" ElType=".C" desc="int wrong_arguments_func_pointer_017_func_002 (int flag,float flag2)" rngLn="503">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="505" ElType="." desc="int ret = 0;" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="506" ElType="!" desc="if (flag == 1)" rngLn="506">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="508" ElType="." desc="goto my_label;" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="513" ElType="." desc="my_label:" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="514" ElType=".P" desc="if (flag == 1)" rngLn="514">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="Condition &quot;flag == 1&quot; always evaluates to true" ln="523" ruleSAFMsg="Point where senseless condition is used" auth="kali" sev="2" rule="BD-PB-CC" ruleSCSCMsg="Start of the path" tool="c++test" id="884217819" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="523" locStartPos="0" locEndLn="524" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="503" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="504" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props />
      <ElDescList>
        <ElDesc srcRngStartln="503" srcRngStartPos="0" srcRngEndLn="504" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="503" ElType=".C" desc="int wrong_arguments_func_pointer_017_func_002 (int flag,float flag2)" rngLn="503">
          <Props />
          <Anns>
            <Ann msg="Start of the path" kind="cause" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="505" srcRngStartPos="0" srcRngEndLn="506" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="505" ElType="." desc="int ret = 0;" rngLn="505">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="506" srcRngStartPos="0" srcRngEndLn="507" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="506" ElType="!" desc="if (flag == 1)" rngLn="506">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (assuming true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="508" srcRngStartPos="0" srcRngEndLn="509" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="508" ElType="." desc="goto my_label;" rngLn="508">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="513" srcRngStartPos="0" srcRngEndLn="514" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="513" ElType="." desc="my_label:" rngLn="513">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="514" srcRngStartPos="0" srcRngEndLn="515" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="514" ElType="." desc="if (flag == 1)" rngLn="514">
          <Props />
          <Anns>
            <Ann msg="Condition evaluation: (flag == 1) (true)" kind="condEval" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="516" srcRngStartPos="0" srcRngEndLn="517" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="516" ElType="." desc="wrong_arguments_func_pointer_017_func_gbl = wrong_arguments_func_pointer_017_func_001;" rngLn="516">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="518" srcRngStartPos="0" srcRngEndLn="519" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="518" ElType="." desc="goto my_label2;" rngLn="518">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="522" srcRngStartPos="0" srcRngEndLn="523" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="522" ElType="." desc="my_label2:" rngLn="522">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="523" srcRngStartPos="0" srcRngEndLn="524" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="523" ElType=".P" desc="if (flag == 1)" rngLn="523">
          <Props />
          <Anns>
            <Ann msg="Point where senseless condition is used" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;st1&quot; may possibly be null" ln="588" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="-316232676" lang="cpp" locType="sr" config="1" hash="197126672" locStartln="588" locStartPos="0" locEndLn="589" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" FirstElSrcRngStartln="587" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="588" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="586" srcRngStartPos="0" srcRngEndLn="587" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="586" ElType="." desc="wrong_arguments_func_pointer_018_s_001 st,*st1;" rngLn="586">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="587" srcRngStartPos="0" srcRngEndLn="588" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="587" ElType=".C" desc="malloc(...)" rngLn="587">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="587" srcRngStartPos="0" srcRngEndLn="588" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="587" ElType="!" desc="st1 = (wrong_arguments_func_pointer_018_s_001 *)malloc(1*sizeof(wrong_arguments_func_pointer_018_s_001));" rngLn="587">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="588" srcRngStartPos="0" srcRngEndLn="589" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/wrong_arguments_func_pointer.c" srcRnghash="197126672" ln="588" ElType=".P" desc="memset(st1, 0, sizeof(*st1));" rngLn="588">
          <Props>
            <Prop key="Tracked variables" val="st1" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: st1" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
    <FlowViol msg="&quot;zero_division_016_gbl_divisor&quot; may possibly be null" ln="237" ruleSAFMsg="Null pointer dereferencing point" auth="kali" sev="1" rule="BD-PB-NP" ruleSCSCMsg="Source of null value" tool="c++test" id="946492509" lang="cpp" locType="sr" config="1" hash="498516290" locStartln="237" locStartPos="0" locEndLn="238" locEndPos="0" locFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c" FirstElSrcRngStartln="236" FirstElSrcRngStartPos="0" FirstElSrcRngEndLn="237" FirstElSrcRngEndPos="0" FirstElSrcRngFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c">
      <Props>
        <Prop key="Tracked variables" val="Null value carrier" />
      </Props>
      <ElDescList>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c" srcRnghash="498516290" ln="236" ElType=".C" desc="malloc(...)" rngLn="236">
          <Props>
            <Prop key="Tracked variables" val="malloc(...)" />
          </Props>
          <Anns>
            <Ann msg="Source of null value" kind="cause" />
            <Ann msg="Null value carrier: malloc(...)" kind="var" />
          </Anns>
        </ElDesc>
        <ElDesc srcRngStartln="236" srcRngStartPos="0" srcRngEndLn="237" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c" srcRnghash="498516290" ln="236" ElType="!" desc="zero_division_016_gbl_divisor = malloc(1*sizeof(int));" rngLn="236">
          <Props />
        </ElDesc>
        <ElDesc srcRngStartln="237" srcRngStartPos="0" srcRngEndLn="238" srcRngEndPos="0" srcRngFile="/ITC-Benchmarks/02.wo_Defects/zero_division.c" srcRnghash="498516290" ln="237" ElType=".P" desc="*zero_division_016_gbl_divisor= 1;" rngLn="237">
          <Props>
            <Prop key="Tracked variables" val="zero_division_016_gbl_divisor" />
          </Props>
          <Anns>
            <Ann msg="Null value carrier: zero_division_016_gbl_divisor" kind="var" />
            <Ann msg="Null pointer dereferencing point" kind="point" />
          </Anns>
        </ElDesc>
      </ElDescList>
    </FlowViol>
  </StdViols>

      <Supps />
      
      
   </CodingStandards>
   <Metrics ownerId="com.parasoft.xtest.checkers.api.standards" time="0:00:27">
      
   </Metrics>
   <AssocUrls />
</ResultsSession>